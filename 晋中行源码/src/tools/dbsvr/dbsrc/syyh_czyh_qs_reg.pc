#include<stdio.h>
#include<varargs.h>

#define EXTERN
#include"global.h"


EXEC SQL INCLUDE SQLCA;
#include"syyh_czyh_qs_reg_c.h"
#define CM_SQLCODE sqlca.sqlcode==1403?100:(sqlca.sqlcode==-1?-239:sqlca.sqlcode)

int syyh_czyh_qs_reg_con ( struct syyh_czyh_qs_reg_c , char *);
int put_mystery( char *, char * );
char *zip_tail(char *s);
static void zip_struct(struct syyh_czyh_qs_reg_c* ps){
	zip_tail(ps->rowid);
	zip_tail(ps->flag);
	zip_tail(ps->tx_code);
	zip_tail(ps->tel);
	zip_tail(ps->qs_flag);
	zip_tail(ps->br_no);
}
int Syyh_czyh_qs_reg_Debug(struct syyh_czyh_qs_reg_c *ps){
	vtcp_log("syyh_czyh_qs_reg_c.rowid=[%s]\n",ps->rowid);
	vtcp_log("syyh_czyh_qs_reg_c.tx_date=[%ld]\n",ps->tx_date);
	vtcp_log("syyh_czyh_qs_reg_c.flag=[%s]\n",ps->flag);
	vtcp_log("syyh_czyh_qs_reg_c.trace_no=[%ld]\n",ps->trace_no);
	vtcp_log("syyh_czyh_qs_reg_c.tx_code=[%s]\n",ps->tx_code);
	vtcp_log("syyh_czyh_qs_reg_c.wz_amt=[%f]\n",ps->wz_amt);
	vtcp_log("syyh_czyh_qs_reg_c.lz_amt=[%f]\n",ps->lz_amt);
	vtcp_log("syyh_czyh_qs_reg_c.zc_amt=[%f]\n",ps->zc_amt);
	vtcp_log("syyh_czyh_qs_reg_c.tel=[%s]\n",ps->tel);
	vtcp_log("syyh_czyh_qs_reg_c.qs_trace_no=[%ld]\n",ps->qs_trace_no);
	vtcp_log("syyh_czyh_qs_reg_c.qs_time=[%ld]\n",ps->qs_time);
	vtcp_log("syyh_czyh_qs_reg_c.qs_flag=[%s]\n",ps->qs_flag);
	vtcp_log("syyh_czyh_qs_reg_c.br_no=[%s]\n",ps->br_no);
	return(0);
}
/*****************************************************************************/
/****                              查询函数部分[]                       ****/
/*****************************************************************************/
int Syyh_czyh_qs_reg_Sel(reply,syyh_czyh_qs_reg_c,fmtstr,va_alist)
char    *reply;
struct  syyh_czyh_qs_reg_c *syyh_czyh_qs_reg_c;
char    *fmtstr;
va_dcl
{
	int   ret;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	ret = Syyh_czyh_qs_reg_Dec_Sel( reply , "%s" , wherelist );
	if (ret){
		WRITEMSG
		return ret;
	}
	ret = Syyh_czyh_qs_reg_Fet_Sel( syyh_czyh_qs_reg_c , reply );
	if (ret){
		WRITEMSG
		return ret;
	}

	Syyh_czyh_qs_reg_Clo_Sel();

	return 0;
}



char *key_strcat(char *,char *);
int Syyh_czyh_qs_reg_Dec_Sel ( reply , fmtstr , va_alist )
char    *reply;
char    *fmtstr;
va_dcl
{
	EXEC    SQL BEGIN   DECLARE SECTION;
		char    comm[1000];
	EXEC    SQL END     DECLARE SECTION;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	sprintf ( comm ," SELECT rowid,syyh_czyh_qs_reg.* FROM syyh_czyh_qs_reg WHERE  ");
	key_strcat(comm,wherelist);

	vtcp_log("%s,%d,SQLSTR=[%s]\n",__FILE__,__LINE__,comm);
	sqlca.sqlcode=0;
	EXEC SQL PREPARE syyh_czyh_qs_reg_sel FROM :comm;
	EXEC SQL DECLARE sel_syyh_czyh_qs_reg CURSOR FOR syyh_czyh_qs_reg_sel;

	EXEC SQL OPEN sel_syyh_czyh_qs_reg;
	if (sqlca.sqlcode){
		sprintf(acErrMsg,"OPEN syyh_czyh_qs_reg error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D102" );
		return CM_SQLCODE;
	}

	return 0;
}

int Syyh_czyh_qs_reg_Fet_Sel ( struct syyh_czyh_qs_reg_c *syyh_czyh_qs_reg_c , char * reply )
{

	int   ret;

	EXEC SQL FETCH sel_syyh_czyh_qs_reg INTO :syyh_czyh_qs_reg_c;
	if (sqlca.sqlcode&&sqlca.sqlcode!=1403){
		sprintf(acErrMsg,"Fetch syyh_czyh_qs_reg error!!! %d",sqlca.sqlcode);
		WRITEMSG
		strcpy (reply,"D103");
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == 1403 ){
		sprintf(acErrMsg,"Fetch syyh_czyh_qs_reg finished!!! %d",sqlca.sqlcode);
		WRITEMSG
		strcpy (reply,"D104");
		return CM_SQLCODE;
	}
	zip_struct(syyh_czyh_qs_reg_c);

	return 0;
}

int Syyh_czyh_qs_reg_Clo_Sel (){
	EXEC SQL CLOSE sel_syyh_czyh_qs_reg;
	return 0;
}

/*****************************************************************************/
/****                              修改函数部分                           ****/
/*****************************************************************************/
int Syyh_czyh_qs_reg_Dec_Upd( reply , fmtstr , va_alist)
char    *reply;
char    *fmtstr;
va_dcl
{
	EXEC    SQL BEGIN   DECLARE SECTION;
		char    comm[1000];
	EXEC    SQL END     DECLARE SECTION;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	sprintf ( comm , "SELECT rowid,syyh_czyh_qs_reg.* FROM syyh_czyh_qs_reg WHERE  ");
	key_strcat(comm,wherelist);
	strcat(comm," FOR UPDATE WAIT 5 ");
	vtcp_log("%s,%d,SQLSTR=[%s]\n",__FILE__,__LINE__,comm);
	sqlca.sqlcode=0;
	EXEC SQL PREPARE syyh_czyh_qs_reg_upd FROM :comm;

	EXEC SQL DECLARE upd_syyh_czyh_qs_reg CURSOR FOR syyh_czyh_qs_reg_upd;

	EXEC SQL OPEN upd_syyh_czyh_qs_reg;
	if (sqlca.sqlcode){
		sprintf(acErrMsg,"open syyh_czyh_qs_reg error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D102" );
		return CM_SQLCODE;
	}

	return 0;
}

int Syyh_czyh_qs_reg_Fet_Upd( struct syyh_czyh_qs_reg_c *syyh_czyh_qs_reg_c , char * reply ){
	int   ret;

	EXEC SQL FETCH upd_syyh_czyh_qs_reg INTO :syyh_czyh_qs_reg_c;
	if ( sqlca.sqlcode && sqlca.sqlcode!=1403 ){
		sprintf(acErrMsg,"FETCH upd syyh_czyh_qs_reg error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D103" );
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == 1403 ){
		sprintf(acErrMsg,"FETCH syyh_czyh_qs_reg finished %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D104" );
		return CM_SQLCODE;
	}
	zip_struct(syyh_czyh_qs_reg_c);

	return 0;
}

int Syyh_czyh_qs_reg_Upd_Upd( struct syyh_czyh_qs_reg_c syyh_czyh_qs_reg_c , char * reply){
	int ret;

	EXEC SQL UPDATE syyh_czyh_qs_reg SET tx_date=:syyh_czyh_qs_reg_c.tx_date,
			flag=:syyh_czyh_qs_reg_c.flag,
			trace_no=:syyh_czyh_qs_reg_c.trace_no,
			tx_code=:syyh_czyh_qs_reg_c.tx_code,
			wz_amt=:syyh_czyh_qs_reg_c.wz_amt,
			lz_amt=:syyh_czyh_qs_reg_c.lz_amt,
			zc_amt=:syyh_czyh_qs_reg_c.zc_amt,
			tel=:syyh_czyh_qs_reg_c.tel,
			qs_trace_no=:syyh_czyh_qs_reg_c.qs_trace_no,
			qs_time=:syyh_czyh_qs_reg_c.qs_time,
			qs_flag=:syyh_czyh_qs_reg_c.qs_flag,
			br_no=:syyh_czyh_qs_reg_c.br_no
	WHERE rowid=:syyh_czyh_qs_reg_c.rowid;
	if ( sqlca.sqlcode && sqlca.sqlcode != 1403 ){
		sprintf(acErrMsg,"UPDATE syyh_czyh_qs_reg error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D105" );
		return CM_SQLCODE;
	}

	return 0;
}


int Syyh_czyh_qs_reg_Del_Upd(struct syyh_czyh_qs_reg_c syyh_czyh_qs_reg_c , char * reply  ){

	EXEC SQL DELETE FROM syyh_czyh_qs_reg WHERE rowid=:syyh_czyh_qs_reg_c.rowid;
	if ( sqlca.sqlcode ){
		sprintf(acErrMsg,"DELETE syyh_czyh_qs_reg error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D105" );
		return CM_SQLCODE;
	}

	return 0;
}

int Syyh_czyh_qs_reg_Clo_Upd( ){
	EXEC SQL CLOSE upd_syyh_czyh_qs_reg;
	return 0;
}

/*****************************************************************************/
/****                              增加函数部分                           ****/
/*****************************************************************************/
int Syyh_czyh_qs_reg_Ins( struct syyh_czyh_qs_reg_c syyh_czyh_qs_reg_c , char * reply ){
	int ret;

	EXEC SQL INSERT INTO syyh_czyh_qs_reg VALUES (:syyh_czyh_qs_reg_c.tx_date,
			:syyh_czyh_qs_reg_c.flag,
			:syyh_czyh_qs_reg_c.trace_no,
			:syyh_czyh_qs_reg_c.tx_code,
			:syyh_czyh_qs_reg_c.wz_amt,
			:syyh_czyh_qs_reg_c.lz_amt,
			:syyh_czyh_qs_reg_c.zc_amt,
			:syyh_czyh_qs_reg_c.tel,
			:syyh_czyh_qs_reg_c.qs_trace_no,
			:syyh_czyh_qs_reg_c.qs_time,
			:syyh_czyh_qs_reg_c.qs_flag,
			:syyh_czyh_qs_reg_c.br_no);
	if ( sqlca.sqlcode && sqlca.sqlcode != -1 )
	{
		sprintf(acErrMsg,"INSERT syyh_czyh_qs_reg error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D107" );
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == -1 )
	{
		sprintf(acErrMsg,"INSERT syyh_czyh_qs_reg error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D108" );
		return CM_SQLCODE;
	}

	return 0;
}
