#include<stdio.h>
#include<varargs.h>

#define EXTERN
#include"global.h"


EXEC SQL INCLUDE SQLCA;
#include"gl_oprt_dyn_c.h"
#define CM_SQLCODE sqlca.sqlcode==1403?100:(sqlca.sqlcode==-1?-239:sqlca.sqlcode)

int gl_oprt_dyn_con ( struct gl_oprt_dyn_c , char *);
int put_mystery( char *, char * );
char *zip_tail(char *s);
static void zip_struct(struct gl_oprt_dyn_c* ps){
	zip_tail(ps->rowid);
	zip_tail(ps->br_no);
}
int Gl_oprt_dyn_Debug(struct gl_oprt_dyn_c *ps){
	vtcp_log("gl_oprt_dyn_c.rowid=[%s]\n",ps->rowid);
	vtcp_log("gl_oprt_dyn_c.date=[%ld]\n",ps->date);
	vtcp_log("gl_oprt_dyn_c.br_no=[%s]\n",ps->br_no);
	vtcp_log("gl_oprt_dyn_c.cr_de_bal=[%f]\n",ps->cr_de_bal);
	vtcp_log("gl_oprt_dyn_c.ys_de_bal=[%f]\n",ps->ys_de_bal);
	vtcp_log("gl_oprt_dyn_c.yb_de_bal=[%f]\n",ps->yb_de_bal);
	vtcp_log("gl_oprt_dyn_c.cr_de_bal1=[%f]\n",ps->cr_de_bal1);
	vtcp_log("gl_oprt_dyn_c.ys_de_bal1=[%f]\n",ps->ys_de_bal1);
	vtcp_log("gl_oprt_dyn_c.yb_de_bal1=[%f]\n",ps->yb_de_bal1);
	vtcp_log("gl_oprt_dyn_c.cr_de_bal2=[%f]\n",ps->cr_de_bal2);
	vtcp_log("gl_oprt_dyn_c.ys_de_bal2=[%f]\n",ps->ys_de_bal2);
	vtcp_log("gl_oprt_dyn_c.yb_de_bal2=[%f]\n",ps->yb_de_bal2);
	vtcp_log("gl_oprt_dyn_c.cr_de_bal3=[%f]\n",ps->cr_de_bal3);
	vtcp_log("gl_oprt_dyn_c.ys_de_bal3=[%f]\n",ps->ys_de_bal3);
	vtcp_log("gl_oprt_dyn_c.yb_de_bal3=[%f]\n",ps->yb_de_bal3);
	vtcp_log("gl_oprt_dyn_c.cr_de_bal4=[%f]\n",ps->cr_de_bal4);
	vtcp_log("gl_oprt_dyn_c.ys_de_bal4=[%f]\n",ps->ys_de_bal4);
	vtcp_log("gl_oprt_dyn_c.yb_de_bal4=[%f]\n",ps->yb_de_bal4);
	vtcp_log("gl_oprt_dyn_c.cr_de_bal5=[%f]\n",ps->cr_de_bal5);
	vtcp_log("gl_oprt_dyn_c.ys_de_bal5=[%f]\n",ps->ys_de_bal5);
	vtcp_log("gl_oprt_dyn_c.yb_de_bal5=[%f]\n",ps->yb_de_bal5);
	vtcp_log("gl_oprt_dyn_c.cr_de_bal6=[%f]\n",ps->cr_de_bal6);
	vtcp_log("gl_oprt_dyn_c.ys_de_bal6=[%f]\n",ps->ys_de_bal6);
	vtcp_log("gl_oprt_dyn_c.yb_de_bal6=[%f]\n",ps->yb_de_bal6);
	vtcp_log("gl_oprt_dyn_c.cr_ln_bal=[%f]\n",ps->cr_ln_bal);
	vtcp_log("gl_oprt_dyn_c.ys_ln_bal=[%f]\n",ps->ys_ln_bal);
	vtcp_log("gl_oprt_dyn_c.yb_ln_bal=[%f]\n",ps->yb_ln_bal);
	vtcp_log("gl_oprt_dyn_c.cr_ln_bal1=[%f]\n",ps->cr_ln_bal1);
	vtcp_log("gl_oprt_dyn_c.ys_ln_bal1=[%f]\n",ps->ys_ln_bal1);
	vtcp_log("gl_oprt_dyn_c.yb_ln_bal1=[%f]\n",ps->yb_ln_bal1);
	vtcp_log("gl_oprt_dyn_c.cr_ln_bal2=[%f]\n",ps->cr_ln_bal2);
	vtcp_log("gl_oprt_dyn_c.ys_ln_bal2=[%f]\n",ps->ys_ln_bal2);
	vtcp_log("gl_oprt_dyn_c.yb_ln_bal2=[%f]\n",ps->yb_ln_bal2);
	vtcp_log("gl_oprt_dyn_c.cr_ln_bal3=[%f]\n",ps->cr_ln_bal3);
	vtcp_log("gl_oprt_dyn_c.ys_ln_bal3=[%f]\n",ps->ys_ln_bal3);
	vtcp_log("gl_oprt_dyn_c.yb_ln_bal3=[%f]\n",ps->yb_ln_bal3);
	vtcp_log("gl_oprt_dyn_c.cr_ln_bal4=[%f]\n",ps->cr_ln_bal4);
	vtcp_log("gl_oprt_dyn_c.ys_ln_bal4=[%f]\n",ps->ys_ln_bal4);
	vtcp_log("gl_oprt_dyn_c.yb_ln_bal4=[%f]\n",ps->yb_ln_bal4);
	vtcp_log("gl_oprt_dyn_c.cr_ln_bal5=[%f]\n",ps->cr_ln_bal5);
	vtcp_log("gl_oprt_dyn_c.ys_ln_bal5=[%f]\n",ps->ys_ln_bal5);
	vtcp_log("gl_oprt_dyn_c.yb_ln_bal5=[%f]\n",ps->yb_ln_bal5);
	return(0);
}
/*****************************************************************************/
/****                              查询函数部分[]                       ****/
/*****************************************************************************/
int Gl_oprt_dyn_Sel(reply,gl_oprt_dyn_c,fmtstr,va_alist)
char    *reply;
struct  gl_oprt_dyn_c *gl_oprt_dyn_c;
char    *fmtstr;
va_dcl
{
	int   ret;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	ret = Gl_oprt_dyn_Dec_Sel( reply , "%s" , wherelist );
	if (ret){
		WRITEMSG
		return ret;
	}
	ret = Gl_oprt_dyn_Fet_Sel( gl_oprt_dyn_c , reply );
	if (ret){
		WRITEMSG
		return ret;
	}

	Gl_oprt_dyn_Clo_Sel();

	return 0;
}



char *key_strcat(char *,char *);
int Gl_oprt_dyn_Dec_Sel ( reply , fmtstr , va_alist )
char    *reply;
char    *fmtstr;
va_dcl
{
	EXEC    SQL BEGIN   DECLARE SECTION;
		char    comm[1000];
	EXEC    SQL END     DECLARE SECTION;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	sprintf ( comm ," SELECT rowid,gl_oprt_dyn.* FROM gl_oprt_dyn WHERE  ");
	key_strcat(comm,wherelist);

	vtcp_log("%s,%d,SQLSTR=[%s]\n",__FILE__,__LINE__,comm);
	sqlca.sqlcode=0;
	EXEC SQL PREPARE gl_oprt_dyn_sel FROM :comm;
	EXEC SQL DECLARE sel_gl_oprt_dyn CURSOR FOR gl_oprt_dyn_sel;

	EXEC SQL OPEN sel_gl_oprt_dyn;
	if (sqlca.sqlcode){
		sprintf(acErrMsg,"OPEN gl_oprt_dyn error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D102" );
		return CM_SQLCODE;
	}

	return 0;
}

int Gl_oprt_dyn_Fet_Sel ( struct gl_oprt_dyn_c *gl_oprt_dyn_c , char * reply )
{

	int   ret;

	EXEC SQL FETCH sel_gl_oprt_dyn INTO :gl_oprt_dyn_c;
	if (sqlca.sqlcode&&sqlca.sqlcode!=1403){
		sprintf(acErrMsg,"Fetch gl_oprt_dyn error!!! %d",sqlca.sqlcode);
		WRITEMSG
		strcpy (reply,"D103");
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == 1403 ){
		sprintf(acErrMsg,"Fetch gl_oprt_dyn finished!!! %d",sqlca.sqlcode);
		WRITEMSG
		strcpy (reply,"D104");
		return CM_SQLCODE;
	}
	zip_struct(gl_oprt_dyn_c);

	return 0;
}

int Gl_oprt_dyn_Clo_Sel (){
	EXEC SQL CLOSE sel_gl_oprt_dyn;
	return 0;
}

/*****************************************************************************/
/****                              修改函数部分                           ****/
/*****************************************************************************/
int Gl_oprt_dyn_Dec_Upd( reply , fmtstr , va_alist)
char    *reply;
char    *fmtstr;
va_dcl
{
	EXEC    SQL BEGIN   DECLARE SECTION;
		char    comm[1000];
	EXEC    SQL END     DECLARE SECTION;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	sprintf ( comm , "SELECT rowid,gl_oprt_dyn.* FROM gl_oprt_dyn WHERE  ");
	key_strcat(comm,wherelist);
	strcat(comm," FOR UPDATE WAIT 5 ");
	vtcp_log("%s,%d,SQLSTR=[%s]\n",__FILE__,__LINE__,comm);
	sqlca.sqlcode=0;
	EXEC SQL PREPARE gl_oprt_dyn_upd FROM :comm;

	EXEC SQL DECLARE upd_gl_oprt_dyn CURSOR FOR gl_oprt_dyn_upd;

	EXEC SQL OPEN upd_gl_oprt_dyn;
	if (sqlca.sqlcode){
		sprintf(acErrMsg,"open gl_oprt_dyn error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D102" );
		return CM_SQLCODE;
	}

	return 0;
}

int Gl_oprt_dyn_Fet_Upd( struct gl_oprt_dyn_c *gl_oprt_dyn_c , char * reply ){
	int   ret;

	EXEC SQL FETCH upd_gl_oprt_dyn INTO :gl_oprt_dyn_c;
	if ( sqlca.sqlcode && sqlca.sqlcode!=1403 ){
		sprintf(acErrMsg,"FETCH upd gl_oprt_dyn error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D103" );
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == 1403 ){
		sprintf(acErrMsg,"FETCH gl_oprt_dyn finished %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D104" );
		return CM_SQLCODE;
	}
	zip_struct(gl_oprt_dyn_c);

	return 0;
}

int Gl_oprt_dyn_Upd_Upd( struct gl_oprt_dyn_c gl_oprt_dyn_c , char * reply){
	int ret;

	EXEC SQL UPDATE gl_oprt_dyn SET "date"=:gl_oprt_dyn_c.date,
			br_no=:gl_oprt_dyn_c.br_no,
			cr_de_bal=:gl_oprt_dyn_c.cr_de_bal,
			ys_de_bal=:gl_oprt_dyn_c.ys_de_bal,
			yb_de_bal=:gl_oprt_dyn_c.yb_de_bal,
			cr_de_bal1=:gl_oprt_dyn_c.cr_de_bal1,
			ys_de_bal1=:gl_oprt_dyn_c.ys_de_bal1,
			yb_de_bal1=:gl_oprt_dyn_c.yb_de_bal1,
			cr_de_bal2=:gl_oprt_dyn_c.cr_de_bal2,
			ys_de_bal2=:gl_oprt_dyn_c.ys_de_bal2,
			yb_de_bal2=:gl_oprt_dyn_c.yb_de_bal2,
			cr_de_bal3=:gl_oprt_dyn_c.cr_de_bal3,
			ys_de_bal3=:gl_oprt_dyn_c.ys_de_bal3,
			yb_de_bal3=:gl_oprt_dyn_c.yb_de_bal3,
			cr_de_bal4=:gl_oprt_dyn_c.cr_de_bal4,
			ys_de_bal4=:gl_oprt_dyn_c.ys_de_bal4,
			yb_de_bal4=:gl_oprt_dyn_c.yb_de_bal4,
			cr_de_bal5=:gl_oprt_dyn_c.cr_de_bal5,
			ys_de_bal5=:gl_oprt_dyn_c.ys_de_bal5,
			yb_de_bal5=:gl_oprt_dyn_c.yb_de_bal5,
			cr_de_bal6=:gl_oprt_dyn_c.cr_de_bal6,
			ys_de_bal6=:gl_oprt_dyn_c.ys_de_bal6,
			yb_de_bal6=:gl_oprt_dyn_c.yb_de_bal6,
			cr_ln_bal=:gl_oprt_dyn_c.cr_ln_bal,
			ys_ln_bal=:gl_oprt_dyn_c.ys_ln_bal,
			yb_ln_bal=:gl_oprt_dyn_c.yb_ln_bal,
			cr_ln_bal1=:gl_oprt_dyn_c.cr_ln_bal1,
			ys_ln_bal1=:gl_oprt_dyn_c.ys_ln_bal1,
			yb_ln_bal1=:gl_oprt_dyn_c.yb_ln_bal1,
			cr_ln_bal2=:gl_oprt_dyn_c.cr_ln_bal2,
			ys_ln_bal2=:gl_oprt_dyn_c.ys_ln_bal2,
			yb_ln_bal2=:gl_oprt_dyn_c.yb_ln_bal2,
			cr_ln_bal3=:gl_oprt_dyn_c.cr_ln_bal3,
			ys_ln_bal3=:gl_oprt_dyn_c.ys_ln_bal3,
			yb_ln_bal3=:gl_oprt_dyn_c.yb_ln_bal3,
			cr_ln_bal4=:gl_oprt_dyn_c.cr_ln_bal4,
			ys_ln_bal4=:gl_oprt_dyn_c.ys_ln_bal4,
			yb_ln_bal4=:gl_oprt_dyn_c.yb_ln_bal4,
			cr_ln_bal5=:gl_oprt_dyn_c.cr_ln_bal5,
			ys_ln_bal5=:gl_oprt_dyn_c.ys_ln_bal5,
			yb_ln_bal5=:gl_oprt_dyn_c.yb_ln_bal5
	WHERE rowid=:gl_oprt_dyn_c.rowid;
	if ( sqlca.sqlcode && sqlca.sqlcode != 1403 ){
		sprintf(acErrMsg,"UPDATE gl_oprt_dyn error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D105" );
		return CM_SQLCODE;
	}

	return 0;
}


int Gl_oprt_dyn_Del_Upd(struct gl_oprt_dyn_c gl_oprt_dyn_c , char * reply  ){

	EXEC SQL DELETE FROM gl_oprt_dyn WHERE rowid=:gl_oprt_dyn_c.rowid;
	if ( sqlca.sqlcode ){
		sprintf(acErrMsg,"DELETE gl_oprt_dyn error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D105" );
		return CM_SQLCODE;
	}

	return 0;
}

int Gl_oprt_dyn_Clo_Upd( ){
	EXEC SQL CLOSE upd_gl_oprt_dyn;
	return 0;
}

/*****************************************************************************/
/****                              增加函数部分                           ****/
/*****************************************************************************/
int Gl_oprt_dyn_Ins( struct gl_oprt_dyn_c gl_oprt_dyn_c , char * reply ){
	int ret;

	EXEC SQL INSERT INTO gl_oprt_dyn VALUES (:gl_oprt_dyn_c.date,
			:gl_oprt_dyn_c.br_no,
			:gl_oprt_dyn_c.cr_de_bal,
			:gl_oprt_dyn_c.ys_de_bal,
			:gl_oprt_dyn_c.yb_de_bal,
			:gl_oprt_dyn_c.cr_de_bal1,
			:gl_oprt_dyn_c.ys_de_bal1,
			:gl_oprt_dyn_c.yb_de_bal1,
			:gl_oprt_dyn_c.cr_de_bal2,
			:gl_oprt_dyn_c.ys_de_bal2,
			:gl_oprt_dyn_c.yb_de_bal2,
			:gl_oprt_dyn_c.cr_de_bal3,
			:gl_oprt_dyn_c.ys_de_bal3,
			:gl_oprt_dyn_c.yb_de_bal3,
			:gl_oprt_dyn_c.cr_de_bal4,
			:gl_oprt_dyn_c.ys_de_bal4,
			:gl_oprt_dyn_c.yb_de_bal4,
			:gl_oprt_dyn_c.cr_de_bal5,
			:gl_oprt_dyn_c.ys_de_bal5,
			:gl_oprt_dyn_c.yb_de_bal5,
			:gl_oprt_dyn_c.cr_de_bal6,
			:gl_oprt_dyn_c.ys_de_bal6,
			:gl_oprt_dyn_c.yb_de_bal6,
			:gl_oprt_dyn_c.cr_ln_bal,
			:gl_oprt_dyn_c.ys_ln_bal,
			:gl_oprt_dyn_c.yb_ln_bal,
			:gl_oprt_dyn_c.cr_ln_bal1,
			:gl_oprt_dyn_c.ys_ln_bal1,
			:gl_oprt_dyn_c.yb_ln_bal1,
			:gl_oprt_dyn_c.cr_ln_bal2,
			:gl_oprt_dyn_c.ys_ln_bal2,
			:gl_oprt_dyn_c.yb_ln_bal2,
			:gl_oprt_dyn_c.cr_ln_bal3,
			:gl_oprt_dyn_c.ys_ln_bal3,
			:gl_oprt_dyn_c.yb_ln_bal3,
			:gl_oprt_dyn_c.cr_ln_bal4,
			:gl_oprt_dyn_c.ys_ln_bal4,
			:gl_oprt_dyn_c.yb_ln_bal4,
			:gl_oprt_dyn_c.cr_ln_bal5,
			:gl_oprt_dyn_c.ys_ln_bal5,
			:gl_oprt_dyn_c.yb_ln_bal5);
	if ( sqlca.sqlcode && sqlca.sqlcode != -1 )
	{
		sprintf(acErrMsg,"INSERT gl_oprt_dyn error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D107" );
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == -1 )
	{
		sprintf(acErrMsg,"INSERT gl_oprt_dyn error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D108" );
		return CM_SQLCODE;
	}

	return 0;
}
