#include<stdio.h>
#include<varargs.h>

#define EXTERN
#include"global.h"


EXEC SQL INCLUDE SQLCA;
#include"auth_remote_inf_c.h"
#define CM_SQLCODE sqlca.sqlcode==1403?100:(sqlca.sqlcode==-1?-239:sqlca.sqlcode)

int auth_remote_inf_con ( struct auth_remote_inf_c , char *);
int put_mystery( char *, char * );
char *zip_tail(char *s);
static void zip_struct(struct auth_remote_inf_c* ps){
	zip_tail(ps->rowid);
	zip_tail(ps->br_no);
	zip_tail(ps->tel);
	zip_tail(ps->tx_code);
	zip_tail(ps->auth_tel);
	zip_tail(ps->filename);
	zip_tail(ps->attachments);
	zip_tail(ps->title);
}
int Auth_remote_inf_Debug(struct auth_remote_inf_c *ps){
	vtcp_log("auth_remote_inf_c.rowid=[%s]\n",ps->rowid);
	vtcp_log("auth_remote_inf_c.trace_no=[%ld]\n",ps->trace_no);
	vtcp_log("auth_remote_inf_c.br_no=[%s]\n",ps->br_no);
	vtcp_log("auth_remote_inf_c.tel=[%s]\n",ps->tel);
	vtcp_log("auth_remote_inf_c.tx_date=[%ld]\n",ps->tx_date);
	vtcp_log("auth_remote_inf_c.tx_code=[%s]\n",ps->tx_code);
	vtcp_log("auth_remote_inf_c.auth_tel=[%s]\n",ps->auth_tel);
	vtcp_log("auth_remote_inf_c.filename=[%s]\n",ps->filename);
	vtcp_log("auth_remote_inf_c.attachments=[%s]\n",ps->attachments);
	vtcp_log("auth_remote_inf_c.title=[%s]\n",ps->title);
	return(0);
}
/*****************************************************************************/
/****                              查询函数部分[]                       ****/
/*****************************************************************************/
int Auth_remote_inf_Sel(reply,auth_remote_inf_c,fmtstr,va_alist)
char    *reply;
struct  auth_remote_inf_c *auth_remote_inf_c;
char    *fmtstr;
va_dcl
{
	int   ret;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	ret = Auth_remote_inf_Dec_Sel( reply , "%s" , wherelist );
	if (ret){
		WRITEMSG
		return ret;
	}
	ret = Auth_remote_inf_Fet_Sel( auth_remote_inf_c , reply );
	if (ret){
		WRITEMSG
		return ret;
	}

	Auth_remote_inf_Clo_Sel();

	return 0;
}



char *key_strcat(char *,char *);
int Auth_remote_inf_Dec_Sel ( reply , fmtstr , va_alist )
char    *reply;
char    *fmtstr;
va_dcl
{
	EXEC    SQL BEGIN   DECLARE SECTION;
		char    comm[1000];
	EXEC    SQL END     DECLARE SECTION;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	sprintf ( comm ," SELECT rowid,auth_remote_inf.* FROM auth_remote_inf WHERE  ");
	key_strcat(comm,wherelist);

	vtcp_log("%s,%d,SQLSTR=[%s]\n",__FILE__,__LINE__,comm);
	sqlca.sqlcode=0;
	EXEC SQL PREPARE auth_remote_inf_sel FROM :comm;
	EXEC SQL DECLARE sel_auth_remote_inf CURSOR FOR auth_remote_inf_sel;

	EXEC SQL OPEN sel_auth_remote_inf;
	if (sqlca.sqlcode){
		sprintf(acErrMsg,"OPEN auth_remote_inf error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D102" );
		return CM_SQLCODE;
	}

	return 0;
}

int Auth_remote_inf_Fet_Sel ( struct auth_remote_inf_c *auth_remote_inf_c , char * reply )
{

	int   ret;

	EXEC SQL FETCH sel_auth_remote_inf INTO :auth_remote_inf_c;
	if (sqlca.sqlcode&&sqlca.sqlcode!=1403){
		sprintf(acErrMsg,"Fetch auth_remote_inf error!!! %d",sqlca.sqlcode);
		WRITEMSG
		strcpy (reply,"D103");
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == 1403 ){
		sprintf(acErrMsg,"Fetch auth_remote_inf finished!!! %d",sqlca.sqlcode);
		WRITEMSG
		strcpy (reply,"D104");
		return CM_SQLCODE;
	}
	zip_struct(auth_remote_inf_c);

	return 0;
}

int Auth_remote_inf_Clo_Sel (){
	EXEC SQL CLOSE sel_auth_remote_inf;
	return 0;
}

/*****************************************************************************/
/****                              修改函数部分                           ****/
/*****************************************************************************/
int Auth_remote_inf_Dec_Upd( reply , fmtstr , va_alist)
char    *reply;
char    *fmtstr;
va_dcl
{
	EXEC    SQL BEGIN   DECLARE SECTION;
		char    comm[1000];
	EXEC    SQL END     DECLARE SECTION;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	sprintf ( comm , "SELECT rowid,auth_remote_inf.* FROM auth_remote_inf WHERE  ");
	key_strcat(comm,wherelist);
	strcat(comm," FOR UPDATE WAIT 5 ");
	vtcp_log("%s,%d,SQLSTR=[%s]\n",__FILE__,__LINE__,comm);
	sqlca.sqlcode=0;
	EXEC SQL PREPARE auth_remote_inf_upd FROM :comm;

	EXEC SQL DECLARE upd_auth_remote_inf CURSOR FOR auth_remote_inf_upd;

	EXEC SQL OPEN upd_auth_remote_inf;
	if (sqlca.sqlcode){
		sprintf(acErrMsg,"open auth_remote_inf error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D102" );
		return CM_SQLCODE;
	}

	return 0;
}

int Auth_remote_inf_Fet_Upd( struct auth_remote_inf_c *auth_remote_inf_c , char * reply ){
	int   ret;

	EXEC SQL FETCH upd_auth_remote_inf INTO :auth_remote_inf_c;
	if ( sqlca.sqlcode && sqlca.sqlcode!=1403 ){
		sprintf(acErrMsg,"FETCH upd auth_remote_inf error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D103" );
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == 1403 ){
		sprintf(acErrMsg,"FETCH auth_remote_inf finished %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D104" );
		return CM_SQLCODE;
	}
	zip_struct(auth_remote_inf_c);

	return 0;
}

int Auth_remote_inf_Upd_Upd( struct auth_remote_inf_c auth_remote_inf_c , char * reply){
	int ret;

	EXEC SQL UPDATE auth_remote_inf SET trace_no=:auth_remote_inf_c.trace_no,
			br_no=:auth_remote_inf_c.br_no,
			tel=:auth_remote_inf_c.tel,
			tx_date=:auth_remote_inf_c.tx_date,
			tx_code=:auth_remote_inf_c.tx_code,
			auth_tel=:auth_remote_inf_c.auth_tel,
			filename=:auth_remote_inf_c.filename,
			attachments=:auth_remote_inf_c.attachments,
			title=:auth_remote_inf_c.title
	WHERE rowid=:auth_remote_inf_c.rowid;
	if ( sqlca.sqlcode && sqlca.sqlcode != 1403 ){
		sprintf(acErrMsg,"UPDATE auth_remote_inf error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D105" );
		return CM_SQLCODE;
	}

	return 0;
}


int Auth_remote_inf_Del_Upd(struct auth_remote_inf_c auth_remote_inf_c , char * reply  ){

	EXEC SQL DELETE FROM auth_remote_inf WHERE rowid=:auth_remote_inf_c.rowid;
	if ( sqlca.sqlcode ){
		sprintf(acErrMsg,"DELETE auth_remote_inf error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D105" );
		return CM_SQLCODE;
	}

	return 0;
}

int Auth_remote_inf_Clo_Upd( ){
	EXEC SQL CLOSE upd_auth_remote_inf;
	return 0;
}

/*****************************************************************************/
/****                              增加函数部分                           ****/
/*****************************************************************************/
int Auth_remote_inf_Ins( struct auth_remote_inf_c auth_remote_inf_c , char * reply ){
	int ret;

	EXEC SQL INSERT INTO auth_remote_inf VALUES (:auth_remote_inf_c.trace_no,
			:auth_remote_inf_c.br_no,
			:auth_remote_inf_c.tel,
			:auth_remote_inf_c.tx_date,
			:auth_remote_inf_c.tx_code,
			:auth_remote_inf_c.auth_tel,
			:auth_remote_inf_c.filename,
			:auth_remote_inf_c.attachments,
			:auth_remote_inf_c.title);
	if ( sqlca.sqlcode && sqlca.sqlcode != -1 )
	{
		sprintf(acErrMsg,"INSERT auth_remote_inf error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D107" );
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == -1 )
	{
		sprintf(acErrMsg,"INSERT auth_remote_inf error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D108" );
		return CM_SQLCODE;
	}

	return 0;
}
