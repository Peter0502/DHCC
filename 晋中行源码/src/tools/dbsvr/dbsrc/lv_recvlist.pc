#include<stdio.h>
#include<varargs.h>

#define EXTERN
#include"global.h"


EXEC SQL INCLUDE SQLCA;
#include"lv_recvlist_c.h"
#define CM_SQLCODE sqlca.sqlcode==1403?100:(sqlca.sqlcode==-1?-239:sqlca.sqlcode)

int lv_recvlist_con ( struct lv_recvlist_c , char *);
int put_mystery( char *, char * );
char *zip_tail(char *s);
static void zip_struct(struct lv_recvlist_c* ps){
	zip_tail(ps->rowid);
	zip_tail(ps->br_no);
	zip_tail(ps->tel);
	zip_tail(ps->refno);
	zip_tail(ps->flagno);
	zip_tail(ps->packtype);
	zip_tail(ps->packno);
	zip_tail(ps->orderno);
	zip_tail(ps->or_br_no);
	zip_tail(ps->pay_qs_no);
	zip_tail(ps->ac_br_no);
	zip_tail(ps->cash_qs_no);
	zip_tail(ps->respflag);
	zip_tail(ps->respno);
	zip_tail(ps->respdesc);
	zip_tail(ps->filler);
}
int Lv_recvlist_Debug(struct lv_recvlist_c *ps){
	vtcp_log("lv_recvlist_c.rowid=[%s]\n",ps->rowid);
	vtcp_log("lv_recvlist_c.tx_date=[%ld]\n",ps->tx_date);
	vtcp_log("lv_recvlist_c.br_no=[%s]\n",ps->br_no);
	vtcp_log("lv_recvlist_c.tel=[%s]\n",ps->tel);
	vtcp_log("lv_recvlist_c.trace_no=[%ld]\n",ps->trace_no);
	vtcp_log("lv_recvlist_c.refno=[%s]\n",ps->refno);
	vtcp_log("lv_recvlist_c.flagno=[%s]\n",ps->flagno);
	vtcp_log("lv_recvlist_c.packtype=[%s]\n",ps->packtype);
	vtcp_log("lv_recvlist_c.packno=[%s]\n",ps->packno);
	vtcp_log("lv_recvlist_c.orderno=[%s]\n",ps->orderno);
	vtcp_log("lv_recvlist_c.or_br_no=[%s]\n",ps->or_br_no);
	vtcp_log("lv_recvlist_c.pay_qs_no=[%s]\n",ps->pay_qs_no);
	vtcp_log("lv_recvlist_c.ac_br_no=[%s]\n",ps->ac_br_no);
	vtcp_log("lv_recvlist_c.cash_qs_no=[%s]\n",ps->cash_qs_no);
	vtcp_log("lv_recvlist_c.tx_amt=[%f]\n",ps->tx_amt);
	vtcp_log("lv_recvlist_c.respflag=[%s]\n",ps->respflag);
	vtcp_log("lv_recvlist_c.respno=[%s]\n",ps->respno);
	vtcp_log("lv_recvlist_c.respdesc=[%s]\n",ps->respdesc);
	vtcp_log("lv_recvlist_c.filler=[%s]\n",ps->filler);
	return(0);
}
/*****************************************************************************/
/****                              查询函数部分[]                       ****/
/*****************************************************************************/
int Lv_recvlist_Sel(reply,lv_recvlist_c,fmtstr,va_alist)
char    *reply;
struct  lv_recvlist_c *lv_recvlist_c;
char    *fmtstr;
va_dcl
{
	int   ret;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	ret = Lv_recvlist_Dec_Sel( reply , "%s" , wherelist );
	if (ret){
		WRITEMSG
		return ret;
	}
	ret = Lv_recvlist_Fet_Sel( lv_recvlist_c , reply );
	if (ret){
		WRITEMSG
		return ret;
	}

	Lv_recvlist_Clo_Sel();

	return 0;
}



char *key_strcat(char *,char *);
int Lv_recvlist_Dec_Sel ( reply , fmtstr , va_alist )
char    *reply;
char    *fmtstr;
va_dcl
{
	EXEC    SQL BEGIN   DECLARE SECTION;
		char    comm[1000];
	EXEC    SQL END     DECLARE SECTION;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	sprintf ( comm ," SELECT rowid,lv_recvlist.* FROM lv_recvlist WHERE  ");
	key_strcat(comm,wherelist);

	vtcp_log("%s,%d,SQLSTR=[%s]\n",__FILE__,__LINE__,comm);
	sqlca.sqlcode=0;
	EXEC SQL PREPARE lv_recvlist_sel FROM :comm;
	EXEC SQL DECLARE sel_lv_recvlist CURSOR FOR lv_recvlist_sel;

	EXEC SQL OPEN sel_lv_recvlist;
	if (sqlca.sqlcode){
		sprintf(acErrMsg,"OPEN lv_recvlist error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D102" );
		return CM_SQLCODE;
	}

	return 0;
}

int Lv_recvlist_Fet_Sel ( struct lv_recvlist_c *lv_recvlist_c , char * reply )
{

	int   ret;

	EXEC SQL FETCH sel_lv_recvlist INTO :lv_recvlist_c;
	if (sqlca.sqlcode&&sqlca.sqlcode!=1403){
		sprintf(acErrMsg,"Fetch lv_recvlist error!!! %d",sqlca.sqlcode);
		WRITEMSG
		strcpy (reply,"D103");
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == 1403 ){
		sprintf(acErrMsg,"Fetch lv_recvlist finished!!! %d",sqlca.sqlcode);
		WRITEMSG
		strcpy (reply,"D104");
		return CM_SQLCODE;
	}
	zip_struct(lv_recvlist_c);

	return 0;
}

int Lv_recvlist_Clo_Sel (){
	EXEC SQL CLOSE sel_lv_recvlist;
	return 0;
}

/*****************************************************************************/
/****                              修改函数部分                           ****/
/*****************************************************************************/
int Lv_recvlist_Dec_Upd( reply , fmtstr , va_alist)
char    *reply;
char    *fmtstr;
va_dcl
{
	EXEC    SQL BEGIN   DECLARE SECTION;
		char    comm[1000];
	EXEC    SQL END     DECLARE SECTION;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	sprintf ( comm , "SELECT rowid,lv_recvlist.* FROM lv_recvlist WHERE  ");
	key_strcat(comm,wherelist);
	strcat(comm," FOR UPDATE WAIT 5 ");
	vtcp_log("%s,%d,SQLSTR=[%s]\n",__FILE__,__LINE__,comm);
	sqlca.sqlcode=0;
	EXEC SQL PREPARE lv_recvlist_upd FROM :comm;

	EXEC SQL DECLARE upd_lv_recvlist CURSOR FOR lv_recvlist_upd;

	EXEC SQL OPEN upd_lv_recvlist;
	if (sqlca.sqlcode){
		sprintf(acErrMsg,"open lv_recvlist error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D102" );
		return CM_SQLCODE;
	}

	return 0;
}

int Lv_recvlist_Fet_Upd( struct lv_recvlist_c *lv_recvlist_c , char * reply ){
	int   ret;

	EXEC SQL FETCH upd_lv_recvlist INTO :lv_recvlist_c;
	if ( sqlca.sqlcode && sqlca.sqlcode!=1403 ){
		sprintf(acErrMsg,"FETCH upd lv_recvlist error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D103" );
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == 1403 ){
		sprintf(acErrMsg,"FETCH lv_recvlist finished %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D104" );
		return CM_SQLCODE;
	}
	zip_struct(lv_recvlist_c);

	return 0;
}

int Lv_recvlist_Upd_Upd( struct lv_recvlist_c lv_recvlist_c , char * reply){
	int ret;

	EXEC SQL UPDATE lv_recvlist SET tx_date=:lv_recvlist_c.tx_date,
			br_no=:lv_recvlist_c.br_no,
			tel=:lv_recvlist_c.tel,
			trace_no=:lv_recvlist_c.trace_no,
			refno=:lv_recvlist_c.refno,
			flagno=:lv_recvlist_c.flagno,
			packtype=:lv_recvlist_c.packtype,
			packno=:lv_recvlist_c.packno,
			orderno=:lv_recvlist_c.orderno,
			or_br_no=:lv_recvlist_c.or_br_no,
			pay_qs_no=:lv_recvlist_c.pay_qs_no,
			ac_br_no=:lv_recvlist_c.ac_br_no,
			cash_qs_no=:lv_recvlist_c.cash_qs_no,
			tx_amt=:lv_recvlist_c.tx_amt,
			respflag=:lv_recvlist_c.respflag,
			respno=:lv_recvlist_c.respno,
			respdesc=:lv_recvlist_c.respdesc,
			filler=:lv_recvlist_c.filler
	WHERE rowid=:lv_recvlist_c.rowid;
	if ( sqlca.sqlcode && sqlca.sqlcode != 1403 ){
		sprintf(acErrMsg,"UPDATE lv_recvlist error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D105" );
		return CM_SQLCODE;
	}

	return 0;
}


int Lv_recvlist_Del_Upd(struct lv_recvlist_c lv_recvlist_c , char * reply  ){

	EXEC SQL DELETE FROM lv_recvlist WHERE rowid=:lv_recvlist_c.rowid;
	if ( sqlca.sqlcode ){
		sprintf(acErrMsg,"DELETE lv_recvlist error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D105" );
		return CM_SQLCODE;
	}

	return 0;
}

int Lv_recvlist_Clo_Upd( ){
	EXEC SQL CLOSE upd_lv_recvlist;
	return 0;
}

/*****************************************************************************/
/****                              增加函数部分                           ****/
/*****************************************************************************/
int Lv_recvlist_Ins( struct lv_recvlist_c lv_recvlist_c , char * reply ){
	int ret;

	EXEC SQL INSERT INTO lv_recvlist VALUES (:lv_recvlist_c.tx_date,
			:lv_recvlist_c.br_no,
			:lv_recvlist_c.tel,
			:lv_recvlist_c.trace_no,
			:lv_recvlist_c.refno,
			:lv_recvlist_c.flagno,
			:lv_recvlist_c.packtype,
			:lv_recvlist_c.packno,
			:lv_recvlist_c.orderno,
			:lv_recvlist_c.or_br_no,
			:lv_recvlist_c.pay_qs_no,
			:lv_recvlist_c.ac_br_no,
			:lv_recvlist_c.cash_qs_no,
			:lv_recvlist_c.tx_amt,
			:lv_recvlist_c.respflag,
			:lv_recvlist_c.respno,
			:lv_recvlist_c.respdesc,
			:lv_recvlist_c.filler);
	if ( sqlca.sqlcode && sqlca.sqlcode != -1 )
	{
		sprintf(acErrMsg,"INSERT lv_recvlist error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D107" );
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == -1 )
	{
		sprintf(acErrMsg,"INSERT lv_recvlist error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D108" );
		return CM_SQLCODE;
	}

	return 0;
}
