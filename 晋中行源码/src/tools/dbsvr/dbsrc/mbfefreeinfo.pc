#include<stdio.h>
#include<varargs.h>

#define EXTERN
#include"global.h"


EXEC SQL INCLUDE SQLCA;
#include"mbfefreeinfo_c.h"
#define CM_SQLCODE sqlca.sqlcode==1403?100:(sqlca.sqlcode==-1?-239:sqlca.sqlcode)

int mbfefreeinfo_con ( struct mbfefreeinfo_c , char *);
int put_mystery( char *, char * );
char *zip_tail(char *s);
static void zip_struct(struct mbfefreeinfo_c* ps){
	zip_tail(ps->rowid);
	zip_tail(ps->msssno);
	zip_tail(ps->odficenter);
	zip_tail(ps->isdficode);
	zip_tail(ps->odficode);
	zip_tail(ps->rdficenter);
	zip_tail(ps->osdficode);
	zip_tail(ps->rdficode);
	zip_tail(ps->procstate);
	zip_tail(ps->statetime);
	zip_tail(ps->errcode);
	zip_tail(ps->errdesc);
	zip_tail(ps->putuser);
	zip_tail(ps->infosource);
	zip_tail(ps->infomation);
}
int Mbfefreeinfo_Debug(struct mbfefreeinfo_c *ps){
	vtcp_log("mbfefreeinfo_c.rowid=[%s]\n",ps->rowid);
	vtcp_log("mbfefreeinfo_c.msssno=[%s]\n",ps->msssno);
	vtcp_log("mbfefreeinfo_c.consigndate=[%ld]\n",ps->consigndate);
	vtcp_log("mbfefreeinfo_c.odficenter=[%s]\n",ps->odficenter);
	vtcp_log("mbfefreeinfo_c.isdficode=[%s]\n",ps->isdficode);
	vtcp_log("mbfefreeinfo_c.odficode=[%s]\n",ps->odficode);
	vtcp_log("mbfefreeinfo_c.rdficenter=[%s]\n",ps->rdficenter);
	vtcp_log("mbfefreeinfo_c.osdficode=[%s]\n",ps->osdficode);
	vtcp_log("mbfefreeinfo_c.rdficode=[%s]\n",ps->rdficode);
	vtcp_log("mbfefreeinfo_c.procstate=[%s]\n",ps->procstate);
	vtcp_log("mbfefreeinfo_c.statetime=[%s]\n",ps->statetime);
	vtcp_log("mbfefreeinfo_c.errcode=[%s]\n",ps->errcode);
	vtcp_log("mbfefreeinfo_c.errdesc=[%s]\n",ps->errdesc);
	vtcp_log("mbfefreeinfo_c.putuser=[%s]\n",ps->putuser);
	vtcp_log("mbfefreeinfo_c.infosource=[%s]\n",ps->infosource);
	vtcp_log("mbfefreeinfo_c.infomation=[%s]\n",ps->infomation);
	vtcp_log("mbfefreeinfo_c.printno=[%ld]\n",ps->printno);
	return(0);
}
/*****************************************************************************/
/****                              查询函数部分[]                       ****/
/*****************************************************************************/
int Mbfefreeinfo_Sel(reply,mbfefreeinfo_c,fmtstr,va_alist)
char    *reply;
struct  mbfefreeinfo_c *mbfefreeinfo_c;
char    *fmtstr;
va_dcl
{
	int   ret;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	ret = Mbfefreeinfo_Dec_Sel( reply , "%s" , wherelist );
	if (ret){
		WRITEMSG
		return ret;
	}
	ret = Mbfefreeinfo_Fet_Sel( mbfefreeinfo_c , reply );
	if (ret){
		WRITEMSG
		return ret;
	}

	Mbfefreeinfo_Clo_Sel();

	return 0;
}



char *key_strcat(char *,char *);
int Mbfefreeinfo_Dec_Sel ( reply , fmtstr , va_alist )
char    *reply;
char    *fmtstr;
va_dcl
{
	EXEC    SQL BEGIN   DECLARE SECTION;
		char    comm[1000];
	EXEC    SQL END     DECLARE SECTION;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	sprintf ( comm ," SELECT rowid,mbfefreeinfo.* FROM mbfefreeinfo WHERE  ");
	key_strcat(comm,wherelist);

	vtcp_log("%s,%d,SQLSTR=[%s]\n",__FILE__,__LINE__,comm);
	sqlca.sqlcode=0;
	EXEC SQL PREPARE mbfefreeinfo_sel FROM :comm;
	EXEC SQL DECLARE sel_mbfefreeinfo CURSOR FOR mbfefreeinfo_sel;

	EXEC SQL OPEN sel_mbfefreeinfo;
	if (sqlca.sqlcode){
		sprintf(acErrMsg,"OPEN mbfefreeinfo error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D102" );
		return CM_SQLCODE;
	}

	return 0;
}

int Mbfefreeinfo_Fet_Sel ( struct mbfefreeinfo_c *mbfefreeinfo_c , char * reply )
{

	int   ret;

	EXEC SQL FETCH sel_mbfefreeinfo INTO :mbfefreeinfo_c;
	if (sqlca.sqlcode&&sqlca.sqlcode!=1403){
		sprintf(acErrMsg,"Fetch mbfefreeinfo error!!! %d",sqlca.sqlcode);
		WRITEMSG
		strcpy (reply,"D103");
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == 1403 ){
		sprintf(acErrMsg,"Fetch mbfefreeinfo finished!!! %d",sqlca.sqlcode);
		WRITEMSG
		strcpy (reply,"D104");
		return CM_SQLCODE;
	}
	zip_struct(mbfefreeinfo_c);

	return 0;
}

int Mbfefreeinfo_Clo_Sel (){
	EXEC SQL CLOSE sel_mbfefreeinfo;
	return 0;
}

/*****************************************************************************/
/****                              修改函数部分                           ****/
/*****************************************************************************/
int Mbfefreeinfo_Dec_Upd( reply , fmtstr , va_alist)
char    *reply;
char    *fmtstr;
va_dcl
{
	EXEC    SQL BEGIN   DECLARE SECTION;
		char    comm[1000];
	EXEC    SQL END     DECLARE SECTION;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	sprintf ( comm , "SELECT rowid,mbfefreeinfo.* FROM mbfefreeinfo WHERE  ");
	key_strcat(comm,wherelist);
	strcat(comm," FOR UPDATE WAIT 5 ");
	vtcp_log("%s,%d,SQLSTR=[%s]\n",__FILE__,__LINE__,comm);
	sqlca.sqlcode=0;
	EXEC SQL PREPARE mbfefreeinfo_upd FROM :comm;

	EXEC SQL DECLARE upd_mbfefreeinfo CURSOR FOR mbfefreeinfo_upd;

	EXEC SQL OPEN upd_mbfefreeinfo;
	if (sqlca.sqlcode){
		sprintf(acErrMsg,"open mbfefreeinfo error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D102" );
		return CM_SQLCODE;
	}

	return 0;
}

int Mbfefreeinfo_Fet_Upd( struct mbfefreeinfo_c *mbfefreeinfo_c , char * reply ){
	int   ret;

	EXEC SQL FETCH upd_mbfefreeinfo INTO :mbfefreeinfo_c;
	if ( sqlca.sqlcode && sqlca.sqlcode!=1403 ){
		sprintf(acErrMsg,"FETCH upd mbfefreeinfo error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D103" );
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == 1403 ){
		sprintf(acErrMsg,"FETCH mbfefreeinfo finished %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D104" );
		return CM_SQLCODE;
	}
	zip_struct(mbfefreeinfo_c);

	return 0;
}

int Mbfefreeinfo_Upd_Upd( struct mbfefreeinfo_c mbfefreeinfo_c , char * reply){
	int ret;

	EXEC SQL UPDATE mbfefreeinfo SET msssno=:mbfefreeinfo_c.msssno,
			consigndate=:mbfefreeinfo_c.consigndate,
			odficenter=:mbfefreeinfo_c.odficenter,
			isdficode=:mbfefreeinfo_c.isdficode,
			odficode=:mbfefreeinfo_c.odficode,
			rdficenter=:mbfefreeinfo_c.rdficenter,
			osdficode=:mbfefreeinfo_c.osdficode,
			rdficode=:mbfefreeinfo_c.rdficode,
			procstate=:mbfefreeinfo_c.procstate,
			statetime=:mbfefreeinfo_c.statetime,
			errcode=:mbfefreeinfo_c.errcode,
			errdesc=:mbfefreeinfo_c.errdesc,
			putuser=:mbfefreeinfo_c.putuser,
			infosource=:mbfefreeinfo_c.infosource,
			infomation=:mbfefreeinfo_c.infomation,
			printno=:mbfefreeinfo_c.printno
	WHERE rowid=:mbfefreeinfo_c.rowid;
	if ( sqlca.sqlcode && sqlca.sqlcode != 1403 ){
		sprintf(acErrMsg,"UPDATE mbfefreeinfo error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D105" );
		return CM_SQLCODE;
	}

	return 0;
}


int Mbfefreeinfo_Del_Upd(struct mbfefreeinfo_c mbfefreeinfo_c , char * reply  ){

	EXEC SQL DELETE FROM mbfefreeinfo WHERE rowid=:mbfefreeinfo_c.rowid;
	if ( sqlca.sqlcode ){
		sprintf(acErrMsg,"DELETE mbfefreeinfo error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D105" );
		return CM_SQLCODE;
	}

	return 0;
}

int Mbfefreeinfo_Clo_Upd( ){
	EXEC SQL CLOSE upd_mbfefreeinfo;
	return 0;
}

/*****************************************************************************/
/****                              增加函数部分                           ****/
/*****************************************************************************/
int Mbfefreeinfo_Ins( struct mbfefreeinfo_c mbfefreeinfo_c , char * reply ){
	int ret;

	EXEC SQL INSERT INTO mbfefreeinfo VALUES (:mbfefreeinfo_c.msssno,
			:mbfefreeinfo_c.consigndate,
			:mbfefreeinfo_c.odficenter,
			:mbfefreeinfo_c.isdficode,
			:mbfefreeinfo_c.odficode,
			:mbfefreeinfo_c.rdficenter,
			:mbfefreeinfo_c.osdficode,
			:mbfefreeinfo_c.rdficode,
			:mbfefreeinfo_c.procstate,
			:mbfefreeinfo_c.statetime,
			:mbfefreeinfo_c.errcode,
			:mbfefreeinfo_c.errdesc,
			:mbfefreeinfo_c.putuser,
			:mbfefreeinfo_c.infosource,
			:mbfefreeinfo_c.infomation,
			:mbfefreeinfo_c.printno);
	if ( sqlca.sqlcode && sqlca.sqlcode != -1 )
	{
		sprintf(acErrMsg,"INSERT mbfefreeinfo error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D107" );
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == -1 )
	{
		sprintf(acErrMsg,"INSERT mbfefreeinfo error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D108" );
		return CM_SQLCODE;
	}

	return 0;
}
