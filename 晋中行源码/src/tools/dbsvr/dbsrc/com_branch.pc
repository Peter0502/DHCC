#include<stdio.h>
#include<varargs.h>

#define EXTERN
#include"global.h"


EXEC SQL INCLUDE SQLCA;
#include"com_branch_c.h"
#define CM_SQLCODE sqlca.sqlcode==1403?100:(sqlca.sqlcode==-1?-239:sqlca.sqlcode)

int com_branch_con ( struct com_branch_c , char *);
int put_mystery( char *, char * );
char *zip_tail(char *s);
static void zip_struct(struct com_branch_c* ps){
	zip_tail(ps->rowid);
	zip_tail(ps->br_no);
	zip_tail(ps->br_name);
	zip_tail(ps->wrk_sts);
	zip_tail(ps->br_type);
	zip_tail(ps->ipaddr);
	zip_tail(ps->ind);
	zip_tail(ps->spe_ind);
	zip_tail(ps->up_br_no);
	zip_tail(ps->br_tele);
}
int Com_branch_Debug(struct com_branch_c *ps){
	vtcp_log("com_branch_c.rowid=[%s]\n",ps->rowid);
	vtcp_log("com_branch_c.br_no=[%s]\n",ps->br_no);
	vtcp_log("com_branch_c.br_name=[%s]\n",ps->br_name);
	vtcp_log("com_branch_c.wrk_sts=[%s]\n",ps->wrk_sts);
	vtcp_log("com_branch_c.br_type=[%s]\n",ps->br_type);
	vtcp_log("com_branch_c.ipaddr=[%s]\n",ps->ipaddr);
	vtcp_log("com_branch_c.ind=[%s]\n",ps->ind);
	vtcp_log("com_branch_c.city_no=[%ld]\n",ps->city_no);
	vtcp_log("com_branch_c.spe_ind=[%s]\n",ps->spe_ind);
	vtcp_log("com_branch_c.up_br_no=[%s]\n",ps->up_br_no);
	vtcp_log("com_branch_c.tx_type=[%ld]\n",ps->tx_type);
	vtcp_log("com_branch_c.br_tele=[%s]\n",ps->br_tele);
	return(0);
}
/*****************************************************************************/
/****                              查询函数部分[]                       ****/
/*****************************************************************************/
int Com_branch_Sel(reply,com_branch_c,fmtstr,va_alist)
char    *reply;
struct  com_branch_c *com_branch_c;
char    *fmtstr;
va_dcl
{
	int   ret;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	ret = Com_branch_Dec_Sel( reply , "%s" , wherelist );
	if (ret){
		WRITEMSG
		return ret;
	}
	ret = Com_branch_Fet_Sel( com_branch_c , reply );
	if (ret){
		WRITEMSG
		return ret;
	}

	Com_branch_Clo_Sel();

	return 0;
}



char *key_strcat(char *,char *);
int Com_branch_Dec_Sel ( reply , fmtstr , va_alist )
char    *reply;
char    *fmtstr;
va_dcl
{
	EXEC    SQL BEGIN   DECLARE SECTION;
		char    comm[1000];
	EXEC    SQL END     DECLARE SECTION;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	sprintf ( comm ," SELECT rowid,com_branch.* FROM com_branch WHERE  ");
	key_strcat(comm,wherelist);

	vtcp_log("%s,%d,SQLSTR=[%s]\n",__FILE__,__LINE__,comm);
	sqlca.sqlcode=0;
	EXEC SQL PREPARE com_branch_sel FROM :comm;
	EXEC SQL DECLARE sel_com_branch CURSOR FOR com_branch_sel;

	EXEC SQL OPEN sel_com_branch;
	if (sqlca.sqlcode){
		sprintf(acErrMsg,"OPEN com_branch error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D102" );
		return CM_SQLCODE;
	}

	return 0;
}

int Com_branch_Fet_Sel ( struct com_branch_c *com_branch_c , char * reply )
{

	int   ret;

	EXEC SQL FETCH sel_com_branch INTO :com_branch_c;
	if (sqlca.sqlcode&&sqlca.sqlcode!=1403){
		sprintf(acErrMsg,"Fetch com_branch error!!! %d",sqlca.sqlcode);
		WRITEMSG
		strcpy (reply,"D103");
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == 1403 ){
		sprintf(acErrMsg,"Fetch com_branch finished!!! %d",sqlca.sqlcode);
		WRITEMSG
		strcpy (reply,"D104");
		return CM_SQLCODE;
	}
	zip_struct(com_branch_c);

	return 0;
}

int Com_branch_Clo_Sel (){
	EXEC SQL CLOSE sel_com_branch;
	return 0;
}

/*****************************************************************************/
/****                              修改函数部分                           ****/
/*****************************************************************************/
int Com_branch_Dec_Upd( reply , fmtstr , va_alist)
char    *reply;
char    *fmtstr;
va_dcl
{
	EXEC    SQL BEGIN   DECLARE SECTION;
		char    comm[1000];
	EXEC    SQL END     DECLARE SECTION;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	sprintf ( comm , "SELECT rowid,com_branch.* FROM com_branch WHERE  ");
	key_strcat(comm,wherelist);
	strcat(comm," FOR UPDATE WAIT 5 ");
	vtcp_log("%s,%d,SQLSTR=[%s]\n",__FILE__,__LINE__,comm);
	sqlca.sqlcode=0;
	EXEC SQL PREPARE com_branch_upd FROM :comm;

	EXEC SQL DECLARE upd_com_branch CURSOR FOR com_branch_upd;

	EXEC SQL OPEN upd_com_branch;
	if (sqlca.sqlcode){
		sprintf(acErrMsg,"open com_branch error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D102" );
		return CM_SQLCODE;
	}

	return 0;
}

int Com_branch_Fet_Upd( struct com_branch_c *com_branch_c , char * reply ){
	int   ret;

	EXEC SQL FETCH upd_com_branch INTO :com_branch_c;
	if ( sqlca.sqlcode && sqlca.sqlcode!=1403 ){
		sprintf(acErrMsg,"FETCH upd com_branch error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D103" );
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == 1403 ){
		sprintf(acErrMsg,"FETCH com_branch finished %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D104" );
		return CM_SQLCODE;
	}
	zip_struct(com_branch_c);

	return 0;
}

int Com_branch_Upd_Upd( struct com_branch_c com_branch_c , char * reply){
	int ret;

	EXEC SQL UPDATE com_branch SET br_no=:com_branch_c.br_no,
			br_name=:com_branch_c.br_name,
			wrk_sts=:com_branch_c.wrk_sts,
			br_type=:com_branch_c.br_type,
			ipaddr=:com_branch_c.ipaddr,
			ind=:com_branch_c.ind,
			city_no=:com_branch_c.city_no,
			spe_ind=:com_branch_c.spe_ind,
			up_br_no=:com_branch_c.up_br_no,
			tx_type=:com_branch_c.tx_type,
			br_tele=:com_branch_c.br_tele
	WHERE rowid=:com_branch_c.rowid;
	if ( sqlca.sqlcode && sqlca.sqlcode != 1403 ){
		sprintf(acErrMsg,"UPDATE com_branch error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D105" );
		return CM_SQLCODE;
	}

	return 0;
}


int Com_branch_Del_Upd(struct com_branch_c com_branch_c , char * reply  ){

	EXEC SQL DELETE FROM com_branch WHERE rowid=:com_branch_c.rowid;
	if ( sqlca.sqlcode ){
		sprintf(acErrMsg,"DELETE com_branch error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D105" );
		return CM_SQLCODE;
	}

	return 0;
}

int Com_branch_Clo_Upd( ){
	EXEC SQL CLOSE upd_com_branch;
	return 0;
}

/*****************************************************************************/
/****                              增加函数部分                           ****/
/*****************************************************************************/
int Com_branch_Ins( struct com_branch_c com_branch_c , char * reply ){
	int ret;

	EXEC SQL INSERT INTO com_branch VALUES (:com_branch_c.br_no,
			:com_branch_c.br_name,
			:com_branch_c.wrk_sts,
			:com_branch_c.br_type,
			:com_branch_c.ipaddr,
			:com_branch_c.ind,
			:com_branch_c.city_no,
			:com_branch_c.spe_ind,
			:com_branch_c.up_br_no,
			:com_branch_c.tx_type,
			:com_branch_c.br_tele);
	if ( sqlca.sqlcode && sqlca.sqlcode != -1 )
	{
		sprintf(acErrMsg,"INSERT com_branch error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D107" );
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == -1 )
	{
		sprintf(acErrMsg,"INSERT com_branch error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D108" );
		return CM_SQLCODE;
	}

	return 0;
}
/*****************************************************************************/
/****                              查询函数部分[1]                       ****/
/*****************************************************************************/
int Com_branch_Sel1(reply,com_branch_c,fmtstr,va_alist)
char    *reply;
struct  com_branch_c *com_branch_c;
char    *fmtstr;
va_dcl
{
	int   ret;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	ret = Com_branch_Dec_Sel1( reply , "%s" , wherelist );
	if (ret){
		WRITEMSG
		return ret;
	}
	ret = Com_branch_Fet_Sel1( com_branch_c , reply );
	if (ret){
		WRITEMSG
		return ret;
	}

	Com_branch_Clo_Sel1();

	return 0;
}



char *key_strcat(char *,char *);
int Com_branch_Dec_Sel1 ( reply , fmtstr , va_alist )
char    *reply;
char    *fmtstr;
va_dcl
{
	EXEC    SQL BEGIN   DECLARE SECTION;
		char    comm[1000];
	EXEC    SQL END     DECLARE SECTION;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	sprintf ( comm ," SELECT rowid,com_branch.* FROM com_branch WHERE  ");
	key_strcat(comm,wherelist);

	vtcp_log("%s,%d,SQLSTR=[%s]\n",__FILE__,__LINE__,comm);
	sqlca.sqlcode=0;
	EXEC SQL PREPARE com_branch_sel1 FROM :comm;
	EXEC SQL DECLARE sel_com_branch1 CURSOR FOR com_branch_sel1;

	EXEC SQL OPEN sel_com_branch1;
	if (sqlca.sqlcode){
		sprintf(acErrMsg,"OPEN com_branch error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D102" );
		return CM_SQLCODE;
	}

	return 0;
}

int Com_branch_Fet_Sel1 ( struct com_branch_c *com_branch_c , char * reply )
{

	int   ret;

	EXEC SQL FETCH sel_com_branch1 INTO :com_branch_c;
	if (sqlca.sqlcode&&sqlca.sqlcode!=1403){
		sprintf(acErrMsg,"Fetch com_branch error!!! %d",sqlca.sqlcode);
		WRITEMSG
		strcpy (reply,"D103");
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == 1403 ){
		sprintf(acErrMsg,"Fetch com_branch finished!!! %d",sqlca.sqlcode);
		WRITEMSG
		strcpy (reply,"D104");
		return CM_SQLCODE;
	}
	zip_struct(com_branch_c);

	return 0;
}

int Com_branch_Clo_Sel1 (){
	EXEC SQL CLOSE sel_com_branch1;
	return 0;
}

/*****************************************************************************/
/****                              修改函数部分                           ****/
/*****************************************************************************/
int Com_branch_Dec_Upd1( reply , fmtstr , va_alist)
char    *reply;
char    *fmtstr;
va_dcl
{
	EXEC    SQL BEGIN   DECLARE SECTION;
		char    comm[1000];
	EXEC    SQL END     DECLARE SECTION;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	sprintf ( comm , "SELECT rowid,com_branch.* FROM com_branch WHERE  ");
	key_strcat(comm,wherelist);
	strcat(comm," FOR UPDATE WAIT 5 ");
	vtcp_log("%s,%d,SQLSTR=[%s]\n",__FILE__,__LINE__,comm);
	sqlca.sqlcode=0;
	EXEC SQL PREPARE com_branch_upd1 FROM :comm;

	EXEC SQL DECLARE upd_com_branch1 CURSOR FOR com_branch_upd1;

	EXEC SQL OPEN upd_com_branch1;
	if (sqlca.sqlcode){
		sprintf(acErrMsg,"open com_branch error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D102" );
		return CM_SQLCODE;
	}

	return 0;
}

int Com_branch_Fet_Upd1( struct com_branch_c *com_branch_c , char * reply ){
	int   ret;

	EXEC SQL FETCH upd_com_branch1 INTO :com_branch_c;
	if ( sqlca.sqlcode && sqlca.sqlcode!=1403 ){
		sprintf(acErrMsg,"FETCH upd com_branch error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D103" );
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == 1403 ){
		sprintf(acErrMsg,"FETCH com_branch finished %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D104" );
		return CM_SQLCODE;
	}
	zip_struct(com_branch_c);

	return 0;
}

int Com_branch_Clo_Upd1( ){
	EXEC SQL CLOSE upd_com_branch1;
	return 0;
}

/*****************************************************************************/
/****                              查询函数部分[2]                       ****/
/*****************************************************************************/
int Com_branch_Sel2(reply,com_branch_c,fmtstr,va_alist)
char    *reply;
struct  com_branch_c *com_branch_c;
char    *fmtstr;
va_dcl
{
	int   ret;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	ret = Com_branch_Dec_Sel2( reply , "%s" , wherelist );
	if (ret){
		WRITEMSG
		return ret;
	}
	ret = Com_branch_Fet_Sel2( com_branch_c , reply );
	if (ret){
		WRITEMSG
		return ret;
	}

	Com_branch_Clo_Sel2();

	return 0;
}



char *key_strcat(char *,char *);
int Com_branch_Dec_Sel2 ( reply , fmtstr , va_alist )
char    *reply;
char    *fmtstr;
va_dcl
{
	EXEC    SQL BEGIN   DECLARE SECTION;
		char    comm[1000];
	EXEC    SQL END     DECLARE SECTION;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	sprintf ( comm ," SELECT rowid,com_branch.* FROM com_branch WHERE  ");
	key_strcat(comm,wherelist);

	vtcp_log("%s,%d,SQLSTR=[%s]\n",__FILE__,__LINE__,comm);
	sqlca.sqlcode=0;
	EXEC SQL PREPARE com_branch_sel2 FROM :comm;
	EXEC SQL DECLARE sel_com_branch2 CURSOR FOR com_branch_sel2;

	EXEC SQL OPEN sel_com_branch2;
	if (sqlca.sqlcode){
		sprintf(acErrMsg,"OPEN com_branch error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D102" );
		return CM_SQLCODE;
	}

	return 0;
}

int Com_branch_Fet_Sel2 ( struct com_branch_c *com_branch_c , char * reply )
{

	int   ret;

	EXEC SQL FETCH sel_com_branch2 INTO :com_branch_c;
	if (sqlca.sqlcode&&sqlca.sqlcode!=1403){
		sprintf(acErrMsg,"Fetch com_branch error!!! %d",sqlca.sqlcode);
		WRITEMSG
		strcpy (reply,"D103");
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == 1403 ){
		sprintf(acErrMsg,"Fetch com_branch finished!!! %d",sqlca.sqlcode);
		WRITEMSG
		strcpy (reply,"D104");
		return CM_SQLCODE;
	}
	zip_struct(com_branch_c);

	return 0;
}

int Com_branch_Clo_Sel2 (){
	EXEC SQL CLOSE sel_com_branch2;
	return 0;
}

/*****************************************************************************/
/****                              修改函数部分                           ****/
/*****************************************************************************/
int Com_branch_Dec_Upd2( reply , fmtstr , va_alist)
char    *reply;
char    *fmtstr;
va_dcl
{
	EXEC    SQL BEGIN   DECLARE SECTION;
		char    comm[1000];
	EXEC    SQL END     DECLARE SECTION;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	sprintf ( comm , "SELECT rowid,com_branch.* FROM com_branch WHERE  ");
	key_strcat(comm,wherelist);
	strcat(comm," FOR UPDATE WAIT 5 ");
	vtcp_log("%s,%d,SQLSTR=[%s]\n",__FILE__,__LINE__,comm);
	sqlca.sqlcode=0;
	EXEC SQL PREPARE com_branch_upd2 FROM :comm;

	EXEC SQL DECLARE upd_com_branch2 CURSOR FOR com_branch_upd2;

	EXEC SQL OPEN upd_com_branch2;
	if (sqlca.sqlcode){
		sprintf(acErrMsg,"open com_branch error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D102" );
		return CM_SQLCODE;
	}

	return 0;
}

int Com_branch_Fet_Upd2( struct com_branch_c *com_branch_c , char * reply ){
	int   ret;

	EXEC SQL FETCH upd_com_branch2 INTO :com_branch_c;
	if ( sqlca.sqlcode && sqlca.sqlcode!=1403 ){
		sprintf(acErrMsg,"FETCH upd com_branch error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D103" );
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == 1403 ){
		sprintf(acErrMsg,"FETCH com_branch finished %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D104" );
		return CM_SQLCODE;
	}
	zip_struct(com_branch_c);

	return 0;
}

int Com_branch_Clo_Upd2( ){
	EXEC SQL CLOSE upd_com_branch2;
	return 0;
}

