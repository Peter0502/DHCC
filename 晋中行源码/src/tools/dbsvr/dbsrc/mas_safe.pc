#include<stdio.h>
#include<varargs.h>

#define EXTERN
#include"global.h"


EXEC SQL INCLUDE SQLCA;
#include"mas_safe_c.h"
#define CM_SQLCODE sqlca.sqlcode==1403?100:(sqlca.sqlcode==-1?-239:sqlca.sqlcode)

int mas_safe_con ( struct mas_safe_c , char *);
int put_mystery( char *, char * );
char *zip_tail(char *s);
static void zip_struct(struct mas_safe_c* ps){
	zip_tail(ps->rowid);
	zip_tail(ps->seqn);
	zip_tail(ps->report_br_no);
	zip_tail(ps->report_br);
	zip_tail(ps->ent_code);
	zip_tail(ps->ent_name);
	zip_tail(ps->tx_date);
	zip_tail(ps->rpt_std_code);
	zip_tail(ps->tx_code);
	zip_tail(ps->add_ind);
	zip_tail(ps->acc_no);
	zip_tail(ps->card_no);
	zip_tail(ps->tx_ind);
	zip_tail(ps->tw_bank_no);
	zip_tail(ps->tw_bank_name);
	zip_tail(ps->tw_name);
	zip_tail(ps->tw_acc_no);
	zip_tail(ps->tw_br_no);
	zip_tail(ps->tw_tx_date);
	zip_tail(ps->cur_no);
	zip_tail(ps->tx_amt_orig);
	zip_tail(ps->tx_amt_dollar);
	zip_tail(ps->code);
	zip_tail(ps->remark);
	zip_tail(ps->extend);
}
int Mas_safe_Debug(struct mas_safe_c *ps){
	vtcp_log("mas_safe_c.rowid=[%s]\n",ps->rowid);
	vtcp_log("mas_safe_c.seqn=[%s]\n",ps->seqn);
	vtcp_log("mas_safe_c.report_br_no=[%s]\n",ps->report_br_no);
	vtcp_log("mas_safe_c.report_br=[%s]\n",ps->report_br);
	vtcp_log("mas_safe_c.ent_code=[%s]\n",ps->ent_code);
	vtcp_log("mas_safe_c.ent_name=[%s]\n",ps->ent_name);
	vtcp_log("mas_safe_c.tx_date=[%s]\n",ps->tx_date);
	vtcp_log("mas_safe_c.rpt_std_code=[%s]\n",ps->rpt_std_code);
	vtcp_log("mas_safe_c.tx_code=[%s]\n",ps->tx_code);
	vtcp_log("mas_safe_c.add_ind=[%s]\n",ps->add_ind);
	vtcp_log("mas_safe_c.acc_no=[%s]\n",ps->acc_no);
	vtcp_log("mas_safe_c.card_no=[%s]\n",ps->card_no);
	vtcp_log("mas_safe_c.tx_ind=[%s]\n",ps->tx_ind);
	vtcp_log("mas_safe_c.tw_bank_no=[%s]\n",ps->tw_bank_no);
	vtcp_log("mas_safe_c.tw_bank_name=[%s]\n",ps->tw_bank_name);
	vtcp_log("mas_safe_c.tw_name=[%s]\n",ps->tw_name);
	vtcp_log("mas_safe_c.tw_acc_no=[%s]\n",ps->tw_acc_no);
	vtcp_log("mas_safe_c.tw_br_no=[%s]\n",ps->tw_br_no);
	vtcp_log("mas_safe_c.tw_tx_date=[%s]\n",ps->tw_tx_date);
	vtcp_log("mas_safe_c.cur_no=[%s]\n",ps->cur_no);
	vtcp_log("mas_safe_c.tx_amt_orig=[%s]\n",ps->tx_amt_orig);
	vtcp_log("mas_safe_c.tx_amt_dollar=[%s]\n",ps->tx_amt_dollar);
	vtcp_log("mas_safe_c.code=[%s]\n",ps->code);
	vtcp_log("mas_safe_c.remark=[%s]\n",ps->remark);
	vtcp_log("mas_safe_c.extend=[%s]\n",ps->extend);
	return(0);
}
/*****************************************************************************/
/****                              查询函数部分[]                       ****/
/*****************************************************************************/
int Mas_safe_Sel(reply,mas_safe_c,fmtstr,va_alist)
char    *reply;
struct  mas_safe_c *mas_safe_c;
char    *fmtstr;
va_dcl
{
	int   ret;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	ret = Mas_safe_Dec_Sel( reply , "%s" , wherelist );
	if (ret){
		WRITEMSG
		return ret;
	}
	ret = Mas_safe_Fet_Sel( mas_safe_c , reply );
	if (ret){
		WRITEMSG
		return ret;
	}

	Mas_safe_Clo_Sel();

	return 0;
}



char *key_strcat(char *,char *);
int Mas_safe_Dec_Sel ( reply , fmtstr , va_alist )
char    *reply;
char    *fmtstr;
va_dcl
{
	EXEC    SQL BEGIN   DECLARE SECTION;
		char    comm[1000];
	EXEC    SQL END     DECLARE SECTION;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	sprintf ( comm ," SELECT rowid,mas_safe.* FROM mas_safe WHERE  ");
	key_strcat(comm,wherelist);

	vtcp_log("%s,%d,SQLSTR=[%s]\n",__FILE__,__LINE__,comm);
	sqlca.sqlcode=0;
	EXEC SQL PREPARE mas_safe_sel FROM :comm;
	EXEC SQL DECLARE sel_mas_safe CURSOR FOR mas_safe_sel;

	EXEC SQL OPEN sel_mas_safe;
	if (sqlca.sqlcode){
		sprintf(acErrMsg,"OPEN mas_safe error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D102" );
		return CM_SQLCODE;
	}

	return 0;
}

int Mas_safe_Fet_Sel ( struct mas_safe_c *mas_safe_c , char * reply )
{

	int   ret;

	EXEC SQL FETCH sel_mas_safe INTO :mas_safe_c;
	if (sqlca.sqlcode&&sqlca.sqlcode!=1403){
		sprintf(acErrMsg,"Fetch mas_safe error!!! %d",sqlca.sqlcode);
		WRITEMSG
		strcpy (reply,"D103");
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == 1403 ){
		sprintf(acErrMsg,"Fetch mas_safe finished!!! %d",sqlca.sqlcode);
		WRITEMSG
		strcpy (reply,"D104");
		return CM_SQLCODE;
	}
	zip_struct(mas_safe_c);

	return 0;
}

int Mas_safe_Clo_Sel (){
	EXEC SQL CLOSE sel_mas_safe;
	return 0;
}

/*****************************************************************************/
/****                              修改函数部分                           ****/
/*****************************************************************************/
int Mas_safe_Dec_Upd( reply , fmtstr , va_alist)
char    *reply;
char    *fmtstr;
va_dcl
{
	EXEC    SQL BEGIN   DECLARE SECTION;
		char    comm[1000];
	EXEC    SQL END     DECLARE SECTION;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	sprintf ( comm , "SELECT rowid,mas_safe.* FROM mas_safe WHERE  ");
	key_strcat(comm,wherelist);
	strcat(comm," FOR UPDATE WAIT 5 ");
	vtcp_log("%s,%d,SQLSTR=[%s]\n",__FILE__,__LINE__,comm);
	sqlca.sqlcode=0;
	EXEC SQL PREPARE mas_safe_upd FROM :comm;

	EXEC SQL DECLARE upd_mas_safe CURSOR FOR mas_safe_upd;

	EXEC SQL OPEN upd_mas_safe;
	if (sqlca.sqlcode){
		sprintf(acErrMsg,"open mas_safe error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D102" );
		return CM_SQLCODE;
	}

	return 0;
}

int Mas_safe_Fet_Upd( struct mas_safe_c *mas_safe_c , char * reply ){
	int   ret;

	EXEC SQL FETCH upd_mas_safe INTO :mas_safe_c;
	if ( sqlca.sqlcode && sqlca.sqlcode!=1403 ){
		sprintf(acErrMsg,"FETCH upd mas_safe error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D103" );
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == 1403 ){
		sprintf(acErrMsg,"FETCH mas_safe finished %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D104" );
		return CM_SQLCODE;
	}
	zip_struct(mas_safe_c);

	return 0;
}

int Mas_safe_Upd_Upd( struct mas_safe_c mas_safe_c , char * reply){
	int ret;

	EXEC SQL UPDATE mas_safe SET seqn=:mas_safe_c.seqn,
			report_br_no=:mas_safe_c.report_br_no,
			report_br=:mas_safe_c.report_br,
			ent_code=:mas_safe_c.ent_code,
			ent_name=:mas_safe_c.ent_name,
			tx_date=:mas_safe_c.tx_date,
			rpt_std_code=:mas_safe_c.rpt_std_code,
			tx_code=:mas_safe_c.tx_code,
			add_ind=:mas_safe_c.add_ind,
			acc_no=:mas_safe_c.acc_no,
			card_no=:mas_safe_c.card_no,
			tx_ind=:mas_safe_c.tx_ind,
			tw_bank_no=:mas_safe_c.tw_bank_no,
			tw_bank_name=:mas_safe_c.tw_bank_name,
			tw_name=:mas_safe_c.tw_name,
			tw_acc_no=:mas_safe_c.tw_acc_no,
			tw_br_no=:mas_safe_c.tw_br_no,
			tw_tx_date=:mas_safe_c.tw_tx_date,
			cur_no=:mas_safe_c.cur_no,
			tx_amt_orig=:mas_safe_c.tx_amt_orig,
			tx_amt_dollar=:mas_safe_c.tx_amt_dollar,
			code=:mas_safe_c.code,
			remark=:mas_safe_c.remark,
			extend=:mas_safe_c.extend
	WHERE rowid=:mas_safe_c.rowid;
	if ( sqlca.sqlcode && sqlca.sqlcode != 1403 ){
		sprintf(acErrMsg,"UPDATE mas_safe error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D105" );
		return CM_SQLCODE;
	}

	return 0;
}


int Mas_safe_Del_Upd(struct mas_safe_c mas_safe_c , char * reply  ){

	EXEC SQL DELETE FROM mas_safe WHERE rowid=:mas_safe_c.rowid;
	if ( sqlca.sqlcode ){
		sprintf(acErrMsg,"DELETE mas_safe error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D105" );
		return CM_SQLCODE;
	}

	return 0;
}

int Mas_safe_Clo_Upd( ){
	EXEC SQL CLOSE upd_mas_safe;
	return 0;
}

/*****************************************************************************/
/****                              增加函数部分                           ****/
/*****************************************************************************/
int Mas_safe_Ins( struct mas_safe_c mas_safe_c , char * reply ){
	int ret;

	EXEC SQL INSERT INTO mas_safe VALUES (:mas_safe_c.seqn,
			:mas_safe_c.report_br_no,
			:mas_safe_c.report_br,
			:mas_safe_c.ent_code,
			:mas_safe_c.ent_name,
			:mas_safe_c.tx_date,
			:mas_safe_c.rpt_std_code,
			:mas_safe_c.tx_code,
			:mas_safe_c.add_ind,
			:mas_safe_c.acc_no,
			:mas_safe_c.card_no,
			:mas_safe_c.tx_ind,
			:mas_safe_c.tw_bank_no,
			:mas_safe_c.tw_bank_name,
			:mas_safe_c.tw_name,
			:mas_safe_c.tw_acc_no,
			:mas_safe_c.tw_br_no,
			:mas_safe_c.tw_tx_date,
			:mas_safe_c.cur_no,
			:mas_safe_c.tx_amt_orig,
			:mas_safe_c.tx_amt_dollar,
			:mas_safe_c.code,
			:mas_safe_c.remark,
			:mas_safe_c.extend);
	if ( sqlca.sqlcode && sqlca.sqlcode != -1 )
	{
		sprintf(acErrMsg,"INSERT mas_safe error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D107" );
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == -1 )
	{
		sprintf(acErrMsg,"INSERT mas_safe error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D108" );
		return CM_SQLCODE;
	}

	return 0;
}
