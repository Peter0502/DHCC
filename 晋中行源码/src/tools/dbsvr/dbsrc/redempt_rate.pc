#include<stdio.h>
#include<varargs.h>

#define EXTERN
#include"global.h"


EXEC SQL INCLUDE SQLCA;
#include"redempt_rate_c.h"
#define CM_SQLCODE sqlca.sqlcode==1403?100:(sqlca.sqlcode==-1?-239:sqlca.sqlcode)

int redempt_rate_con ( struct redempt_rate_c , char *);
int put_mystery( char *, char * );
char *zip_tail(char *s);
static void zip_struct(struct redempt_rate_c* ps){
	zip_tail(ps->rowid);
	zip_tail(ps->prdt_code);
	zip_tail(ps->rate_code);
}
int Redempt_rate_Debug(struct redempt_rate_c *ps){
	vtcp_log("redempt_rate_c.rowid=[%s]\n",ps->rowid);
	vtcp_log("redempt_rate_c.prdt_code=[%s]\n",ps->prdt_code);
	vtcp_log("redempt_rate_c.rate_code=[%s]\n",ps->rate_code);
	vtcp_log("redempt_rate_c.beg_date=[%ld]\n",ps->beg_date);
	vtcp_log("redempt_rate_c.end_date=[%ld]\n",ps->end_date);
	vtcp_log("redempt_rate_c.min_days=[%ld]\n",ps->min_days);
	vtcp_log("redempt_rate_c.max_days=[%ld]\n",ps->max_days);
	vtcp_log("redempt_rate_c.redempt_rate=[%f]\n",ps->redempt_rate);
	vtcp_log("redempt_rate_c.profit_rate=[%f]\n",ps->profit_rate);
	return(0);
}
/*****************************************************************************/
/****                              查询函数部分[]                       ****/
/*****************************************************************************/
int Redempt_rate_Sel(reply,redempt_rate_c,fmtstr,va_alist)
char    *reply;
struct  redempt_rate_c *redempt_rate_c;
char    *fmtstr;
va_dcl
{
	int   ret;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	ret = Redempt_rate_Dec_Sel( reply , "%s" , wherelist );
	if (ret){
		WRITEMSG
		return ret;
	}
	ret = Redempt_rate_Fet_Sel( redempt_rate_c , reply );
	if (ret){
		WRITEMSG
		return ret;
	}

	Redempt_rate_Clo_Sel();

	return 0;
}



char *key_strcat(char *,char *);
int Redempt_rate_Dec_Sel ( reply , fmtstr , va_alist )
char    *reply;
char    *fmtstr;
va_dcl
{
	EXEC    SQL BEGIN   DECLARE SECTION;
		char    comm[1000];
	EXEC    SQL END     DECLARE SECTION;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	sprintf ( comm ," SELECT rowid,redempt_rate.* FROM redempt_rate WHERE  ");
	key_strcat(comm,wherelist);

	vtcp_log("%s,%d,SQLSTR=[%s]\n",__FILE__,__LINE__,comm);
	sqlca.sqlcode=0;
	EXEC SQL PREPARE redempt_rate_sel FROM :comm;
	EXEC SQL DECLARE sel_redempt_rate CURSOR FOR redempt_rate_sel;

	EXEC SQL OPEN sel_redempt_rate;
	if (sqlca.sqlcode){
		sprintf(acErrMsg,"OPEN redempt_rate error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D102" );
		return CM_SQLCODE;
	}

	return 0;
}

int Redempt_rate_Fet_Sel ( struct redempt_rate_c *redempt_rate_c , char * reply )
{

	int   ret;

	EXEC SQL FETCH sel_redempt_rate INTO :redempt_rate_c;
	if (sqlca.sqlcode&&sqlca.sqlcode!=1403){
		sprintf(acErrMsg,"Fetch redempt_rate error!!! %d",sqlca.sqlcode);
		WRITEMSG
		strcpy (reply,"D103");
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == 1403 ){
		sprintf(acErrMsg,"Fetch redempt_rate finished!!! %d",sqlca.sqlcode);
		WRITEMSG
		strcpy (reply,"D104");
		return CM_SQLCODE;
	}
	zip_struct(redempt_rate_c);

	return 0;
}

int Redempt_rate_Clo_Sel (){
	EXEC SQL CLOSE sel_redempt_rate;
	return 0;
}

/*****************************************************************************/
/****                              修改函数部分                           ****/
/*****************************************************************************/
int Redempt_rate_Dec_Upd( reply , fmtstr , va_alist)
char    *reply;
char    *fmtstr;
va_dcl
{
	EXEC    SQL BEGIN   DECLARE SECTION;
		char    comm[1000];
	EXEC    SQL END     DECLARE SECTION;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	sprintf ( comm , "SELECT rowid,redempt_rate.* FROM redempt_rate WHERE  ");
	key_strcat(comm,wherelist);
	strcat(comm," FOR UPDATE WAIT 5 ");
	vtcp_log("%s,%d,SQLSTR=[%s]\n",__FILE__,__LINE__,comm);
	sqlca.sqlcode=0;
	EXEC SQL PREPARE redempt_rate_upd FROM :comm;

	EXEC SQL DECLARE upd_redempt_rate CURSOR FOR redempt_rate_upd;

	EXEC SQL OPEN upd_redempt_rate;
	if (sqlca.sqlcode){
		sprintf(acErrMsg,"open redempt_rate error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D102" );
		return CM_SQLCODE;
	}

	return 0;
}

int Redempt_rate_Fet_Upd( struct redempt_rate_c *redempt_rate_c , char * reply ){
	int   ret;

	EXEC SQL FETCH upd_redempt_rate INTO :redempt_rate_c;
	if ( sqlca.sqlcode && sqlca.sqlcode!=1403 ){
		sprintf(acErrMsg,"FETCH upd redempt_rate error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D103" );
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == 1403 ){
		sprintf(acErrMsg,"FETCH redempt_rate finished %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D104" );
		return CM_SQLCODE;
	}
	zip_struct(redempt_rate_c);

	return 0;
}

int Redempt_rate_Upd_Upd( struct redempt_rate_c redempt_rate_c , char * reply){
	int ret;

	EXEC SQL UPDATE redempt_rate SET prdt_code=:redempt_rate_c.prdt_code,
			rate_code=:redempt_rate_c.rate_code,
			beg_date=:redempt_rate_c.beg_date,
			end_date=:redempt_rate_c.end_date,
			min_days=:redempt_rate_c.min_days,
			max_days=:redempt_rate_c.max_days,
			redempt_rate=:redempt_rate_c.redempt_rate,
			profit_rate=:redempt_rate_c.profit_rate
	WHERE rowid=:redempt_rate_c.rowid;
	if ( sqlca.sqlcode && sqlca.sqlcode != 1403 ){
		sprintf(acErrMsg,"UPDATE redempt_rate error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D105" );
		return CM_SQLCODE;
	}

	return 0;
}


int Redempt_rate_Del_Upd(struct redempt_rate_c redempt_rate_c , char * reply  ){

	EXEC SQL DELETE FROM redempt_rate WHERE rowid=:redempt_rate_c.rowid;
	if ( sqlca.sqlcode ){
		sprintf(acErrMsg,"DELETE redempt_rate error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D105" );
		return CM_SQLCODE;
	}

	return 0;
}

int Redempt_rate_Clo_Upd( ){
	EXEC SQL CLOSE upd_redempt_rate;
	return 0;
}

/*****************************************************************************/
/****                              增加函数部分                           ****/
/*****************************************************************************/
int Redempt_rate_Ins( struct redempt_rate_c redempt_rate_c , char * reply ){
	int ret;

	EXEC SQL INSERT INTO redempt_rate VALUES (:redempt_rate_c.prdt_code,
			:redempt_rate_c.rate_code,
			:redempt_rate_c.beg_date,
			:redempt_rate_c.end_date,
			:redempt_rate_c.min_days,
			:redempt_rate_c.max_days,
			:redempt_rate_c.redempt_rate,
			:redempt_rate_c.profit_rate);
	if ( sqlca.sqlcode && sqlca.sqlcode != -1 )
	{
		sprintf(acErrMsg,"INSERT redempt_rate error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D107" );
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == -1 )
	{
		sprintf(acErrMsg,"INSERT redempt_rate error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D108" );
		return CM_SQLCODE;
	}

	return 0;
}
