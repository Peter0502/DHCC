#include<stdio.h>
#include<varargs.h>

#define EXTERN
#include"global.h"


EXEC SQL INCLUDE SQLCA;
#include"mbfebksttalt_c.h"
#define CM_SQLCODE sqlca.sqlcode==1403?100:(sqlca.sqlcode==-1?-239:sqlca.sqlcode)

int mbfebksttalt_con ( struct mbfebksttalt_c , char *);
int put_mystery( char *, char * );
char *zip_tail(char *s);
static void zip_struct(struct mbfebksttalt_c* ps){
	zip_tail(ps->rowid);
	zip_tail(ps->txssno);
	zip_tail(ps->srflag);
	zip_tail(ps->odficode);
	zip_tail(ps->rdficode);
	zip_tail(ps->oprttype);
	zip_tail(ps->warrantno);
	zip_tail(ps->tel);
	zip_tail(ps->strinfo);
}
int Mbfebksttalt_Debug(struct mbfebksttalt_c *ps){
	vtcp_log("mbfebksttalt_c.rowid=[%s]\n",ps->rowid);
	vtcp_log("mbfebksttalt_c.consigndate=[%ld]\n",ps->consigndate);
	vtcp_log("mbfebksttalt_c.txssno=[%s]\n",ps->txssno);
	vtcp_log("mbfebksttalt_c.amount=[%f]\n",ps->amount);
	vtcp_log("mbfebksttalt_c.srflag=[%s]\n",ps->srflag);
	vtcp_log("mbfebksttalt_c.odficode=[%s]\n",ps->odficode);
	vtcp_log("mbfebksttalt_c.rdficode=[%s]\n",ps->rdficode);
	vtcp_log("mbfebksttalt_c.oprttype=[%s]\n",ps->oprttype);
	vtcp_log("mbfebksttalt_c.warrantno=[%s]\n",ps->warrantno);
	vtcp_log("mbfebksttalt_c.compensationamnt=[%f]\n",ps->compensationamnt);
	vtcp_log("mbfebksttalt_c.tel=[%s]\n",ps->tel);
	vtcp_log("mbfebksttalt_c.tx_date=[%ld]\n",ps->tx_date);
	vtcp_log("mbfebksttalt_c.tx_time=[%ld]\n",ps->tx_time);
	vtcp_log("mbfebksttalt_c.strinfo=[%s]\n",ps->strinfo);
	return(0);
}
/*****************************************************************************/
/****                              查询函数部分[]                       ****/
/*****************************************************************************/
int Mbfebksttalt_Sel(reply,mbfebksttalt_c,fmtstr,va_alist)
char    *reply;
struct  mbfebksttalt_c *mbfebksttalt_c;
char    *fmtstr;
va_dcl
{
	int   ret;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	ret = Mbfebksttalt_Dec_Sel( reply , "%s" , wherelist );
	if (ret){
		WRITEMSG
		return ret;
	}
	ret = Mbfebksttalt_Fet_Sel( mbfebksttalt_c , reply );
	if (ret){
		WRITEMSG
		return ret;
	}

	Mbfebksttalt_Clo_Sel();

	return 0;
}



char *key_strcat(char *,char *);
int Mbfebksttalt_Dec_Sel ( reply , fmtstr , va_alist )
char    *reply;
char    *fmtstr;
va_dcl
{
	EXEC    SQL BEGIN   DECLARE SECTION;
		char    comm[1000];
	EXEC    SQL END     DECLARE SECTION;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	sprintf ( comm ," SELECT rowid,mbfebksttalt.* FROM mbfebksttalt WHERE  ");
	key_strcat(comm,wherelist);

	vtcp_log("%s,%d,SQLSTR=[%s]\n",__FILE__,__LINE__,comm);
	sqlca.sqlcode=0;
	EXEC SQL PREPARE mbfebksttalt_sel FROM :comm;
	EXEC SQL DECLARE sel_mbfebksttalt CURSOR FOR mbfebksttalt_sel;

	EXEC SQL OPEN sel_mbfebksttalt;
	if (sqlca.sqlcode){
		sprintf(acErrMsg,"OPEN mbfebksttalt error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D102" );
		return CM_SQLCODE;
	}

	return 0;
}

int Mbfebksttalt_Fet_Sel ( struct mbfebksttalt_c *mbfebksttalt_c , char * reply )
{

	int   ret;

	EXEC SQL FETCH sel_mbfebksttalt INTO :mbfebksttalt_c;
	if (sqlca.sqlcode&&sqlca.sqlcode!=1403){
		sprintf(acErrMsg,"Fetch mbfebksttalt error!!! %d",sqlca.sqlcode);
		WRITEMSG
		strcpy (reply,"D103");
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == 1403 ){
		sprintf(acErrMsg,"Fetch mbfebksttalt finished!!! %d",sqlca.sqlcode);
		WRITEMSG
		strcpy (reply,"D104");
		return CM_SQLCODE;
	}
	zip_struct(mbfebksttalt_c);

	return 0;
}

int Mbfebksttalt_Clo_Sel (){
	EXEC SQL CLOSE sel_mbfebksttalt;
	return 0;
}

/*****************************************************************************/
/****                              修改函数部分                           ****/
/*****************************************************************************/
int Mbfebksttalt_Dec_Upd( reply , fmtstr , va_alist)
char    *reply;
char    *fmtstr;
va_dcl
{
	EXEC    SQL BEGIN   DECLARE SECTION;
		char    comm[1000];
	EXEC    SQL END     DECLARE SECTION;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	sprintf ( comm , "SELECT rowid,mbfebksttalt.* FROM mbfebksttalt WHERE  ");
	key_strcat(comm,wherelist);
	strcat(comm," FOR UPDATE WAIT 5 ");
	vtcp_log("%s,%d,SQLSTR=[%s]\n",__FILE__,__LINE__,comm);
	sqlca.sqlcode=0;
	EXEC SQL PREPARE mbfebksttalt_upd FROM :comm;

	EXEC SQL DECLARE upd_mbfebksttalt CURSOR FOR mbfebksttalt_upd;

	EXEC SQL OPEN upd_mbfebksttalt;
	if (sqlca.sqlcode){
		sprintf(acErrMsg,"open mbfebksttalt error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D102" );
		return CM_SQLCODE;
	}

	return 0;
}

int Mbfebksttalt_Fet_Upd( struct mbfebksttalt_c *mbfebksttalt_c , char * reply ){
	int   ret;

	EXEC SQL FETCH upd_mbfebksttalt INTO :mbfebksttalt_c;
	if ( sqlca.sqlcode && sqlca.sqlcode!=1403 ){
		sprintf(acErrMsg,"FETCH upd mbfebksttalt error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D103" );
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == 1403 ){
		sprintf(acErrMsg,"FETCH mbfebksttalt finished %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D104" );
		return CM_SQLCODE;
	}
	zip_struct(mbfebksttalt_c);

	return 0;
}

int Mbfebksttalt_Upd_Upd( struct mbfebksttalt_c mbfebksttalt_c , char * reply){
	int ret;

	EXEC SQL UPDATE mbfebksttalt SET consigndate=:mbfebksttalt_c.consigndate,
			txssno=:mbfebksttalt_c.txssno,
			amount=:mbfebksttalt_c.amount,
			srflag=:mbfebksttalt_c.srflag,
			odficode=:mbfebksttalt_c.odficode,
			rdficode=:mbfebksttalt_c.rdficode,
			oprttype=:mbfebksttalt_c.oprttype,
			warrantno=:mbfebksttalt_c.warrantno,
			compensationamnt=:mbfebksttalt_c.compensationamnt,
			tel=:mbfebksttalt_c.tel,
			tx_date=:mbfebksttalt_c.tx_date,
			tx_time=:mbfebksttalt_c.tx_time,
			strinfo=:mbfebksttalt_c.strinfo
	WHERE rowid=:mbfebksttalt_c.rowid;
	if ( sqlca.sqlcode && sqlca.sqlcode != 1403 ){
		sprintf(acErrMsg,"UPDATE mbfebksttalt error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D105" );
		return CM_SQLCODE;
	}

	return 0;
}


int Mbfebksttalt_Del_Upd(struct mbfebksttalt_c mbfebksttalt_c , char * reply  ){

	EXEC SQL DELETE FROM mbfebksttalt WHERE rowid=:mbfebksttalt_c.rowid;
	if ( sqlca.sqlcode ){
		sprintf(acErrMsg,"DELETE mbfebksttalt error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D105" );
		return CM_SQLCODE;
	}

	return 0;
}

int Mbfebksttalt_Clo_Upd( ){
	EXEC SQL CLOSE upd_mbfebksttalt;
	return 0;
}

/*****************************************************************************/
/****                              增加函数部分                           ****/
/*****************************************************************************/
int Mbfebksttalt_Ins( struct mbfebksttalt_c mbfebksttalt_c , char * reply ){
	int ret;

	EXEC SQL INSERT INTO mbfebksttalt VALUES (:mbfebksttalt_c.consigndate,
			:mbfebksttalt_c.txssno,
			:mbfebksttalt_c.amount,
			:mbfebksttalt_c.srflag,
			:mbfebksttalt_c.odficode,
			:mbfebksttalt_c.rdficode,
			:mbfebksttalt_c.oprttype,
			:mbfebksttalt_c.warrantno,
			:mbfebksttalt_c.compensationamnt,
			:mbfebksttalt_c.tel,
			:mbfebksttalt_c.tx_date,
			:mbfebksttalt_c.tx_time,
			:mbfebksttalt_c.strinfo);
	if ( sqlca.sqlcode && sqlca.sqlcode != -1 )
	{
		sprintf(acErrMsg,"INSERT mbfebksttalt error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D107" );
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == -1 )
	{
		sprintf(acErrMsg,"INSERT mbfebksttalt error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D108" );
		return CM_SQLCODE;
	}

	return 0;
}
