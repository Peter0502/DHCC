#include<stdio.h>
#include<varargs.h>

#define EXTERN
#include"global.h"


EXEC SQL INCLUDE SQLCA;
#include"lv_pkgreg_erdai_c.h"
#define CM_SQLCODE sqlca.sqlcode==1403?100:(sqlca.sqlcode==-1?-239:sqlca.sqlcode)

int lv_pkgreg_erdai_con ( struct lv_pkgreg_erdai_c , char *);
int put_mystery( char *, char * );
char *zip_tail(char *s);
static void zip_struct(struct lv_pkgreg_erdai_c* ps){
	zip_tail(ps->rowid);
	zip_tail(ps->msgtype);
	zip_tail(ps->channel);
	zip_tail(ps->br_no);
	zip_tail(ps->bepsdate);
	zip_tail(ps->tx_time);
	zip_tail(ps->wt_date);
	zip_tail(ps->txtype);
	zip_tail(ps->txkind);
	zip_tail(ps->cur_no);
	zip_tail(ps->drawtype);
	zip_tail(ps->drawval);
	zip_tail(ps->tx_chrg_ind);
	zip_tail(ps->lw_ind);
	zip_tail(ps->cdflag);
	zip_tail(ps->or_br_no);
	zip_tail(ps->pay_qs_no);
	zip_tail(ps->pay_opn_br_no);
	zip_tail(ps->pay_opn_br_nm);
	zip_tail(ps->pay_ac_no);
	zip_tail(ps->pay_name);
	zip_tail(ps->pay_addr);
	zip_tail(ps->ac_br_no);
	zip_tail(ps->cash_qs_no);
	zip_tail(ps->cash_opn_br_no);
	zip_tail(ps->cash_opn_br_nm);
	zip_tail(ps->cash_ac_no);
	zip_tail(ps->cash_name);
	zip_tail(ps->cash_addr);
	zip_tail(ps->note_type);
	zip_tail(ps->note_no);
	zip_tail(ps->lv_sts);
	zip_tail(ps->pack_date);
	zip_tail(ps->cnapsflag);
	zip_tail(ps->rejectcode);
	zip_tail(ps->rejectreason);
	zip_tail(ps->resp_date);
	zip_tail(ps->rsp_pack_date);
	zip_tail(ps->rcpstat);
	zip_tail(ps->trandate);
	zip_tail(ps->accno);
	zip_tail(ps->accnm);
	zip_tail(ps->tx_date);
	zip_tail(ps->jz_date);
	zip_tail(ps->input_tel);
	zip_tail(ps->susflag);
	zip_tail(ps->gz_br_no);
	zip_tail(ps->enteracc);
	zip_tail(ps->enteraccnm);
	zip_tail(ps->enteropenbrn);
	zip_tail(ps->enterptdate);
	zip_tail(ps->enterdate);
	zip_tail(ps->entertel);
	zip_tail(ps->deal_date);
	zip_tail(ps->deal_mz_date);
	zip_tail(ps->deal_tel);
	zip_tail(ps->gzdeal_trace_date);
	zip_tail(ps->gzdeal_host_date);
	zip_tail(ps->checkflag);
	zip_tail(ps->hostflag);
	zip_tail(ps->check_tel);
	zip_tail(ps->auth_tel);
	zip_tail(ps->send_tel);
	zip_tail(ps->resp_tel);
	zip_tail(ps->protno);
	zip_tail(ps->mesgpriority);
	zip_tail(ps->acc_type);
	zip_tail(ps->lv_brf);
	zip_tail(ps->lv_brf2);
	zip_tail(ps->filler);
	zip_tail(ps->filler2);
	zip_tail(ps->chargeoff);
}
int Lv_pkgreg_erdai_Debug(struct lv_pkgreg_erdai_c *ps){
	vtcp_log("lv_pkgreg_erdai_c.rowid=[%s]\n",ps->rowid);
	vtcp_log("lv_pkgreg_erdai_c.msgtype=[%s]\n",ps->msgtype);
	vtcp_log("lv_pkgreg_erdai_c.channel=[%s]\n",ps->channel);
	vtcp_log("lv_pkgreg_erdai_c.br_no=[%s]\n",ps->br_no);
	vtcp_log("lv_pkgreg_erdai_c.bepsdate=[%s]\n",ps->bepsdate);
	vtcp_log("lv_pkgreg_erdai_c.tx_time=[%s]\n",ps->tx_time);
	vtcp_log("lv_pkgreg_erdai_c.wt_date=[%s]\n",ps->wt_date);
	vtcp_log("lv_pkgreg_erdai_c.orderno=[%f]\n",ps->orderno);
	vtcp_log("lv_pkgreg_erdai_c.txtype=[%s]\n",ps->txtype);
	vtcp_log("lv_pkgreg_erdai_c.txkind=[%s]\n",ps->txkind);
	vtcp_log("lv_pkgreg_erdai_c.cur_no=[%s]\n",ps->cur_no);
	vtcp_log("lv_pkgreg_erdai_c.tx_amt=[%f]\n",ps->tx_amt);
	vtcp_log("lv_pkgreg_erdai_c.drawtype=[%s]\n",ps->drawtype);
	vtcp_log("lv_pkgreg_erdai_c.drawval=[%s]\n",ps->drawval);
	vtcp_log("lv_pkgreg_erdai_c.tx_chrg_ind=[%s]\n",ps->tx_chrg_ind);
	vtcp_log("lv_pkgreg_erdai_c.chrg_amt=[%f]\n",ps->chrg_amt);
	vtcp_log("lv_pkgreg_erdai_c.lw_ind=[%s]\n",ps->lw_ind);
	vtcp_log("lv_pkgreg_erdai_c.cdflag=[%s]\n",ps->cdflag);
	vtcp_log("lv_pkgreg_erdai_c.or_br_no=[%s]\n",ps->or_br_no);
	vtcp_log("lv_pkgreg_erdai_c.pay_qs_no=[%s]\n",ps->pay_qs_no);
	vtcp_log("lv_pkgreg_erdai_c.pay_opn_br_no=[%s]\n",ps->pay_opn_br_no);
	vtcp_log("lv_pkgreg_erdai_c.pay_opn_br_nm=[%s]\n",ps->pay_opn_br_nm);
	vtcp_log("lv_pkgreg_erdai_c.pay_ac_no=[%s]\n",ps->pay_ac_no);
	vtcp_log("lv_pkgreg_erdai_c.pay_name=[%s]\n",ps->pay_name);
	vtcp_log("lv_pkgreg_erdai_c.pay_addr=[%s]\n",ps->pay_addr);
	vtcp_log("lv_pkgreg_erdai_c.ac_br_no=[%s]\n",ps->ac_br_no);
	vtcp_log("lv_pkgreg_erdai_c.cash_qs_no=[%s]\n",ps->cash_qs_no);
	vtcp_log("lv_pkgreg_erdai_c.cash_opn_br_no=[%s]\n",ps->cash_opn_br_no);
	vtcp_log("lv_pkgreg_erdai_c.cash_opn_br_nm=[%s]\n",ps->cash_opn_br_nm);
	vtcp_log("lv_pkgreg_erdai_c.cash_ac_no=[%s]\n",ps->cash_ac_no);
	vtcp_log("lv_pkgreg_erdai_c.cash_name=[%s]\n",ps->cash_name);
	vtcp_log("lv_pkgreg_erdai_c.cash_addr=[%s]\n",ps->cash_addr);
	vtcp_log("lv_pkgreg_erdai_c.note_type=[%s]\n",ps->note_type);
	vtcp_log("lv_pkgreg_erdai_c.note_no=[%s]\n",ps->note_no);
	vtcp_log("lv_pkgreg_erdai_c.lv_sts=[%s]\n",ps->lv_sts);
	vtcp_log("lv_pkgreg_erdai_c.pack_date=[%s]\n",ps->pack_date);
	vtcp_log("lv_pkgreg_erdai_c.packno=[%f]\n",ps->packno);
	vtcp_log("lv_pkgreg_erdai_c.cnapsflag=[%s]\n",ps->cnapsflag);
	vtcp_log("lv_pkgreg_erdai_c.rejectcode=[%s]\n",ps->rejectcode);
	vtcp_log("lv_pkgreg_erdai_c.rejectreason=[%s]\n",ps->rejectreason);
	vtcp_log("lv_pkgreg_erdai_c.returndays=[%f]\n",ps->returndays);
	vtcp_log("lv_pkgreg_erdai_c.resp_date=[%s]\n",ps->resp_date);
	vtcp_log("lv_pkgreg_erdai_c.respno=[%f]\n",ps->respno);
	vtcp_log("lv_pkgreg_erdai_c.rsp_pack_date=[%s]\n",ps->rsp_pack_date);
	vtcp_log("lv_pkgreg_erdai_c.rsp_packno=[%f]\n",ps->rsp_packno);
	vtcp_log("lv_pkgreg_erdai_c.rcpstat=[%s]\n",ps->rcpstat);
	vtcp_log("lv_pkgreg_erdai_c.trandate=[%s]\n",ps->trandate);
	vtcp_log("lv_pkgreg_erdai_c.accno=[%s]\n",ps->accno);
	vtcp_log("lv_pkgreg_erdai_c.accnm=[%s]\n",ps->accnm);
	vtcp_log("lv_pkgreg_erdai_c.tx_date=[%s]\n",ps->tx_date);
	vtcp_log("lv_pkgreg_erdai_c.rcv_trace_no=[%f]\n",ps->rcv_trace_no);
	vtcp_log("lv_pkgreg_erdai_c.jz_date=[%s]\n",ps->jz_date);
	vtcp_log("lv_pkgreg_erdai_c.hostno=[%f]\n",ps->hostno);
	vtcp_log("lv_pkgreg_erdai_c.input_tel=[%s]\n",ps->input_tel);
	vtcp_log("lv_pkgreg_erdai_c.check_trace_no=[%f]\n",ps->check_trace_no);
	vtcp_log("lv_pkgreg_erdai_c.susflag=[%s]\n",ps->susflag);
	vtcp_log("lv_pkgreg_erdai_c.gz_br_no=[%s]\n",ps->gz_br_no);
	vtcp_log("lv_pkgreg_erdai_c.enteracc=[%s]\n",ps->enteracc);
	vtcp_log("lv_pkgreg_erdai_c.enteraccnm=[%s]\n",ps->enteraccnm);
	vtcp_log("lv_pkgreg_erdai_c.enteropenbrn=[%s]\n",ps->enteropenbrn);
	vtcp_log("lv_pkgreg_erdai_c.enterptdate=[%s]\n",ps->enterptdate);
	vtcp_log("lv_pkgreg_erdai_c.enterswno=[%f]\n",ps->enterswno);
	vtcp_log("lv_pkgreg_erdai_c.enterdate=[%s]\n",ps->enterdate);
	vtcp_log("lv_pkgreg_erdai_c.entertrace=[%f]\n",ps->entertrace);
	vtcp_log("lv_pkgreg_erdai_c.entertel=[%s]\n",ps->entertel);
	vtcp_log("lv_pkgreg_erdai_c.entertel_no=[%f]\n",ps->entertel_no);
	vtcp_log("lv_pkgreg_erdai_c.deal_date=[%s]\n",ps->deal_date);
	vtcp_log("lv_pkgreg_erdai_c.deal_swno=[%f]\n",ps->deal_swno);
	vtcp_log("lv_pkgreg_erdai_c.deal_mz_date=[%s]\n",ps->deal_mz_date);
	vtcp_log("lv_pkgreg_erdai_c.deal_trace_no=[%f]\n",ps->deal_trace_no);
	vtcp_log("lv_pkgreg_erdai_c.deal_tel=[%s]\n",ps->deal_tel);
	vtcp_log("lv_pkgreg_erdai_c.deal_tel_no=[%f]\n",ps->deal_tel_no);
	vtcp_log("lv_pkgreg_erdai_c.gzdeal_trace_no=[%f]\n",ps->gzdeal_trace_no);
	vtcp_log("lv_pkgreg_erdai_c.gzdeal_trace_date=[%s]\n",ps->gzdeal_trace_date);
	vtcp_log("lv_pkgreg_erdai_c.gzdeal_host_no=[%f]\n",ps->gzdeal_host_no);
	vtcp_log("lv_pkgreg_erdai_c.gzdeal_host_date=[%s]\n",ps->gzdeal_host_date);
	vtcp_log("lv_pkgreg_erdai_c.checkflag=[%s]\n",ps->checkflag);
	vtcp_log("lv_pkgreg_erdai_c.hostflag=[%s]\n",ps->hostflag);
	vtcp_log("lv_pkgreg_erdai_c.prt_times=[%f]\n",ps->prt_times);
	vtcp_log("lv_pkgreg_erdai_c.check_tel=[%s]\n",ps->check_tel);
	vtcp_log("lv_pkgreg_erdai_c.auth_tel=[%s]\n",ps->auth_tel);
	vtcp_log("lv_pkgreg_erdai_c.send_tel=[%s]\n",ps->send_tel);
	vtcp_log("lv_pkgreg_erdai_c.resp_tel=[%s]\n",ps->resp_tel);
	vtcp_log("lv_pkgreg_erdai_c.protno=[%s]\n",ps->protno);
	vtcp_log("lv_pkgreg_erdai_c.mesgpriority=[%s]\n",ps->mesgpriority);
	vtcp_log("lv_pkgreg_erdai_c.txno=[%f]\n",ps->txno);
	vtcp_log("lv_pkgreg_erdai_c.acc_type=[%s]\n",ps->acc_type);
	vtcp_log("lv_pkgreg_erdai_c.lv_brf=[%s]\n",ps->lv_brf);
	vtcp_log("lv_pkgreg_erdai_c.lv_brf2=[%s]\n",ps->lv_brf2);
	vtcp_log("lv_pkgreg_erdai_c.filler=[%s]\n",ps->filler);
	vtcp_log("lv_pkgreg_erdai_c.filler2=[%s]\n",ps->filler2);
	vtcp_log("lv_pkgreg_erdai_c.chargeoff=[%s]\n",ps->chargeoff);
	return(0);
}
/*****************************************************************************/
/****                              查询函数部分[]                       ****/
/*****************************************************************************/
int Lv_pkgreg_erdai_Sel(reply,lv_pkgreg_erdai_c,fmtstr,va_alist)
char    *reply;
struct  lv_pkgreg_erdai_c *lv_pkgreg_erdai_c;
char    *fmtstr;
va_dcl
{
	int   ret;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	ret = Lv_pkgreg_erdai_Dec_Sel( reply , "%s" , wherelist );
	if (ret){
		WRITEMSG
		return ret;
	}
	ret = Lv_pkgreg_erdai_Fet_Sel( lv_pkgreg_erdai_c , reply );
	if (ret){
		WRITEMSG
		return ret;
	}

	Lv_pkgreg_erdai_Clo_Sel();

	return 0;
}



char *key_strcat(char *,char *);
int Lv_pkgreg_erdai_Dec_Sel ( reply , fmtstr , va_alist )
char    *reply;
char    *fmtstr;
va_dcl
{
	EXEC    SQL BEGIN   DECLARE SECTION;
		char    comm[1000];
	EXEC    SQL END     DECLARE SECTION;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	sprintf ( comm ," SELECT rowid,lv_pkgreg_erdai.* FROM lv_pkgreg_erdai WHERE  ");
	key_strcat(comm,wherelist);

	vtcp_log("%s,%d,SQLSTR=[%s]\n",__FILE__,__LINE__,comm);
	sqlca.sqlcode=0;
	EXEC SQL PREPARE lv_pkgreg_erdai_sel FROM :comm;
	EXEC SQL DECLARE sel_lv_pkgreg_erdai CURSOR FOR lv_pkgreg_erdai_sel;

	EXEC SQL OPEN sel_lv_pkgreg_erdai;
	if (sqlca.sqlcode){
		sprintf(acErrMsg,"OPEN lv_pkgreg_erdai error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D102" );
		return CM_SQLCODE;
	}

	return 0;
}

int Lv_pkgreg_erdai_Fet_Sel ( struct lv_pkgreg_erdai_c *lv_pkgreg_erdai_c , char * reply )
{

	int   ret;

	EXEC SQL FETCH sel_lv_pkgreg_erdai INTO :lv_pkgreg_erdai_c;
	if (sqlca.sqlcode&&sqlca.sqlcode!=1403){
		sprintf(acErrMsg,"Fetch lv_pkgreg_erdai error!!! %d",sqlca.sqlcode);
		WRITEMSG
		strcpy (reply,"D103");
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == 1403 ){
		sprintf(acErrMsg,"Fetch lv_pkgreg_erdai finished!!! %d",sqlca.sqlcode);
		WRITEMSG
		strcpy (reply,"D104");
		return CM_SQLCODE;
	}
	zip_struct(lv_pkgreg_erdai_c);

	return 0;
}

int Lv_pkgreg_erdai_Clo_Sel (){
	EXEC SQL CLOSE sel_lv_pkgreg_erdai;
	return 0;
}

/*****************************************************************************/
/****                              修改函数部分                           ****/
/*****************************************************************************/
int Lv_pkgreg_erdai_Dec_Upd( reply , fmtstr , va_alist)
char    *reply;
char    *fmtstr;
va_dcl
{
	EXEC    SQL BEGIN   DECLARE SECTION;
		char    comm[1000];
	EXEC    SQL END     DECLARE SECTION;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	sprintf ( comm , "SELECT rowid,lv_pkgreg_erdai.* FROM lv_pkgreg_erdai WHERE  ");
	key_strcat(comm,wherelist);
	strcat(comm," FOR UPDATE WAIT 5 ");
	vtcp_log("%s,%d,SQLSTR=[%s]\n",__FILE__,__LINE__,comm);
	sqlca.sqlcode=0;
	EXEC SQL PREPARE lv_pkgreg_erdai_upd FROM :comm;

	EXEC SQL DECLARE upd_lv_pkgreg_erdai CURSOR FOR lv_pkgreg_erdai_upd;

	EXEC SQL OPEN upd_lv_pkgreg_erdai;
	if (sqlca.sqlcode){
		sprintf(acErrMsg,"open lv_pkgreg_erdai error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D102" );
		return CM_SQLCODE;
	}

	return 0;
}

int Lv_pkgreg_erdai_Fet_Upd( struct lv_pkgreg_erdai_c *lv_pkgreg_erdai_c , char * reply ){
	int   ret;

	EXEC SQL FETCH upd_lv_pkgreg_erdai INTO :lv_pkgreg_erdai_c;
	if ( sqlca.sqlcode && sqlca.sqlcode!=1403 ){
		sprintf(acErrMsg,"FETCH upd lv_pkgreg_erdai error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D103" );
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == 1403 ){
		sprintf(acErrMsg,"FETCH lv_pkgreg_erdai finished %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D104" );
		return CM_SQLCODE;
	}
	zip_struct(lv_pkgreg_erdai_c);

	return 0;
}

int Lv_pkgreg_erdai_Upd_Upd( struct lv_pkgreg_erdai_c lv_pkgreg_erdai_c , char * reply){
	int ret;

	EXEC SQL UPDATE lv_pkgreg_erdai SET msgtype=:lv_pkgreg_erdai_c.msgtype,
			channel=:lv_pkgreg_erdai_c.channel,
			br_no=:lv_pkgreg_erdai_c.br_no,
			bepsdate=:lv_pkgreg_erdai_c.bepsdate,
			tx_time=:lv_pkgreg_erdai_c.tx_time,
			wt_date=:lv_pkgreg_erdai_c.wt_date,
			orderno=:lv_pkgreg_erdai_c.orderno,
			txtype=:lv_pkgreg_erdai_c.txtype,
			txkind=:lv_pkgreg_erdai_c.txkind,
			cur_no=:lv_pkgreg_erdai_c.cur_no,
			tx_amt=:lv_pkgreg_erdai_c.tx_amt,
			drawtype=:lv_pkgreg_erdai_c.drawtype,
			drawval=:lv_pkgreg_erdai_c.drawval,
			tx_chrg_ind=:lv_pkgreg_erdai_c.tx_chrg_ind,
			chrg_amt=:lv_pkgreg_erdai_c.chrg_amt,
			lw_ind=:lv_pkgreg_erdai_c.lw_ind,
			cdflag=:lv_pkgreg_erdai_c.cdflag,
			or_br_no=:lv_pkgreg_erdai_c.or_br_no,
			pay_qs_no=:lv_pkgreg_erdai_c.pay_qs_no,
			pay_opn_br_no=:lv_pkgreg_erdai_c.pay_opn_br_no,
			pay_opn_br_nm=:lv_pkgreg_erdai_c.pay_opn_br_nm,
			pay_ac_no=:lv_pkgreg_erdai_c.pay_ac_no,
			pay_name=:lv_pkgreg_erdai_c.pay_name,
			pay_addr=:lv_pkgreg_erdai_c.pay_addr,
			ac_br_no=:lv_pkgreg_erdai_c.ac_br_no,
			cash_qs_no=:lv_pkgreg_erdai_c.cash_qs_no,
			cash_opn_br_no=:lv_pkgreg_erdai_c.cash_opn_br_no,
			cash_opn_br_nm=:lv_pkgreg_erdai_c.cash_opn_br_nm,
			cash_ac_no=:lv_pkgreg_erdai_c.cash_ac_no,
			cash_name=:lv_pkgreg_erdai_c.cash_name,
			cash_addr=:lv_pkgreg_erdai_c.cash_addr,
			note_type=:lv_pkgreg_erdai_c.note_type,
			note_no=:lv_pkgreg_erdai_c.note_no,
			lv_sts=:lv_pkgreg_erdai_c.lv_sts,
			pack_date=:lv_pkgreg_erdai_c.pack_date,
			packno=:lv_pkgreg_erdai_c.packno,
			cnapsflag=:lv_pkgreg_erdai_c.cnapsflag,
			rejectcode=:lv_pkgreg_erdai_c.rejectcode,
			rejectreason=:lv_pkgreg_erdai_c.rejectreason,
			returndays=:lv_pkgreg_erdai_c.returndays,
			resp_date=:lv_pkgreg_erdai_c.resp_date,
			respno=:lv_pkgreg_erdai_c.respno,
			rsp_pack_date=:lv_pkgreg_erdai_c.rsp_pack_date,
			rsp_packno=:lv_pkgreg_erdai_c.rsp_packno,
			rcpstat=:lv_pkgreg_erdai_c.rcpstat,
			trandate=:lv_pkgreg_erdai_c.trandate,
			accno=:lv_pkgreg_erdai_c.accno,
			accnm=:lv_pkgreg_erdai_c.accnm,
			tx_date=:lv_pkgreg_erdai_c.tx_date,
			rcv_trace_no=:lv_pkgreg_erdai_c.rcv_trace_no,
			jz_date=:lv_pkgreg_erdai_c.jz_date,
			hostno=:lv_pkgreg_erdai_c.hostno,
			input_tel=:lv_pkgreg_erdai_c.input_tel,
			check_trace_no=:lv_pkgreg_erdai_c.check_trace_no,
			susflag=:lv_pkgreg_erdai_c.susflag,
			gz_br_no=:lv_pkgreg_erdai_c.gz_br_no,
			enteracc=:lv_pkgreg_erdai_c.enteracc,
			enteraccnm=:lv_pkgreg_erdai_c.enteraccnm,
			enteropenbrn=:lv_pkgreg_erdai_c.enteropenbrn,
			enterptdate=:lv_pkgreg_erdai_c.enterptdate,
			enterswno=:lv_pkgreg_erdai_c.enterswno,
			enterdate=:lv_pkgreg_erdai_c.enterdate,
			entertrace=:lv_pkgreg_erdai_c.entertrace,
			entertel=:lv_pkgreg_erdai_c.entertel,
			entertel_no=:lv_pkgreg_erdai_c.entertel_no,
			deal_date=:lv_pkgreg_erdai_c.deal_date,
			deal_swno=:lv_pkgreg_erdai_c.deal_swno,
			deal_mz_date=:lv_pkgreg_erdai_c.deal_mz_date,
			deal_trace_no=:lv_pkgreg_erdai_c.deal_trace_no,
			deal_tel=:lv_pkgreg_erdai_c.deal_tel,
			deal_tel_no=:lv_pkgreg_erdai_c.deal_tel_no,
			gzdeal_trace_no=:lv_pkgreg_erdai_c.gzdeal_trace_no,
			gzdeal_trace_date=:lv_pkgreg_erdai_c.gzdeal_trace_date,
			gzdeal_host_no=:lv_pkgreg_erdai_c.gzdeal_host_no,
			gzdeal_host_date=:lv_pkgreg_erdai_c.gzdeal_host_date,
			checkflag=:lv_pkgreg_erdai_c.checkflag,
			hostflag=:lv_pkgreg_erdai_c.hostflag,
			prt_times=:lv_pkgreg_erdai_c.prt_times,
			check_tel=:lv_pkgreg_erdai_c.check_tel,
			auth_tel=:lv_pkgreg_erdai_c.auth_tel,
			send_tel=:lv_pkgreg_erdai_c.send_tel,
			resp_tel=:lv_pkgreg_erdai_c.resp_tel,
			protno=:lv_pkgreg_erdai_c.protno,
			mesgpriority=:lv_pkgreg_erdai_c.mesgpriority,
			txno=:lv_pkgreg_erdai_c.txno,
			acc_type=:lv_pkgreg_erdai_c.acc_type,
			lv_brf=:lv_pkgreg_erdai_c.lv_brf,
			lv_brf2=:lv_pkgreg_erdai_c.lv_brf2,
			filler=:lv_pkgreg_erdai_c.filler,
			filler2=:lv_pkgreg_erdai_c.filler2,
			chargeoff=:lv_pkgreg_erdai_c.chargeoff
	WHERE rowid=:lv_pkgreg_erdai_c.rowid;
	if ( sqlca.sqlcode && sqlca.sqlcode != 1403 ){
		sprintf(acErrMsg,"UPDATE lv_pkgreg_erdai error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D105" );
		return CM_SQLCODE;
	}

	return 0;
}


int Lv_pkgreg_erdai_Del_Upd(struct lv_pkgreg_erdai_c lv_pkgreg_erdai_c , char * reply  ){

	EXEC SQL DELETE FROM lv_pkgreg_erdai WHERE rowid=:lv_pkgreg_erdai_c.rowid;
	if ( sqlca.sqlcode ){
		sprintf(acErrMsg,"DELETE lv_pkgreg_erdai error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D105" );
		return CM_SQLCODE;
	}

	return 0;
}

int Lv_pkgreg_erdai_Clo_Upd( ){
	EXEC SQL CLOSE upd_lv_pkgreg_erdai;
	return 0;
}

/*****************************************************************************/
/****                              增加函数部分                           ****/
/*****************************************************************************/
int Lv_pkgreg_erdai_Ins( struct lv_pkgreg_erdai_c lv_pkgreg_erdai_c , char * reply ){
	int ret;

	EXEC SQL INSERT INTO lv_pkgreg_erdai VALUES (:lv_pkgreg_erdai_c.msgtype,
			:lv_pkgreg_erdai_c.channel,
			:lv_pkgreg_erdai_c.br_no,
			:lv_pkgreg_erdai_c.bepsdate,
			:lv_pkgreg_erdai_c.tx_time,
			:lv_pkgreg_erdai_c.wt_date,
			:lv_pkgreg_erdai_c.orderno,
			:lv_pkgreg_erdai_c.txtype,
			:lv_pkgreg_erdai_c.txkind,
			:lv_pkgreg_erdai_c.cur_no,
			:lv_pkgreg_erdai_c.tx_amt,
			:lv_pkgreg_erdai_c.drawtype,
			:lv_pkgreg_erdai_c.drawval,
			:lv_pkgreg_erdai_c.tx_chrg_ind,
			:lv_pkgreg_erdai_c.chrg_amt,
			:lv_pkgreg_erdai_c.lw_ind,
			:lv_pkgreg_erdai_c.cdflag,
			:lv_pkgreg_erdai_c.or_br_no,
			:lv_pkgreg_erdai_c.pay_qs_no,
			:lv_pkgreg_erdai_c.pay_opn_br_no,
			:lv_pkgreg_erdai_c.pay_opn_br_nm,
			:lv_pkgreg_erdai_c.pay_ac_no,
			:lv_pkgreg_erdai_c.pay_name,
			:lv_pkgreg_erdai_c.pay_addr,
			:lv_pkgreg_erdai_c.ac_br_no,
			:lv_pkgreg_erdai_c.cash_qs_no,
			:lv_pkgreg_erdai_c.cash_opn_br_no,
			:lv_pkgreg_erdai_c.cash_opn_br_nm,
			:lv_pkgreg_erdai_c.cash_ac_no,
			:lv_pkgreg_erdai_c.cash_name,
			:lv_pkgreg_erdai_c.cash_addr,
			:lv_pkgreg_erdai_c.note_type,
			:lv_pkgreg_erdai_c.note_no,
			:lv_pkgreg_erdai_c.lv_sts,
			:lv_pkgreg_erdai_c.pack_date,
			:lv_pkgreg_erdai_c.packno,
			:lv_pkgreg_erdai_c.cnapsflag,
			:lv_pkgreg_erdai_c.rejectcode,
			:lv_pkgreg_erdai_c.rejectreason,
			:lv_pkgreg_erdai_c.returndays,
			:lv_pkgreg_erdai_c.resp_date,
			:lv_pkgreg_erdai_c.respno,
			:lv_pkgreg_erdai_c.rsp_pack_date,
			:lv_pkgreg_erdai_c.rsp_packno,
			:lv_pkgreg_erdai_c.rcpstat,
			:lv_pkgreg_erdai_c.trandate,
			:lv_pkgreg_erdai_c.accno,
			:lv_pkgreg_erdai_c.accnm,
			:lv_pkgreg_erdai_c.tx_date,
			:lv_pkgreg_erdai_c.rcv_trace_no,
			:lv_pkgreg_erdai_c.jz_date,
			:lv_pkgreg_erdai_c.hostno,
			:lv_pkgreg_erdai_c.input_tel,
			:lv_pkgreg_erdai_c.check_trace_no,
			:lv_pkgreg_erdai_c.susflag,
			:lv_pkgreg_erdai_c.gz_br_no,
			:lv_pkgreg_erdai_c.enteracc,
			:lv_pkgreg_erdai_c.enteraccnm,
			:lv_pkgreg_erdai_c.enteropenbrn,
			:lv_pkgreg_erdai_c.enterptdate,
			:lv_pkgreg_erdai_c.enterswno,
			:lv_pkgreg_erdai_c.enterdate,
			:lv_pkgreg_erdai_c.entertrace,
			:lv_pkgreg_erdai_c.entertel,
			:lv_pkgreg_erdai_c.entertel_no,
			:lv_pkgreg_erdai_c.deal_date,
			:lv_pkgreg_erdai_c.deal_swno,
			:lv_pkgreg_erdai_c.deal_mz_date,
			:lv_pkgreg_erdai_c.deal_trace_no,
			:lv_pkgreg_erdai_c.deal_tel,
			:lv_pkgreg_erdai_c.deal_tel_no,
			:lv_pkgreg_erdai_c.gzdeal_trace_no,
			:lv_pkgreg_erdai_c.gzdeal_trace_date,
			:lv_pkgreg_erdai_c.gzdeal_host_no,
			:lv_pkgreg_erdai_c.gzdeal_host_date,
			:lv_pkgreg_erdai_c.checkflag,
			:lv_pkgreg_erdai_c.hostflag,
			:lv_pkgreg_erdai_c.prt_times,
			:lv_pkgreg_erdai_c.check_tel,
			:lv_pkgreg_erdai_c.auth_tel,
			:lv_pkgreg_erdai_c.send_tel,
			:lv_pkgreg_erdai_c.resp_tel,
			:lv_pkgreg_erdai_c.protno,
			:lv_pkgreg_erdai_c.mesgpriority,
			:lv_pkgreg_erdai_c.txno,
			:lv_pkgreg_erdai_c.acc_type,
			:lv_pkgreg_erdai_c.lv_brf,
			:lv_pkgreg_erdai_c.lv_brf2,
			:lv_pkgreg_erdai_c.filler,
			:lv_pkgreg_erdai_c.filler2,
			:lv_pkgreg_erdai_c.chargeoff);
	if ( sqlca.sqlcode && sqlca.sqlcode != -1 )
	{
		sprintf(acErrMsg,"INSERT lv_pkgreg_erdai error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D107" );
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == -1 )
	{
		sprintf(acErrMsg,"INSERT lv_pkgreg_erdai error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D108" );
		return CM_SQLCODE;
	}

	return 0;
}
