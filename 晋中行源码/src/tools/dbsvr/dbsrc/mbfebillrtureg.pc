#include<stdio.h>
#include<varargs.h>

#define EXTERN
#include"global.h"


EXEC SQL INCLUDE SQLCA;
#include"mbfebillrtureg_c.h"
#define CM_SQLCODE sqlca.sqlcode==1403?100:(sqlca.sqlcode==-1?-239:sqlca.sqlcode)

int mbfebillrtureg_con ( struct mbfebillrtureg_c , char *);
int put_mystery( char *, char * );
char *zip_tail(char *s);
static void zip_struct(struct mbfebillrtureg_c* ps){
	zip_tail(ps->rowid);
	zip_tail(ps->msssno);
	zip_tail(ps->odficode);
	zip_tail(ps->rdficode);
	zip_tail(ps->sts);
	zip_tail(ps->payeropenaccbkcode);
	zip_tail(ps->billcode);
	zip_tail(ps->billofxchngseal);
	zip_tail(ps->appuser);
	zip_tail(ps->billtype);
	zip_tail(ps->origrdficode);
	zip_tail(ps->sendtime);
	zip_tail(ps->errcode);
	zip_tail(ps->errdesc);
	zip_tail(ps->strinfo);
}
int Mbfebillrtureg_Debug(struct mbfebillrtureg_c *ps){
	vtcp_log("mbfebillrtureg_c.rowid=[%s]\n",ps->rowid);
	vtcp_log("mbfebillrtureg_c.msssno=[%s]\n",ps->msssno);
	vtcp_log("mbfebillrtureg_c.consigndate=[%ld]\n",ps->consigndate);
	vtcp_log("mbfebillrtureg_c.odficode=[%s]\n",ps->odficode);
	vtcp_log("mbfebillrtureg_c.rdficode=[%s]\n",ps->rdficode);
	vtcp_log("mbfebillrtureg_c.sts=[%s]\n",ps->sts);
	vtcp_log("mbfebillrtureg_c.payeropenaccbkcode=[%s]\n",ps->payeropenaccbkcode);
	vtcp_log("mbfebillrtureg_c.amount=[%f]\n",ps->amount);
	vtcp_log("mbfebillrtureg_c.billdate=[%ld]\n",ps->billdate);
	vtcp_log("mbfebillrtureg_c.billcode=[%s]\n",ps->billcode);
	vtcp_log("mbfebillrtureg_c.billofxchngseal=[%s]\n",ps->billofxchngseal);
	vtcp_log("mbfebillrtureg_c.appuser=[%s]\n",ps->appuser);
	vtcp_log("mbfebillrtureg_c.billtype=[%s]\n",ps->billtype);
	vtcp_log("mbfebillrtureg_c.origrdficode=[%s]\n",ps->origrdficode);
	vtcp_log("mbfebillrtureg_c.sendtime=[%s]\n",ps->sendtime);
	vtcp_log("mbfebillrtureg_c.setdate=[%ld]\n",ps->setdate);
	vtcp_log("mbfebillrtureg_c.setflowno=[%ld]\n",ps->setflowno);
	vtcp_log("mbfebillrtureg_c.errcode=[%s]\n",ps->errcode);
	vtcp_log("mbfebillrtureg_c.errdesc=[%s]\n",ps->errdesc);
	vtcp_log("mbfebillrtureg_c.strinfo=[%s]\n",ps->strinfo);
	return(0);
}
/*****************************************************************************/
/****                              查询函数部分[]                       ****/
/*****************************************************************************/
int Mbfebillrtureg_Sel(reply,mbfebillrtureg_c,fmtstr,va_alist)
char    *reply;
struct  mbfebillrtureg_c *mbfebillrtureg_c;
char    *fmtstr;
va_dcl
{
	int   ret;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	ret = Mbfebillrtureg_Dec_Sel( reply , "%s" , wherelist );
	if (ret){
		WRITEMSG
		return ret;
	}
	ret = Mbfebillrtureg_Fet_Sel( mbfebillrtureg_c , reply );
	if (ret){
		WRITEMSG
		return ret;
	}

	Mbfebillrtureg_Clo_Sel();

	return 0;
}



char *key_strcat(char *,char *);
int Mbfebillrtureg_Dec_Sel ( reply , fmtstr , va_alist )
char    *reply;
char    *fmtstr;
va_dcl
{
	EXEC    SQL BEGIN   DECLARE SECTION;
		char    comm[1000];
	EXEC    SQL END     DECLARE SECTION;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	sprintf ( comm ," SELECT rowid,mbfebillrtureg.* FROM mbfebillrtureg WHERE  ");
	key_strcat(comm,wherelist);

	vtcp_log("%s,%d,SQLSTR=[%s]\n",__FILE__,__LINE__,comm);
	sqlca.sqlcode=0;
	EXEC SQL PREPARE mbfebillrtureg_sel FROM :comm;
	EXEC SQL DECLARE sel_mbfebillrtureg CURSOR FOR mbfebillrtureg_sel;

	EXEC SQL OPEN sel_mbfebillrtureg;
	if (sqlca.sqlcode){
		sprintf(acErrMsg,"OPEN mbfebillrtureg error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D102" );
		return CM_SQLCODE;
	}

	return 0;
}

int Mbfebillrtureg_Fet_Sel ( struct mbfebillrtureg_c *mbfebillrtureg_c , char * reply )
{

	int   ret;

	EXEC SQL FETCH sel_mbfebillrtureg INTO :mbfebillrtureg_c;
	if (sqlca.sqlcode&&sqlca.sqlcode!=1403){
		sprintf(acErrMsg,"Fetch mbfebillrtureg error!!! %d",sqlca.sqlcode);
		WRITEMSG
		strcpy (reply,"D103");
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == 1403 ){
		sprintf(acErrMsg,"Fetch mbfebillrtureg finished!!! %d",sqlca.sqlcode);
		WRITEMSG
		strcpy (reply,"D104");
		return CM_SQLCODE;
	}
	zip_struct(mbfebillrtureg_c);

	return 0;
}

int Mbfebillrtureg_Clo_Sel (){
	EXEC SQL CLOSE sel_mbfebillrtureg;
	return 0;
}

/*****************************************************************************/
/****                              修改函数部分                           ****/
/*****************************************************************************/
int Mbfebillrtureg_Dec_Upd( reply , fmtstr , va_alist)
char    *reply;
char    *fmtstr;
va_dcl
{
	EXEC    SQL BEGIN   DECLARE SECTION;
		char    comm[1000];
	EXEC    SQL END     DECLARE SECTION;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	sprintf ( comm , "SELECT rowid,mbfebillrtureg.* FROM mbfebillrtureg WHERE  ");
	key_strcat(comm,wherelist);
	strcat(comm," FOR UPDATE WAIT 5 ");
	vtcp_log("%s,%d,SQLSTR=[%s]\n",__FILE__,__LINE__,comm);
	sqlca.sqlcode=0;
	EXEC SQL PREPARE mbfebillrtureg_upd FROM :comm;

	EXEC SQL DECLARE upd_mbfebillrtureg CURSOR FOR mbfebillrtureg_upd;

	EXEC SQL OPEN upd_mbfebillrtureg;
	if (sqlca.sqlcode){
		sprintf(acErrMsg,"open mbfebillrtureg error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D102" );
		return CM_SQLCODE;
	}

	return 0;
}

int Mbfebillrtureg_Fet_Upd( struct mbfebillrtureg_c *mbfebillrtureg_c , char * reply ){
	int   ret;

	EXEC SQL FETCH upd_mbfebillrtureg INTO :mbfebillrtureg_c;
	if ( sqlca.sqlcode && sqlca.sqlcode!=1403 ){
		sprintf(acErrMsg,"FETCH upd mbfebillrtureg error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D103" );
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == 1403 ){
		sprintf(acErrMsg,"FETCH mbfebillrtureg finished %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D104" );
		return CM_SQLCODE;
	}
	zip_struct(mbfebillrtureg_c);

	return 0;
}

int Mbfebillrtureg_Upd_Upd( struct mbfebillrtureg_c mbfebillrtureg_c , char * reply){
	int ret;

	EXEC SQL UPDATE mbfebillrtureg SET msssno=:mbfebillrtureg_c.msssno,
			consigndate=:mbfebillrtureg_c.consigndate,
			odficode=:mbfebillrtureg_c.odficode,
			rdficode=:mbfebillrtureg_c.rdficode,
			sts=:mbfebillrtureg_c.sts,
			payeropenaccbkcode=:mbfebillrtureg_c.payeropenaccbkcode,
			amount=:mbfebillrtureg_c.amount,
			billdate=:mbfebillrtureg_c.billdate,
			billcode=:mbfebillrtureg_c.billcode,
			billofxchngseal=:mbfebillrtureg_c.billofxchngseal,
			appuser=:mbfebillrtureg_c.appuser,
			billtype=:mbfebillrtureg_c.billtype,
			origrdficode=:mbfebillrtureg_c.origrdficode,
			sendtime=:mbfebillrtureg_c.sendtime,
			setdate=:mbfebillrtureg_c.setdate,
			setflowno=:mbfebillrtureg_c.setflowno,
			errcode=:mbfebillrtureg_c.errcode,
			errdesc=:mbfebillrtureg_c.errdesc,
			strinfo=:mbfebillrtureg_c.strinfo
	WHERE rowid=:mbfebillrtureg_c.rowid;
	if ( sqlca.sqlcode && sqlca.sqlcode != 1403 ){
		sprintf(acErrMsg,"UPDATE mbfebillrtureg error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D105" );
		return CM_SQLCODE;
	}

	return 0;
}


int Mbfebillrtureg_Del_Upd(struct mbfebillrtureg_c mbfebillrtureg_c , char * reply  ){

	EXEC SQL DELETE FROM mbfebillrtureg WHERE rowid=:mbfebillrtureg_c.rowid;
	if ( sqlca.sqlcode ){
		sprintf(acErrMsg,"DELETE mbfebillrtureg error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D105" );
		return CM_SQLCODE;
	}

	return 0;
}

int Mbfebillrtureg_Clo_Upd( ){
	EXEC SQL CLOSE upd_mbfebillrtureg;
	return 0;
}

/*****************************************************************************/
/****                              增加函数部分                           ****/
/*****************************************************************************/
int Mbfebillrtureg_Ins( struct mbfebillrtureg_c mbfebillrtureg_c , char * reply ){
	int ret;

	EXEC SQL INSERT INTO mbfebillrtureg VALUES (:mbfebillrtureg_c.msssno,
			:mbfebillrtureg_c.consigndate,
			:mbfebillrtureg_c.odficode,
			:mbfebillrtureg_c.rdficode,
			:mbfebillrtureg_c.sts,
			:mbfebillrtureg_c.payeropenaccbkcode,
			:mbfebillrtureg_c.amount,
			:mbfebillrtureg_c.billdate,
			:mbfebillrtureg_c.billcode,
			:mbfebillrtureg_c.billofxchngseal,
			:mbfebillrtureg_c.appuser,
			:mbfebillrtureg_c.billtype,
			:mbfebillrtureg_c.origrdficode,
			:mbfebillrtureg_c.sendtime,
			:mbfebillrtureg_c.setdate,
			:mbfebillrtureg_c.setflowno,
			:mbfebillrtureg_c.errcode,
			:mbfebillrtureg_c.errdesc,
			:mbfebillrtureg_c.strinfo);
	if ( sqlca.sqlcode && sqlca.sqlcode != -1 )
	{
		sprintf(acErrMsg,"INSERT mbfebillrtureg error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D107" );
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == -1 )
	{
		sprintf(acErrMsg,"INSERT mbfebillrtureg error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D108" );
		return CM_SQLCODE;
	}

	return 0;
}
