#include<stdio.h>
#include<varargs.h>

#define EXTERN
#include"global.h"


EXEC SQL INCLUDE SQLCA;
#include"mob_sendmail_c.h"
#define CM_SQLCODE sqlca.sqlcode==1403?100:(sqlca.sqlcode==-1?-239:sqlca.sqlcode)

int mob_sendmail_con ( struct mob_sendmail_c , char *);
int put_mystery( char *, char * );
char *zip_tail(char *s);
static void zip_struct(struct mob_sendmail_c* ps){
	zip_tail(ps->rowid);
	zip_tail(ps->tx_code);
	zip_tail(ps->ac_no);
	zip_tail(ps->tel);
	zip_tail(ps->opt_no);
	zip_tail(ps->mobile);
	zip_tail(ps->message);
	zip_tail(ps->timeflag);
	zip_tail(ps->send_level);
	zip_tail(ps->proc_flag);
	zip_tail(ps->tx_type);
}
int Mob_sendmail_Debug(struct mob_sendmail_c *ps){
	vtcp_log("mob_sendmail_c.rowid=[%s]\n",ps->rowid);
	vtcp_log("mob_sendmail_c.tx_code=[%s]\n",ps->tx_code);
	vtcp_log("mob_sendmail_c.ac_id=[%ld]\n",ps->ac_id);
	vtcp_log("mob_sendmail_c.ac_no=[%s]\n",ps->ac_no);
	vtcp_log("mob_sendmail_c.tel=[%s]\n",ps->tel);
	vtcp_log("mob_sendmail_c.trace_no=[%ld]\n",ps->trace_no);
	vtcp_log("mob_sendmail_c.tx_date=[%ld]\n",ps->tx_date);
	vtcp_log("mob_sendmail_c.tx_time=[%ld]\n",ps->tx_time);
	vtcp_log("mob_sendmail_c.opt_no=[%s]\n",ps->opt_no);
	vtcp_log("mob_sendmail_c.mobile=[%s]\n",ps->mobile);
	vtcp_log("mob_sendmail_c.message=[%s]\n",ps->message);
	vtcp_log("mob_sendmail_c.timeflag=[%s]\n",ps->timeflag);
	vtcp_log("mob_sendmail_c.t_date=[%ld]\n",ps->t_date);
	vtcp_log("mob_sendmail_c.t_time=[%ld]\n",ps->t_time);
	vtcp_log("mob_sendmail_c.send_level=[%s]\n",ps->send_level);
	vtcp_log("mob_sendmail_c.sene_times=[%ld]\n",ps->sene_times);
	vtcp_log("mob_sendmail_c.send_date=[%ld]\n",ps->send_date);
	vtcp_log("mob_sendmail_c.send_time=[%ld]\n",ps->send_time);
	vtcp_log("mob_sendmail_c.sxf_amt=[%f]\n",ps->sxf_amt);
	vtcp_log("mob_sendmail_c.proc_flag=[%s]\n",ps->proc_flag);
	vtcp_log("mob_sendmail_c.tt_no=[%f]\n",ps->tt_no);
	vtcp_log("mob_sendmail_c.tx_type=[%s]\n",ps->tx_type);
	vtcp_log("mob_sendmail_c.mobseq=[%f]\n",ps->mobseq);
	return(0);
}
/*****************************************************************************/
/****                              查询函数部分[]                       ****/
/*****************************************************************************/
int Mob_sendmail_Sel(reply,mob_sendmail_c,fmtstr,va_alist)
char    *reply;
struct  mob_sendmail_c *mob_sendmail_c;
char    *fmtstr;
va_dcl
{
	int   ret;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	ret = Mob_sendmail_Dec_Sel( reply , "%s" , wherelist );
	if (ret){
		WRITEMSG
		return ret;
	}
	ret = Mob_sendmail_Fet_Sel( mob_sendmail_c , reply );
	if (ret){
		WRITEMSG
		return ret;
	}

	Mob_sendmail_Clo_Sel();

	return 0;
}



char *key_strcat(char *,char *);
int Mob_sendmail_Dec_Sel ( reply , fmtstr , va_alist )
char    *reply;
char    *fmtstr;
va_dcl
{
	EXEC    SQL BEGIN   DECLARE SECTION;
		char    comm[1000];
	EXEC    SQL END     DECLARE SECTION;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	sprintf ( comm ," SELECT rowid,mob_sendmail.* FROM mob_sendmail WHERE  ");
	key_strcat(comm,wherelist);

	vtcp_log("%s,%d,SQLSTR=[%s]\n",__FILE__,__LINE__,comm);
	sqlca.sqlcode=0;
	EXEC SQL PREPARE mob_sendmail_sel FROM :comm;
	EXEC SQL DECLARE sel_mob_sendmail CURSOR FOR mob_sendmail_sel;

	EXEC SQL OPEN sel_mob_sendmail;
	if (sqlca.sqlcode){
		sprintf(acErrMsg,"OPEN mob_sendmail error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D102" );
		return CM_SQLCODE;
	}

	return 0;
}

int Mob_sendmail_Fet_Sel ( struct mob_sendmail_c *mob_sendmail_c , char * reply )
{

	int   ret;

	EXEC SQL FETCH sel_mob_sendmail INTO :mob_sendmail_c;
	if (sqlca.sqlcode&&sqlca.sqlcode!=1403){
		sprintf(acErrMsg,"Fetch mob_sendmail error!!! %d",sqlca.sqlcode);
		WRITEMSG
		strcpy (reply,"D103");
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == 1403 ){
		sprintf(acErrMsg,"Fetch mob_sendmail finished!!! %d",sqlca.sqlcode);
		WRITEMSG
		strcpy (reply,"D104");
		return CM_SQLCODE;
	}
	zip_struct(mob_sendmail_c);

	return 0;
}

int Mob_sendmail_Clo_Sel (){
	EXEC SQL CLOSE sel_mob_sendmail;
	return 0;
}

/*****************************************************************************/
/****                              修改函数部分                           ****/
/*****************************************************************************/
int Mob_sendmail_Dec_Upd( reply , fmtstr , va_alist)
char    *reply;
char    *fmtstr;
va_dcl
{
	EXEC    SQL BEGIN   DECLARE SECTION;
		char    comm[1000];
	EXEC    SQL END     DECLARE SECTION;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	sprintf ( comm , "SELECT rowid,mob_sendmail.* FROM mob_sendmail WHERE  ");
	key_strcat(comm,wherelist);
	strcat(comm," FOR UPDATE WAIT 5 ");
	vtcp_log("%s,%d,SQLSTR=[%s]\n",__FILE__,__LINE__,comm);
	sqlca.sqlcode=0;
	EXEC SQL PREPARE mob_sendmail_upd FROM :comm;

	EXEC SQL DECLARE upd_mob_sendmail CURSOR FOR mob_sendmail_upd;

	EXEC SQL OPEN upd_mob_sendmail;
	if (sqlca.sqlcode){
		sprintf(acErrMsg,"open mob_sendmail error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D102" );
		return CM_SQLCODE;
	}

	return 0;
}

int Mob_sendmail_Fet_Upd( struct mob_sendmail_c *mob_sendmail_c , char * reply ){
	int   ret;

	EXEC SQL FETCH upd_mob_sendmail INTO :mob_sendmail_c;
	if ( sqlca.sqlcode && sqlca.sqlcode!=1403 ){
		sprintf(acErrMsg,"FETCH upd mob_sendmail error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D103" );
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == 1403 ){
		sprintf(acErrMsg,"FETCH mob_sendmail finished %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D104" );
		return CM_SQLCODE;
	}
	zip_struct(mob_sendmail_c);

	return 0;
}

int Mob_sendmail_Upd_Upd( struct mob_sendmail_c mob_sendmail_c , char * reply){
	int ret;

	EXEC SQL UPDATE mob_sendmail SET tx_code=:mob_sendmail_c.tx_code,
			ac_id=:mob_sendmail_c.ac_id,
			ac_no=:mob_sendmail_c.ac_no,
			tel=:mob_sendmail_c.tel,
			trace_no=:mob_sendmail_c.trace_no,
			tx_date=:mob_sendmail_c.tx_date,
			tx_time=:mob_sendmail_c.tx_time,
			opt_no=:mob_sendmail_c.opt_no,
			mobile=:mob_sendmail_c.mobile,
			message=:mob_sendmail_c.message,
			timeflag=:mob_sendmail_c.timeflag,
			t_date=:mob_sendmail_c.t_date,
			t_time=:mob_sendmail_c.t_time,
			send_level=:mob_sendmail_c.send_level,
			sene_times=:mob_sendmail_c.sene_times,
			send_date=:mob_sendmail_c.send_date,
			send_time=:mob_sendmail_c.send_time,
			sxf_amt=:mob_sendmail_c.sxf_amt,
			proc_flag=:mob_sendmail_c.proc_flag,
			tt_no=:mob_sendmail_c.tt_no,
			tx_type=:mob_sendmail_c.tx_type,
			mobseq=:mob_sendmail_c.mobseq
	WHERE rowid=:mob_sendmail_c.rowid;
	if ( sqlca.sqlcode && sqlca.sqlcode != 1403 ){
		sprintf(acErrMsg,"UPDATE mob_sendmail error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D105" );
		return CM_SQLCODE;
	}

	return 0;
}


int Mob_sendmail_Del_Upd(struct mob_sendmail_c mob_sendmail_c , char * reply  ){

	EXEC SQL DELETE FROM mob_sendmail WHERE rowid=:mob_sendmail_c.rowid;
	if ( sqlca.sqlcode ){
		sprintf(acErrMsg,"DELETE mob_sendmail error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D105" );
		return CM_SQLCODE;
	}

	return 0;
}

int Mob_sendmail_Clo_Upd( ){
	EXEC SQL CLOSE upd_mob_sendmail;
	return 0;
}

/*****************************************************************************/
/****                              增加函数部分                           ****/
/*****************************************************************************/
int Mob_sendmail_Ins( struct mob_sendmail_c mob_sendmail_c , char * reply ){
	int ret;

	EXEC SQL INSERT INTO mob_sendmail VALUES (:mob_sendmail_c.tx_code,
			:mob_sendmail_c.ac_id,
			:mob_sendmail_c.ac_no,
			:mob_sendmail_c.tel,
			:mob_sendmail_c.trace_no,
			:mob_sendmail_c.tx_date,
			:mob_sendmail_c.tx_time,
			:mob_sendmail_c.opt_no,
			:mob_sendmail_c.mobile,
			:mob_sendmail_c.message,
			:mob_sendmail_c.timeflag,
			:mob_sendmail_c.t_date,
			:mob_sendmail_c.t_time,
			:mob_sendmail_c.send_level,
			:mob_sendmail_c.sene_times,
			:mob_sendmail_c.send_date,
			:mob_sendmail_c.send_time,
			:mob_sendmail_c.sxf_amt,
			:mob_sendmail_c.proc_flag,
			:mob_sendmail_c.tt_no,
			:mob_sendmail_c.tx_type,
			:mob_sendmail_c.mobseq);
	if ( sqlca.sqlcode && sqlca.sqlcode != -1 )
	{
		sprintf(acErrMsg,"INSERT mob_sendmail error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D107" );
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == -1 )
	{
		sprintf(acErrMsg,"INSERT mob_sendmail error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D108" );
		return CM_SQLCODE;
	}

	return 0;
}
/*****************************************************************************/
/****                              查询函数部分[1]                       ****/
/*****************************************************************************/
int Mob_sendmail_Sel1(reply,mob_sendmail_c,fmtstr,va_alist)
char    *reply;
struct  mob_sendmail_c *mob_sendmail_c;
char    *fmtstr;
va_dcl
{
	int   ret;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	ret = Mob_sendmail_Dec_Sel1( reply , "%s" , wherelist );
	if (ret){
		WRITEMSG
		return ret;
	}
	ret = Mob_sendmail_Fet_Sel1( mob_sendmail_c , reply );
	if (ret){
		WRITEMSG
		return ret;
	}

	Mob_sendmail_Clo_Sel1();

	return 0;
}



char *key_strcat(char *,char *);
int Mob_sendmail_Dec_Sel1 ( reply , fmtstr , va_alist )
char    *reply;
char    *fmtstr;
va_dcl
{
	EXEC    SQL BEGIN   DECLARE SECTION;
		char    comm[1000];
	EXEC    SQL END     DECLARE SECTION;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	sprintf ( comm ," SELECT rowid,mob_sendmail.* FROM mob_sendmail WHERE  ");
	key_strcat(comm,wherelist);

	vtcp_log("%s,%d,SQLSTR=[%s]\n",__FILE__,__LINE__,comm);
	sqlca.sqlcode=0;
	EXEC SQL PREPARE mob_sendmail_sel1 FROM :comm;
	EXEC SQL DECLARE sel_mob_sendmail1 CURSOR FOR mob_sendmail_sel1;

	EXEC SQL OPEN sel_mob_sendmail1;
	if (sqlca.sqlcode){
		sprintf(acErrMsg,"OPEN mob_sendmail error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D102" );
		return CM_SQLCODE;
	}

	return 0;
}

int Mob_sendmail_Fet_Sel1 ( struct mob_sendmail_c *mob_sendmail_c , char * reply )
{

	int   ret;

	EXEC SQL FETCH sel_mob_sendmail1 INTO :mob_sendmail_c;
	if (sqlca.sqlcode&&sqlca.sqlcode!=1403){
		sprintf(acErrMsg,"Fetch mob_sendmail error!!! %d",sqlca.sqlcode);
		WRITEMSG
		strcpy (reply,"D103");
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == 1403 ){
		sprintf(acErrMsg,"Fetch mob_sendmail finished!!! %d",sqlca.sqlcode);
		WRITEMSG
		strcpy (reply,"D104");
		return CM_SQLCODE;
	}
	zip_struct(mob_sendmail_c);

	return 0;
}

int Mob_sendmail_Clo_Sel1 (){
	EXEC SQL CLOSE sel_mob_sendmail1;
	return 0;
}

/*****************************************************************************/
/****                              修改函数部分                           ****/
/*****************************************************************************/
int Mob_sendmail_Dec_Upd1( reply , fmtstr , va_alist)
char    *reply;
char    *fmtstr;
va_dcl
{
	EXEC    SQL BEGIN   DECLARE SECTION;
		char    comm[1000];
	EXEC    SQL END     DECLARE SECTION;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	sprintf ( comm , "SELECT rowid,mob_sendmail.* FROM mob_sendmail WHERE  ");
	key_strcat(comm,wherelist);
	strcat(comm," FOR UPDATE WAIT 5 ");
	vtcp_log("%s,%d,SQLSTR=[%s]\n",__FILE__,__LINE__,comm);
	sqlca.sqlcode=0;
	EXEC SQL PREPARE mob_sendmail_upd1 FROM :comm;

	EXEC SQL DECLARE upd_mob_sendmail1 CURSOR FOR mob_sendmail_upd1;

	EXEC SQL OPEN upd_mob_sendmail1;
	if (sqlca.sqlcode){
		sprintf(acErrMsg,"open mob_sendmail error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D102" );
		return CM_SQLCODE;
	}

	return 0;
}

int Mob_sendmail_Fet_Upd1( struct mob_sendmail_c *mob_sendmail_c , char * reply ){
	int   ret;

	EXEC SQL FETCH upd_mob_sendmail1 INTO :mob_sendmail_c;
	if ( sqlca.sqlcode && sqlca.sqlcode!=1403 ){
		sprintf(acErrMsg,"FETCH upd mob_sendmail error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D103" );
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == 1403 ){
		sprintf(acErrMsg,"FETCH mob_sendmail finished %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D104" );
		return CM_SQLCODE;
	}
	zip_struct(mob_sendmail_c);

	return 0;
}

int Mob_sendmail_Clo_Upd1( ){
	EXEC SQL CLOSE upd_mob_sendmail1;
	return 0;
}

