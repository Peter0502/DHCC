#include<stdio.h>
#include<varargs.h>

#define EXTERN
#include"global.h"


EXEC SQL INCLUDE SQLCA;
#include"lv_c554r_c.h"
#define CM_SQLCODE sqlca.sqlcode==1403?100:(sqlca.sqlcode==-1?-239:sqlca.sqlcode)

int lv_c554r_con ( struct lv_c554r_c , char *);
int put_mystery( char *, char * );
char *zip_tail(char *s);
static void zip_struct(struct lv_c554r_c* ps){
	zip_tail(ps->rowid);
	zip_tail(ps->cmtno);
	zip_tail(ps->brno);
	zip_tail(ps->tlrno);
	zip_tail(ps->sendco);
	zip_tail(ps->acbrno);
	zip_tail(ps->iftype);
	zip_tail(ps->payno);
	zip_tail(ps->paymon);
	zip_tail(ps->aorm);
	zip_tail(ps->rebakno);
	zip_tail(ps->rebrate);
	zip_tail(ps->rebnum);
	zip_tail(ps->pkgno);
	zip_tail(ps->totnum);
	zip_tail(ps->brate);
	zip_tail(ps->price);
	zip_tail(ps->txamt);
}
int Lv_c554r_Debug(struct lv_c554r_c *ps){
	vtcp_log("lv_c554r_c.rowid=[%s]\n",ps->rowid);
	vtcp_log("lv_c554r_c.cmtno=[%s]\n",ps->cmtno);
	vtcp_log("lv_c554r_c.in_date=[%ld]\n",ps->in_date);
	vtcp_log("lv_c554r_c.wt_date=[%ld]\n",ps->wt_date);
	vtcp_log("lv_c554r_c.brno=[%s]\n",ps->brno);
	vtcp_log("lv_c554r_c.tlrno=[%s]\n",ps->tlrno);
	vtcp_log("lv_c554r_c.sendco=[%s]\n",ps->sendco);
	vtcp_log("lv_c554r_c.acbrno=[%s]\n",ps->acbrno);
	vtcp_log("lv_c554r_c.iftype=[%s]\n",ps->iftype);
	vtcp_log("lv_c554r_c.dtlid=[%ld]\n",ps->dtlid);
	vtcp_log("lv_c554r_c.payno=[%s]\n",ps->payno);
	vtcp_log("lv_c554r_c.paymon=[%s]\n",ps->paymon);
	vtcp_log("lv_c554r_c.sdate=[%ld]\n",ps->sdate);
	vtcp_log("lv_c554r_c.edate=[%ld]\n",ps->edate);
	vtcp_log("lv_c554r_c.aorm=[%s]\n",ps->aorm);
	vtcp_log("lv_c554r_c.rebakno=[%s]\n",ps->rebakno);
	vtcp_log("lv_c554r_c.rebamt=[%f]\n",ps->rebamt);
	vtcp_log("lv_c554r_c.rebrate=[%s]\n",ps->rebrate);
	vtcp_log("lv_c554r_c.rebnum=[%s]\n",ps->rebnum);
	vtcp_log("lv_c554r_c.seqno=[%ld]\n",ps->seqno);
	vtcp_log("lv_c554r_c.pkgno=[%s]\n",ps->pkgno);
	vtcp_log("lv_c554r_c.totnum=[%s]\n",ps->totnum);
	vtcp_log("lv_c554r_c.brate=[%s]\n",ps->brate);
	vtcp_log("lv_c554r_c.price=[%s]\n",ps->price);
	vtcp_log("lv_c554r_c.txamt=[%s]\n",ps->txamt);
	return(0);
}
/*****************************************************************************/
/****                              查询函数部分[]                       ****/
/*****************************************************************************/
int Lv_c554r_Sel(reply,lv_c554r_c,fmtstr,va_alist)
char    *reply;
struct  lv_c554r_c *lv_c554r_c;
char    *fmtstr;
va_dcl
{
	int   ret;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	ret = Lv_c554r_Dec_Sel( reply , "%s" , wherelist );
	if (ret){
		WRITEMSG
		return ret;
	}
	ret = Lv_c554r_Fet_Sel( lv_c554r_c , reply );
	if (ret){
		WRITEMSG
		return ret;
	}

	Lv_c554r_Clo_Sel();

	return 0;
}



char *key_strcat(char *,char *);
int Lv_c554r_Dec_Sel ( reply , fmtstr , va_alist )
char    *reply;
char    *fmtstr;
va_dcl
{
	EXEC    SQL BEGIN   DECLARE SECTION;
		char    comm[1000];
	EXEC    SQL END     DECLARE SECTION;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	sprintf ( comm ," SELECT rowid,lv_c554r.* FROM lv_c554r WHERE  ");
	key_strcat(comm,wherelist);

	vtcp_log("%s,%d,SQLSTR=[%s]\n",__FILE__,__LINE__,comm);
	sqlca.sqlcode=0;
	EXEC SQL PREPARE lv_c554r_sel FROM :comm;
	EXEC SQL DECLARE sel_lv_c554r CURSOR FOR lv_c554r_sel;

	EXEC SQL OPEN sel_lv_c554r;
	if (sqlca.sqlcode){
		sprintf(acErrMsg,"OPEN lv_c554r error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D102" );
		return CM_SQLCODE;
	}

	return 0;
}

int Lv_c554r_Fet_Sel ( struct lv_c554r_c *lv_c554r_c , char * reply )
{

	int   ret;

	EXEC SQL FETCH sel_lv_c554r INTO :lv_c554r_c;
	if (sqlca.sqlcode&&sqlca.sqlcode!=1403){
		sprintf(acErrMsg,"Fetch lv_c554r error!!! %d",sqlca.sqlcode);
		WRITEMSG
		strcpy (reply,"D103");
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == 1403 ){
		sprintf(acErrMsg,"Fetch lv_c554r finished!!! %d",sqlca.sqlcode);
		WRITEMSG
		strcpy (reply,"D104");
		return CM_SQLCODE;
	}
	zip_struct(lv_c554r_c);

	return 0;
}

int Lv_c554r_Clo_Sel (){
	EXEC SQL CLOSE sel_lv_c554r;
	return 0;
}

/*****************************************************************************/
/****                              修改函数部分                           ****/
/*****************************************************************************/
int Lv_c554r_Dec_Upd( reply , fmtstr , va_alist)
char    *reply;
char    *fmtstr;
va_dcl
{
	EXEC    SQL BEGIN   DECLARE SECTION;
		char    comm[1000];
	EXEC    SQL END     DECLARE SECTION;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	sprintf ( comm , "SELECT rowid,lv_c554r.* FROM lv_c554r WHERE  ");
	key_strcat(comm,wherelist);
	strcat(comm," FOR UPDATE WAIT 5 ");
	vtcp_log("%s,%d,SQLSTR=[%s]\n",__FILE__,__LINE__,comm);
	sqlca.sqlcode=0;
	EXEC SQL PREPARE lv_c554r_upd FROM :comm;

	EXEC SQL DECLARE upd_lv_c554r CURSOR FOR lv_c554r_upd;

	EXEC SQL OPEN upd_lv_c554r;
	if (sqlca.sqlcode){
		sprintf(acErrMsg,"open lv_c554r error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D102" );
		return CM_SQLCODE;
	}

	return 0;
}

int Lv_c554r_Fet_Upd( struct lv_c554r_c *lv_c554r_c , char * reply ){
	int   ret;

	EXEC SQL FETCH upd_lv_c554r INTO :lv_c554r_c;
	if ( sqlca.sqlcode && sqlca.sqlcode!=1403 ){
		sprintf(acErrMsg,"FETCH upd lv_c554r error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D103" );
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == 1403 ){
		sprintf(acErrMsg,"FETCH lv_c554r finished %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D104" );
		return CM_SQLCODE;
	}
	zip_struct(lv_c554r_c);

	return 0;
}

int Lv_c554r_Upd_Upd( struct lv_c554r_c lv_c554r_c , char * reply){
	int ret;

	EXEC SQL UPDATE lv_c554r SET cmtno=:lv_c554r_c.cmtno,
			in_date=:lv_c554r_c.in_date,
			wt_date=:lv_c554r_c.wt_date,
			brno=:lv_c554r_c.brno,
			tlrno=:lv_c554r_c.tlrno,
			sendco=:lv_c554r_c.sendco,
			acbrno=:lv_c554r_c.acbrno,
			iftype=:lv_c554r_c.iftype,
			dtlid=:lv_c554r_c.dtlid,
			payno=:lv_c554r_c.payno,
			paymon=:lv_c554r_c.paymon,
			sdate=:lv_c554r_c.sdate,
			edate=:lv_c554r_c.edate,
			aorm=:lv_c554r_c.aorm,
			rebakno=:lv_c554r_c.rebakno,
			rebamt=:lv_c554r_c.rebamt,
			rebrate=:lv_c554r_c.rebrate,
			rebnum=:lv_c554r_c.rebnum,
			seqno=:lv_c554r_c.seqno,
			pkgno=:lv_c554r_c.pkgno,
			totnum=:lv_c554r_c.totnum,
			brate=:lv_c554r_c.brate,
			price=:lv_c554r_c.price,
			txamt=:lv_c554r_c.txamt
	WHERE rowid=:lv_c554r_c.rowid;
	if ( sqlca.sqlcode && sqlca.sqlcode != 1403 ){
		sprintf(acErrMsg,"UPDATE lv_c554r error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D105" );
		return CM_SQLCODE;
	}

	return 0;
}


int Lv_c554r_Del_Upd(struct lv_c554r_c lv_c554r_c , char * reply  ){

	EXEC SQL DELETE FROM lv_c554r WHERE rowid=:lv_c554r_c.rowid;
	if ( sqlca.sqlcode ){
		sprintf(acErrMsg,"DELETE lv_c554r error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D105" );
		return CM_SQLCODE;
	}

	return 0;
}

int Lv_c554r_Clo_Upd( ){
	EXEC SQL CLOSE upd_lv_c554r;
	return 0;
}

/*****************************************************************************/
/****                              增加函数部分                           ****/
/*****************************************************************************/
int Lv_c554r_Ins( struct lv_c554r_c lv_c554r_c , char * reply ){
	int ret;

	EXEC SQL INSERT INTO lv_c554r VALUES (:lv_c554r_c.cmtno,
			:lv_c554r_c.in_date,
			:lv_c554r_c.wt_date,
			:lv_c554r_c.brno,
			:lv_c554r_c.tlrno,
			:lv_c554r_c.sendco,
			:lv_c554r_c.acbrno,
			:lv_c554r_c.iftype,
			:lv_c554r_c.dtlid,
			:lv_c554r_c.payno,
			:lv_c554r_c.paymon,
			:lv_c554r_c.sdate,
			:lv_c554r_c.edate,
			:lv_c554r_c.aorm,
			:lv_c554r_c.rebakno,
			:lv_c554r_c.rebamt,
			:lv_c554r_c.rebrate,
			:lv_c554r_c.rebnum,
			:lv_c554r_c.seqno,
			:lv_c554r_c.pkgno,
			:lv_c554r_c.totnum,
			:lv_c554r_c.brate,
			:lv_c554r_c.price,
			:lv_c554r_c.txamt);
	if ( sqlca.sqlcode && sqlca.sqlcode != -1 )
	{
		sprintf(acErrMsg,"INSERT lv_c554r error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D107" );
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == -1 )
	{
		sprintf(acErrMsg,"INSERT lv_c554r error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D108" );
		return CM_SQLCODE;
	}

	return 0;
}
