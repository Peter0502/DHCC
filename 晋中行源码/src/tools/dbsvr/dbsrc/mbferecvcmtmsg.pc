#include<stdio.h>
#include<varargs.h>

#define EXTERN
#include"global.h"


EXEC SQL INCLUDE SQLCA;
#include"mbferecvcmtmsg_c.h"
#define CM_SQLCODE sqlca.sqlcode==1403?100:(sqlca.sqlcode==-1?-239:sqlca.sqlcode)

int mbferecvcmtmsg_con ( struct mbferecvcmtmsg_c , char *);
int put_mystery( char *, char * );
char *zip_tail(char *s);
static void zip_struct(struct mbferecvcmtmsg_c* ps){
	zip_tail(ps->rowid);
	zip_tail(ps->cmt_use);
	zip_tail(ps->srflag);
	zip_tail(ps->oper_type);
	zip_tail(ps->oper_syscode);
	zip_tail(ps->comsno);
	zip_tail(ps->respno);
	zip_tail(ps->sendtime);
	zip_tail(ps->cmtno);
	zip_tail(ps->recvtime);
}
int Mbferecvcmtmsg_Debug(struct mbferecvcmtmsg_c *ps){
	vtcp_log("mbferecvcmtmsg_c.rowid=[%s]\n",ps->rowid);
	vtcp_log("mbferecvcmtmsg_c.cmt_len=[%ld]\n",ps->cmt_len);
	vtcp_log("mbferecvcmtmsg_c.cmt_use=[%s]\n",ps->cmt_use);
	vtcp_log("mbferecvcmtmsg_c.srflag=[%s]\n",ps->srflag);
	vtcp_log("mbferecvcmtmsg_c.oper_type=[%s]\n",ps->oper_type);
	vtcp_log("mbferecvcmtmsg_c.oper_syscode=[%s]\n",ps->oper_syscode);
	vtcp_log("mbferecvcmtmsg_c.comsno=[%s]\n",ps->comsno);
	vtcp_log("mbferecvcmtmsg_c.respno=[%s]\n",ps->respno);
	vtcp_log("mbferecvcmtmsg_c.sendtime=[%s]\n",ps->sendtime);
	vtcp_log("mbferecvcmtmsg_c.cmtno=[%s]\n",ps->cmtno);
	vtcp_log("mbferecvcmtmsg_c.cnapsdate=[%ld]\n",ps->cnapsdate);
	vtcp_log("mbferecvcmtmsg_c.recvtime=[%s]\n",ps->recvtime);
	return(0);
}
/*****************************************************************************/
/****                              查询函数部分[]                       ****/
/*****************************************************************************/
int Mbferecvcmtmsg_Sel(reply,mbferecvcmtmsg_c,fmtstr,va_alist)
char    *reply;
struct  mbferecvcmtmsg_c *mbferecvcmtmsg_c;
char    *fmtstr;
va_dcl
{
	int   ret;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	ret = Mbferecvcmtmsg_Dec_Sel( reply , "%s" , wherelist );
	if (ret){
		WRITEMSG
		return ret;
	}
	ret = Mbferecvcmtmsg_Fet_Sel( mbferecvcmtmsg_c , reply );
	if (ret){
		WRITEMSG
		return ret;
	}

	Mbferecvcmtmsg_Clo_Sel();

	return 0;
}



char *key_strcat(char *,char *);
int Mbferecvcmtmsg_Dec_Sel ( reply , fmtstr , va_alist )
char    *reply;
char    *fmtstr;
va_dcl
{
	EXEC    SQL BEGIN   DECLARE SECTION;
		char    comm[1000];
	EXEC    SQL END     DECLARE SECTION;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	sprintf ( comm ," SELECT rowid,mbferecvcmtmsg.* FROM mbferecvcmtmsg WHERE  ");
	key_strcat(comm,wherelist);

	vtcp_log("%s,%d,SQLSTR=[%s]\n",__FILE__,__LINE__,comm);
	sqlca.sqlcode=0;
	EXEC SQL PREPARE mbferecvcmtmsg_sel FROM :comm;
	EXEC SQL DECLARE sel_mbferecvcmtmsg CURSOR FOR mbferecvcmtmsg_sel;

	EXEC SQL OPEN sel_mbferecvcmtmsg;
	if (sqlca.sqlcode){
		sprintf(acErrMsg,"OPEN mbferecvcmtmsg error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D102" );
		return CM_SQLCODE;
	}

	return 0;
}

int Mbferecvcmtmsg_Fet_Sel ( struct mbferecvcmtmsg_c *mbferecvcmtmsg_c , char * reply )
{

	int   ret;

	EXEC SQL FETCH sel_mbferecvcmtmsg INTO :mbferecvcmtmsg_c;
	if (sqlca.sqlcode&&sqlca.sqlcode!=1403){
		sprintf(acErrMsg,"Fetch mbferecvcmtmsg error!!! %d",sqlca.sqlcode);
		WRITEMSG
		strcpy (reply,"D103");
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == 1403 ){
		sprintf(acErrMsg,"Fetch mbferecvcmtmsg finished!!! %d",sqlca.sqlcode);
		WRITEMSG
		strcpy (reply,"D104");
		return CM_SQLCODE;
	}
	zip_struct(mbferecvcmtmsg_c);

	return 0;
}

int Mbferecvcmtmsg_Clo_Sel (){
	EXEC SQL CLOSE sel_mbferecvcmtmsg;
	return 0;
}

/*****************************************************************************/
/****                              修改函数部分                           ****/
/*****************************************************************************/
int Mbferecvcmtmsg_Dec_Upd( reply , fmtstr , va_alist)
char    *reply;
char    *fmtstr;
va_dcl
{
	EXEC    SQL BEGIN   DECLARE SECTION;
		char    comm[1000];
	EXEC    SQL END     DECLARE SECTION;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	sprintf ( comm , "SELECT rowid,mbferecvcmtmsg.* FROM mbferecvcmtmsg WHERE  ");
	key_strcat(comm,wherelist);
	strcat(comm," FOR UPDATE WAIT 5 ");
	vtcp_log("%s,%d,SQLSTR=[%s]\n",__FILE__,__LINE__,comm);
	sqlca.sqlcode=0;
	EXEC SQL PREPARE mbferecvcmtmsg_upd FROM :comm;

	EXEC SQL DECLARE upd_mbferecvcmtmsg CURSOR FOR mbferecvcmtmsg_upd;

	EXEC SQL OPEN upd_mbferecvcmtmsg;
	if (sqlca.sqlcode){
		sprintf(acErrMsg,"open mbferecvcmtmsg error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D102" );
		return CM_SQLCODE;
	}

	return 0;
}

int Mbferecvcmtmsg_Fet_Upd( struct mbferecvcmtmsg_c *mbferecvcmtmsg_c , char * reply ){
	int   ret;

	EXEC SQL FETCH upd_mbferecvcmtmsg INTO :mbferecvcmtmsg_c;
	if ( sqlca.sqlcode && sqlca.sqlcode!=1403 ){
		sprintf(acErrMsg,"FETCH upd mbferecvcmtmsg error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D103" );
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == 1403 ){
		sprintf(acErrMsg,"FETCH mbferecvcmtmsg finished %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D104" );
		return CM_SQLCODE;
	}
	zip_struct(mbferecvcmtmsg_c);

	return 0;
}

int Mbferecvcmtmsg_Upd_Upd( struct mbferecvcmtmsg_c mbferecvcmtmsg_c , char * reply){
	int ret;

	EXEC SQL UPDATE mbferecvcmtmsg SET cmt_len=:mbferecvcmtmsg_c.cmt_len,
			cmt_use=:mbferecvcmtmsg_c.cmt_use,
			srflag=:mbferecvcmtmsg_c.srflag,
			oper_type=:mbferecvcmtmsg_c.oper_type,
			oper_syscode=:mbferecvcmtmsg_c.oper_syscode,
			comsno=:mbferecvcmtmsg_c.comsno,
			respno=:mbferecvcmtmsg_c.respno,
			sendtime=:mbferecvcmtmsg_c.sendtime,
			cmtno=:mbferecvcmtmsg_c.cmtno,
			cnapsdate=:mbferecvcmtmsg_c.cnapsdate,
			recvtime=:mbferecvcmtmsg_c.recvtime
	WHERE rowid=:mbferecvcmtmsg_c.rowid;
	if ( sqlca.sqlcode && sqlca.sqlcode != 1403 ){
		sprintf(acErrMsg,"UPDATE mbferecvcmtmsg error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D105" );
		return CM_SQLCODE;
	}

	return 0;
}


int Mbferecvcmtmsg_Del_Upd(struct mbferecvcmtmsg_c mbferecvcmtmsg_c , char * reply  ){

	EXEC SQL DELETE FROM mbferecvcmtmsg WHERE rowid=:mbferecvcmtmsg_c.rowid;
	if ( sqlca.sqlcode ){
		sprintf(acErrMsg,"DELETE mbferecvcmtmsg error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D105" );
		return CM_SQLCODE;
	}

	return 0;
}

int Mbferecvcmtmsg_Clo_Upd( ){
	EXEC SQL CLOSE upd_mbferecvcmtmsg;
	return 0;
}

/*****************************************************************************/
/****                              增加函数部分                           ****/
/*****************************************************************************/
int Mbferecvcmtmsg_Ins( struct mbferecvcmtmsg_c mbferecvcmtmsg_c , char * reply ){
	int ret;

	EXEC SQL INSERT INTO mbferecvcmtmsg VALUES (:mbferecvcmtmsg_c.cmt_len,
			:mbferecvcmtmsg_c.cmt_use,
			:mbferecvcmtmsg_c.srflag,
			:mbferecvcmtmsg_c.oper_type,
			:mbferecvcmtmsg_c.oper_syscode,
			:mbferecvcmtmsg_c.comsno,
			:mbferecvcmtmsg_c.respno,
			:mbferecvcmtmsg_c.sendtime,
			:mbferecvcmtmsg_c.cmtno,
			:mbferecvcmtmsg_c.cnapsdate,
			:mbferecvcmtmsg_c.recvtime);
	if ( sqlca.sqlcode && sqlca.sqlcode != -1 )
	{
		sprintf(acErrMsg,"INSERT mbferecvcmtmsg error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D107" );
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == -1 )
	{
		sprintf(acErrMsg,"INSERT mbferecvcmtmsg error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D108" );
		return CM_SQLCODE;
	}

	return 0;
}
