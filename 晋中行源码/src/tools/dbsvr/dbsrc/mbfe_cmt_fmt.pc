#include<stdio.h>
#include<varargs.h>

#define EXTERN
#include"global.h"


EXEC SQL INCLUDE SQLCA;
#include"mbfe_cmt_fmt_c.h"
#define CM_SQLCODE sqlca.sqlcode==1403?100:(sqlca.sqlcode==-1?-239:sqlca.sqlcode)

int mbfe_cmt_fmt_con ( struct mbfe_cmt_fmt_c , char *);
int put_mystery( char *, char * );
char *zip_tail(char *s);
static void zip_struct(struct mbfe_cmt_fmt_c* ps){
	zip_tail(ps->rowid);
	zip_tail(ps->cmtno);
	zip_tail(ps->cmt_name);
	zip_tail(ps->head_flag);
	zip_tail(ps->oper_type);
	zip_tail(ps->send_period);
	zip_tail(ps->regtable);
	zip_tail(ps->od_tx_code);
	zip_tail(ps->rd_tx_code);
}
int Mbfe_cmt_fmt_Debug(struct mbfe_cmt_fmt_c *ps){
	vtcp_log("mbfe_cmt_fmt_c.rowid=[%s]\n",ps->rowid);
	vtcp_log("mbfe_cmt_fmt_c.cmtno=[%s]\n",ps->cmtno);
	vtcp_log("mbfe_cmt_fmt_c.cmt_name=[%s]\n",ps->cmt_name);
	vtcp_log("mbfe_cmt_fmt_c.head_flag=[%s]\n",ps->head_flag);
	vtcp_log("mbfe_cmt_fmt_c.oper_type=[%s]\n",ps->oper_type);
	vtcp_log("mbfe_cmt_fmt_c.send_period=[%s]\n",ps->send_period);
	vtcp_log("mbfe_cmt_fmt_c.regtable=[%s]\n",ps->regtable);
	vtcp_log("mbfe_cmt_fmt_c.od_tx_code=[%s]\n",ps->od_tx_code);
	vtcp_log("mbfe_cmt_fmt_c.rd_tx_code=[%s]\n",ps->rd_tx_code);
	return(0);
}
/*****************************************************************************/
/****                              查询函数部分[]                       ****/
/*****************************************************************************/
int Mbfe_cmt_fmt_Sel(reply,mbfe_cmt_fmt_c,fmtstr,va_alist)
char    *reply;
struct  mbfe_cmt_fmt_c *mbfe_cmt_fmt_c;
char    *fmtstr;
va_dcl
{
	int   ret;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	ret = Mbfe_cmt_fmt_Dec_Sel( reply , "%s" , wherelist );
	if (ret){
		WRITEMSG
		return ret;
	}
	ret = Mbfe_cmt_fmt_Fet_Sel( mbfe_cmt_fmt_c , reply );
	if (ret){
		WRITEMSG
		return ret;
	}

	Mbfe_cmt_fmt_Clo_Sel();

	return 0;
}



char *key_strcat(char *,char *);
int Mbfe_cmt_fmt_Dec_Sel ( reply , fmtstr , va_alist )
char    *reply;
char    *fmtstr;
va_dcl
{
	EXEC    SQL BEGIN   DECLARE SECTION;
		char    comm[1000];
	EXEC    SQL END     DECLARE SECTION;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	sprintf ( comm ," SELECT rowid,mbfe_cmt_fmt.* FROM mbfe_cmt_fmt WHERE  ");
	key_strcat(comm,wherelist);

	vtcp_log("%s,%d,SQLSTR=[%s]\n",__FILE__,__LINE__,comm);
	sqlca.sqlcode=0;
	EXEC SQL PREPARE mbfe_cmt_fmt_sel FROM :comm;
	EXEC SQL DECLARE sel_mbfe_cmt_fmt CURSOR FOR mbfe_cmt_fmt_sel;

	EXEC SQL OPEN sel_mbfe_cmt_fmt;
	if (sqlca.sqlcode){
		sprintf(acErrMsg,"OPEN mbfe_cmt_fmt error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D102" );
		return CM_SQLCODE;
	}

	return 0;
}

int Mbfe_cmt_fmt_Fet_Sel ( struct mbfe_cmt_fmt_c *mbfe_cmt_fmt_c , char * reply )
{

	int   ret;

	EXEC SQL FETCH sel_mbfe_cmt_fmt INTO :mbfe_cmt_fmt_c;
	if (sqlca.sqlcode&&sqlca.sqlcode!=1403){
		sprintf(acErrMsg,"Fetch mbfe_cmt_fmt error!!! %d",sqlca.sqlcode);
		WRITEMSG
		strcpy (reply,"D103");
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == 1403 ){
		sprintf(acErrMsg,"Fetch mbfe_cmt_fmt finished!!! %d",sqlca.sqlcode);
		WRITEMSG
		strcpy (reply,"D104");
		return CM_SQLCODE;
	}
	zip_struct(mbfe_cmt_fmt_c);

	return 0;
}

int Mbfe_cmt_fmt_Clo_Sel (){
	EXEC SQL CLOSE sel_mbfe_cmt_fmt;
	return 0;
}

/*****************************************************************************/
/****                              修改函数部分                           ****/
/*****************************************************************************/
int Mbfe_cmt_fmt_Dec_Upd( reply , fmtstr , va_alist)
char    *reply;
char    *fmtstr;
va_dcl
{
	EXEC    SQL BEGIN   DECLARE SECTION;
		char    comm[1000];
	EXEC    SQL END     DECLARE SECTION;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	sprintf ( comm , "SELECT rowid,mbfe_cmt_fmt.* FROM mbfe_cmt_fmt WHERE  ");
	key_strcat(comm,wherelist);
	strcat(comm," FOR UPDATE WAIT 5 ");
	vtcp_log("%s,%d,SQLSTR=[%s]\n",__FILE__,__LINE__,comm);
	sqlca.sqlcode=0;
	EXEC SQL PREPARE mbfe_cmt_fmt_upd FROM :comm;

	EXEC SQL DECLARE upd_mbfe_cmt_fmt CURSOR FOR mbfe_cmt_fmt_upd;

	EXEC SQL OPEN upd_mbfe_cmt_fmt;
	if (sqlca.sqlcode){
		sprintf(acErrMsg,"open mbfe_cmt_fmt error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D102" );
		return CM_SQLCODE;
	}

	return 0;
}

int Mbfe_cmt_fmt_Fet_Upd( struct mbfe_cmt_fmt_c *mbfe_cmt_fmt_c , char * reply ){
	int   ret;

	EXEC SQL FETCH upd_mbfe_cmt_fmt INTO :mbfe_cmt_fmt_c;
	if ( sqlca.sqlcode && sqlca.sqlcode!=1403 ){
		sprintf(acErrMsg,"FETCH upd mbfe_cmt_fmt error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D103" );
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == 1403 ){
		sprintf(acErrMsg,"FETCH mbfe_cmt_fmt finished %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D104" );
		return CM_SQLCODE;
	}
	zip_struct(mbfe_cmt_fmt_c);

	return 0;
}

int Mbfe_cmt_fmt_Upd_Upd( struct mbfe_cmt_fmt_c mbfe_cmt_fmt_c , char * reply){
	int ret;

	EXEC SQL UPDATE mbfe_cmt_fmt SET cmtno=:mbfe_cmt_fmt_c.cmtno,
			cmt_name=:mbfe_cmt_fmt_c.cmt_name,
			head_flag=:mbfe_cmt_fmt_c.head_flag,
			oper_type=:mbfe_cmt_fmt_c.oper_type,
			send_period=:mbfe_cmt_fmt_c.send_period,
			regtable=:mbfe_cmt_fmt_c.regtable,
			od_tx_code=:mbfe_cmt_fmt_c.od_tx_code,
			rd_tx_code=:mbfe_cmt_fmt_c.rd_tx_code
	WHERE rowid=:mbfe_cmt_fmt_c.rowid;
	if ( sqlca.sqlcode && sqlca.sqlcode != 1403 ){
		sprintf(acErrMsg,"UPDATE mbfe_cmt_fmt error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D105" );
		return CM_SQLCODE;
	}

	return 0;
}


int Mbfe_cmt_fmt_Del_Upd(struct mbfe_cmt_fmt_c mbfe_cmt_fmt_c , char * reply  ){

	EXEC SQL DELETE FROM mbfe_cmt_fmt WHERE rowid=:mbfe_cmt_fmt_c.rowid;
	if ( sqlca.sqlcode ){
		sprintf(acErrMsg,"DELETE mbfe_cmt_fmt error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D105" );
		return CM_SQLCODE;
	}

	return 0;
}

int Mbfe_cmt_fmt_Clo_Upd( ){
	EXEC SQL CLOSE upd_mbfe_cmt_fmt;
	return 0;
}

/*****************************************************************************/
/****                              增加函数部分                           ****/
/*****************************************************************************/
int Mbfe_cmt_fmt_Ins( struct mbfe_cmt_fmt_c mbfe_cmt_fmt_c , char * reply ){
	int ret;

	EXEC SQL INSERT INTO mbfe_cmt_fmt VALUES (:mbfe_cmt_fmt_c.cmtno,
			:mbfe_cmt_fmt_c.cmt_name,
			:mbfe_cmt_fmt_c.head_flag,
			:mbfe_cmt_fmt_c.oper_type,
			:mbfe_cmt_fmt_c.send_period,
			:mbfe_cmt_fmt_c.regtable,
			:mbfe_cmt_fmt_c.od_tx_code,
			:mbfe_cmt_fmt_c.rd_tx_code);
	if ( sqlca.sqlcode && sqlca.sqlcode != -1 )
	{
		sprintf(acErrMsg,"INSERT mbfe_cmt_fmt error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D107" );
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == -1 )
	{
		sprintf(acErrMsg,"INSERT mbfe_cmt_fmt error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D108" );
		return CM_SQLCODE;
	}

	return 0;
}
