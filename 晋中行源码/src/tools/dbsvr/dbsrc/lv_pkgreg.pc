#include<stdio.h>
#include<varargs.h>

#define EXTERN
#include"global.h"


EXEC SQL INCLUDE SQLCA;
#include"lv_pkgreg_c.h"
#define CM_SQLCODE sqlca.sqlcode==1403?100:(sqlca.sqlcode==-1?-239:sqlca.sqlcode)

int lv_pkgreg_con ( struct lv_pkgreg_c , char *);
int put_mystery( char *, char * );
char *zip_tail(char *s);
static void zip_struct(struct lv_pkgreg_c* ps){
	zip_tail(ps->rowid);
	zip_tail(ps->pkgno);
	zip_tail(ps->orderno);
	zip_tail(ps->txnum);
	zip_tail(ps->or_br_no);
	zip_tail(ps->pay_qs_no);
	zip_tail(ps->sendco);
	zip_tail(ps->ac_br_no);
	zip_tail(ps->cash_qs_no);
	zip_tail(ps->receco);
	zip_tail(ps->pay_opn_br_no);
	zip_tail(ps->pay_ac_no);
	zip_tail(ps->pay_name);
	zip_tail(ps->pay_addr);
	zip_tail(ps->cash_opn_br_no);
	zip_tail(ps->cash_ac_no);
	zip_tail(ps->cash_name);
	zip_tail(ps->cash_addr);
	zip_tail(ps->lv_yw_ind);
	zip_tail(ps->lv_brf);
	zip_tail(ps->rcpstat);
	zip_tail(ps->resp1);
	zip_tail(ps->resp2);
	zip_tail(ps->note_type);
	zip_tail(ps->note_no);
	zip_tail(ps->addid);
	zip_tail(ps->br_no);
	zip_tail(ps->input_tel);
	zip_tail(ps->check_tel);
	zip_tail(ps->auth_tel);
	zip_tail(ps->send_tel);
	zip_tail(ps->resp_tel);
	zip_tail(ps->deal_tel);
	zip_tail(ps->input_trace_no);
	zip_tail(ps->check_trace_no);
	zip_tail(ps->send_trace_no);
	zip_tail(ps->resp_trace_no);
	zip_tail(ps->deal_trace_no);
	zip_tail(ps->lv_sts);
	zip_tail(ps->beg_sts);
	zip_tail(ps->operlevel);
	zip_tail(ps->tx_chrg_ind);
	zip_tail(ps->checkflag);
	zip_tail(ps->brprtflag);
	zip_tail(ps->qsprtflag);
	zip_tail(ps->packid);
	zip_tail(ps->retcode);
	zip_tail(ps->o_txnum);
	zip_tail(ps->ywdtlid);
	zip_tail(ps->protno);
	zip_tail(ps->ac_type);
	zip_tail(ps->refno);
	zip_tail(ps->o_or_br_no);
	zip_tail(ps->o_orderno);
	zip_tail(ps->o_packid);
	zip_tail(ps->o_ac_br_no);
	zip_tail(ps->lv_o_sts);
	zip_tail(ps->lw_ind);
	zip_tail(ps->cur_no);
	zip_tail(ps->filler);
}
int Lv_pkgreg_Debug(struct lv_pkgreg_c *ps){
	vtcp_log("lv_pkgreg_c.rowid=[%s]\n",ps->rowid);
	vtcp_log("lv_pkgreg_c.pkgno=[%s]\n",ps->pkgno);
	vtcp_log("lv_pkgreg_c.jz_date=[%ld]\n",ps->jz_date);
	vtcp_log("lv_pkgreg_c.in_date=[%ld]\n",ps->in_date);
	vtcp_log("lv_pkgreg_c.wt_date=[%ld]\n",ps->wt_date);
	vtcp_log("lv_pkgreg_c.pack_date=[%ld]\n",ps->pack_date);
	vtcp_log("lv_pkgreg_c.orderno=[%s]\n",ps->orderno);
	vtcp_log("lv_pkgreg_c.tx_time=[%ld]\n",ps->tx_time);
	vtcp_log("lv_pkgreg_c.txnum=[%s]\n",ps->txnum);
	vtcp_log("lv_pkgreg_c.or_br_no=[%s]\n",ps->or_br_no);
	vtcp_log("lv_pkgreg_c.pay_qs_no=[%s]\n",ps->pay_qs_no);
	vtcp_log("lv_pkgreg_c.sendco=[%s]\n",ps->sendco);
	vtcp_log("lv_pkgreg_c.ac_br_no=[%s]\n",ps->ac_br_no);
	vtcp_log("lv_pkgreg_c.cash_qs_no=[%s]\n",ps->cash_qs_no);
	vtcp_log("lv_pkgreg_c.receco=[%s]\n",ps->receco);
	vtcp_log("lv_pkgreg_c.tx_amt=[%f]\n",ps->tx_amt);
	vtcp_log("lv_pkgreg_c.pay_opn_br_no=[%s]\n",ps->pay_opn_br_no);
	vtcp_log("lv_pkgreg_c.pay_ac_no=[%s]\n",ps->pay_ac_no);
	vtcp_log("lv_pkgreg_c.pay_name=[%s]\n",ps->pay_name);
	vtcp_log("lv_pkgreg_c.pay_addr=[%s]\n",ps->pay_addr);
	vtcp_log("lv_pkgreg_c.cash_opn_br_no=[%s]\n",ps->cash_opn_br_no);
	vtcp_log("lv_pkgreg_c.cash_ac_no=[%s]\n",ps->cash_ac_no);
	vtcp_log("lv_pkgreg_c.cash_name=[%s]\n",ps->cash_name);
	vtcp_log("lv_pkgreg_c.cash_addr=[%s]\n",ps->cash_addr);
	vtcp_log("lv_pkgreg_c.lv_yw_ind=[%s]\n",ps->lv_yw_ind);
	vtcp_log("lv_pkgreg_c.lv_brf=[%s]\n",ps->lv_brf);
	vtcp_log("lv_pkgreg_c.resp_date=[%ld]\n",ps->resp_date);
	vtcp_log("lv_pkgreg_c.rcpstat=[%s]\n",ps->rcpstat);
	vtcp_log("lv_pkgreg_c.resp1=[%s]\n",ps->resp1);
	vtcp_log("lv_pkgreg_c.resp2=[%s]\n",ps->resp2);
	vtcp_log("lv_pkgreg_c.note_type=[%s]\n",ps->note_type);
	vtcp_log("lv_pkgreg_c.note_no=[%s]\n",ps->note_no);
	vtcp_log("lv_pkgreg_c.addid=[%s]\n",ps->addid);
	vtcp_log("lv_pkgreg_c.br_no=[%s]\n",ps->br_no);
	vtcp_log("lv_pkgreg_c.input_tel=[%s]\n",ps->input_tel);
	vtcp_log("lv_pkgreg_c.check_tel=[%s]\n",ps->check_tel);
	vtcp_log("lv_pkgreg_c.auth_tel=[%s]\n",ps->auth_tel);
	vtcp_log("lv_pkgreg_c.send_tel=[%s]\n",ps->send_tel);
	vtcp_log("lv_pkgreg_c.resp_tel=[%s]\n",ps->resp_tel);
	vtcp_log("lv_pkgreg_c.deal_tel=[%s]\n",ps->deal_tel);
	vtcp_log("lv_pkgreg_c.input_trace_no=[%s]\n",ps->input_trace_no);
	vtcp_log("lv_pkgreg_c.check_trace_no=[%s]\n",ps->check_trace_no);
	vtcp_log("lv_pkgreg_c.send_trace_no=[%s]\n",ps->send_trace_no);
	vtcp_log("lv_pkgreg_c.resp_trace_no=[%s]\n",ps->resp_trace_no);
	vtcp_log("lv_pkgreg_c.deal_trace_no=[%s]\n",ps->deal_trace_no);
	vtcp_log("lv_pkgreg_c.lv_sts=[%s]\n",ps->lv_sts);
	vtcp_log("lv_pkgreg_c.beg_sts=[%s]\n",ps->beg_sts);
	vtcp_log("lv_pkgreg_c.operlevel=[%s]\n",ps->operlevel);
	vtcp_log("lv_pkgreg_c.tx_chrg_ind=[%s]\n",ps->tx_chrg_ind);
	vtcp_log("lv_pkgreg_c.chrg_amt=[%f]\n",ps->chrg_amt);
	vtcp_log("lv_pkgreg_c.checkflag=[%s]\n",ps->checkflag);
	vtcp_log("lv_pkgreg_c.brprtflag=[%s]\n",ps->brprtflag);
	vtcp_log("lv_pkgreg_c.qsprtflag=[%s]\n",ps->qsprtflag);
	vtcp_log("lv_pkgreg_c.packid=[%s]\n",ps->packid);
	vtcp_log("lv_pkgreg_c.retcode=[%s]\n",ps->retcode);
	vtcp_log("lv_pkgreg_c.o_txnum=[%s]\n",ps->o_txnum);
	vtcp_log("lv_pkgreg_c.ywdtlid=[%s]\n",ps->ywdtlid);
	vtcp_log("lv_pkgreg_c.protno=[%s]\n",ps->protno);
	vtcp_log("lv_pkgreg_c.ac_type=[%s]\n",ps->ac_type);
	vtcp_log("lv_pkgreg_c.refno=[%s]\n",ps->refno);
	vtcp_log("lv_pkgreg_c.o_or_br_no=[%s]\n",ps->o_or_br_no);
	vtcp_log("lv_pkgreg_c.o_wt_date=[%ld]\n",ps->o_wt_date);
	vtcp_log("lv_pkgreg_c.o_pack_date=[%ld]\n",ps->o_pack_date);
	vtcp_log("lv_pkgreg_c.o_orderno=[%s]\n",ps->o_orderno);
	vtcp_log("lv_pkgreg_c.o_packid=[%s]\n",ps->o_packid);
	vtcp_log("lv_pkgreg_c.o_ac_br_no=[%s]\n",ps->o_ac_br_no);
	vtcp_log("lv_pkgreg_c.df_chrg_amt=[%f]\n",ps->df_chrg_amt);
	vtcp_log("lv_pkgreg_c.lv_o_sts=[%s]\n",ps->lv_o_sts);
	vtcp_log("lv_pkgreg_c.lw_ind=[%s]\n",ps->lw_ind);
	vtcp_log("lv_pkgreg_c.cur_no=[%s]\n",ps->cur_no);
	vtcp_log("lv_pkgreg_c.filler=[%s]\n",ps->filler);
	return(0);
}
/*****************************************************************************/
/****                              查询函数部分[]                       ****/
/*****************************************************************************/
int Lv_pkgreg_Sel(reply,lv_pkgreg_c,fmtstr,va_alist)
char    *reply;
struct  lv_pkgreg_c *lv_pkgreg_c;
char    *fmtstr;
va_dcl
{
	int   ret;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	ret = Lv_pkgreg_Dec_Sel( reply , "%s" , wherelist );
	if (ret){
		WRITEMSG
		return ret;
	}
	ret = Lv_pkgreg_Fet_Sel( lv_pkgreg_c , reply );
	if (ret){
		WRITEMSG
		return ret;
	}

	Lv_pkgreg_Clo_Sel();

	return 0;
}



char *key_strcat(char *,char *);
int Lv_pkgreg_Dec_Sel ( reply , fmtstr , va_alist )
char    *reply;
char    *fmtstr;
va_dcl
{
	EXEC    SQL BEGIN   DECLARE SECTION;
		char    comm[1000];
	EXEC    SQL END     DECLARE SECTION;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	sprintf ( comm ," SELECT rowid,lv_pkgreg.* FROM lv_pkgreg WHERE  ");
	key_strcat(comm,wherelist);

	vtcp_log("%s,%d,SQLSTR=[%s]\n",__FILE__,__LINE__,comm);
	sqlca.sqlcode=0;
	EXEC SQL PREPARE lv_pkgreg_sel FROM :comm;
	EXEC SQL DECLARE sel_lv_pkgreg CURSOR FOR lv_pkgreg_sel;

	EXEC SQL OPEN sel_lv_pkgreg;
	if (sqlca.sqlcode){
		sprintf(acErrMsg,"OPEN lv_pkgreg error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D102" );
		return CM_SQLCODE;
	}

	return 0;
}

int Lv_pkgreg_Fet_Sel ( struct lv_pkgreg_c *lv_pkgreg_c , char * reply )
{

	int   ret;

	EXEC SQL FETCH sel_lv_pkgreg INTO :lv_pkgreg_c;
	if (sqlca.sqlcode&&sqlca.sqlcode!=1403){
		sprintf(acErrMsg,"Fetch lv_pkgreg error!!! %d",sqlca.sqlcode);
		WRITEMSG
		strcpy (reply,"D103");
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == 1403 ){
		sprintf(acErrMsg,"Fetch lv_pkgreg finished!!! %d",sqlca.sqlcode);
		WRITEMSG
		strcpy (reply,"D104");
		return CM_SQLCODE;
	}
	zip_struct(lv_pkgreg_c);

	return 0;
}

int Lv_pkgreg_Clo_Sel (){
	EXEC SQL CLOSE sel_lv_pkgreg;
	return 0;
}

/*****************************************************************************/
/****                              修改函数部分                           ****/
/*****************************************************************************/
int Lv_pkgreg_Dec_Upd( reply , fmtstr , va_alist)
char    *reply;
char    *fmtstr;
va_dcl
{
	EXEC    SQL BEGIN   DECLARE SECTION;
		char    comm[1000];
	EXEC    SQL END     DECLARE SECTION;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	sprintf ( comm , "SELECT rowid,lv_pkgreg.* FROM lv_pkgreg WHERE  ");
	key_strcat(comm,wherelist);
	strcat(comm," FOR UPDATE WAIT 5 ");
	vtcp_log("%s,%d,SQLSTR=[%s]\n",__FILE__,__LINE__,comm);
	sqlca.sqlcode=0;
	EXEC SQL PREPARE lv_pkgreg_upd FROM :comm;

	EXEC SQL DECLARE upd_lv_pkgreg CURSOR FOR lv_pkgreg_upd;

	EXEC SQL OPEN upd_lv_pkgreg;
	if (sqlca.sqlcode){
		sprintf(acErrMsg,"open lv_pkgreg error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D102" );
		return CM_SQLCODE;
	}

	return 0;
}

int Lv_pkgreg_Fet_Upd( struct lv_pkgreg_c *lv_pkgreg_c , char * reply ){
	int   ret;

	EXEC SQL FETCH upd_lv_pkgreg INTO :lv_pkgreg_c;
	if ( sqlca.sqlcode && sqlca.sqlcode!=1403 ){
		sprintf(acErrMsg,"FETCH upd lv_pkgreg error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D103" );
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == 1403 ){
		sprintf(acErrMsg,"FETCH lv_pkgreg finished %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D104" );
		return CM_SQLCODE;
	}
	zip_struct(lv_pkgreg_c);

	return 0;
}

int Lv_pkgreg_Upd_Upd( struct lv_pkgreg_c lv_pkgreg_c , char * reply){
	int ret;

	EXEC SQL UPDATE lv_pkgreg SET pkgno=:lv_pkgreg_c.pkgno,
			jz_date=:lv_pkgreg_c.jz_date,
			in_date=:lv_pkgreg_c.in_date,
			wt_date=:lv_pkgreg_c.wt_date,
			pack_date=:lv_pkgreg_c.pack_date,
			orderno=:lv_pkgreg_c.orderno,
			tx_time=:lv_pkgreg_c.tx_time,
			txnum=:lv_pkgreg_c.txnum,
			or_br_no=:lv_pkgreg_c.or_br_no,
			pay_qs_no=:lv_pkgreg_c.pay_qs_no,
			sendco=:lv_pkgreg_c.sendco,
			ac_br_no=:lv_pkgreg_c.ac_br_no,
			cash_qs_no=:lv_pkgreg_c.cash_qs_no,
			receco=:lv_pkgreg_c.receco,
			tx_amt=:lv_pkgreg_c.tx_amt,
			pay_opn_br_no=:lv_pkgreg_c.pay_opn_br_no,
			pay_ac_no=:lv_pkgreg_c.pay_ac_no,
			pay_name=:lv_pkgreg_c.pay_name,
			pay_addr=:lv_pkgreg_c.pay_addr,
			cash_opn_br_no=:lv_pkgreg_c.cash_opn_br_no,
			cash_ac_no=:lv_pkgreg_c.cash_ac_no,
			cash_name=:lv_pkgreg_c.cash_name,
			cash_addr=:lv_pkgreg_c.cash_addr,
			lv_yw_ind=:lv_pkgreg_c.lv_yw_ind,
			lv_brf=:lv_pkgreg_c.lv_brf,
			resp_date=:lv_pkgreg_c.resp_date,
			rcpstat=:lv_pkgreg_c.rcpstat,
			resp1=:lv_pkgreg_c.resp1,
			resp2=:lv_pkgreg_c.resp2,
			note_type=:lv_pkgreg_c.note_type,
			note_no=:lv_pkgreg_c.note_no,
			addid=:lv_pkgreg_c.addid,
			br_no=:lv_pkgreg_c.br_no,
			input_tel=:lv_pkgreg_c.input_tel,
			check_tel=:lv_pkgreg_c.check_tel,
			auth_tel=:lv_pkgreg_c.auth_tel,
			send_tel=:lv_pkgreg_c.send_tel,
			resp_tel=:lv_pkgreg_c.resp_tel,
			deal_tel=:lv_pkgreg_c.deal_tel,
			input_trace_no=:lv_pkgreg_c.input_trace_no,
			check_trace_no=:lv_pkgreg_c.check_trace_no,
			send_trace_no=:lv_pkgreg_c.send_trace_no,
			resp_trace_no=:lv_pkgreg_c.resp_trace_no,
			deal_trace_no=:lv_pkgreg_c.deal_trace_no,
			lv_sts=:lv_pkgreg_c.lv_sts,
			beg_sts=:lv_pkgreg_c.beg_sts,
			operlevel=:lv_pkgreg_c.operlevel,
			tx_chrg_ind=:lv_pkgreg_c.tx_chrg_ind,
			chrg_amt=:lv_pkgreg_c.chrg_amt,
			checkflag=:lv_pkgreg_c.checkflag,
			brprtflag=:lv_pkgreg_c.brprtflag,
			qsprtflag=:lv_pkgreg_c.qsprtflag,
			packid=:lv_pkgreg_c.packid,
			retcode=:lv_pkgreg_c.retcode,
			o_txnum=:lv_pkgreg_c.o_txnum,
			ywdtlid=:lv_pkgreg_c.ywdtlid,
			protno=:lv_pkgreg_c.protno,
			ac_type=:lv_pkgreg_c.ac_type,
			refno=:lv_pkgreg_c.refno,
			o_or_br_no=:lv_pkgreg_c.o_or_br_no,
			o_wt_date=:lv_pkgreg_c.o_wt_date,
			o_pack_date=:lv_pkgreg_c.o_pack_date,
			o_orderno=:lv_pkgreg_c.o_orderno,
			o_packid=:lv_pkgreg_c.o_packid,
			o_ac_br_no=:lv_pkgreg_c.o_ac_br_no,
			df_chrg_amt=:lv_pkgreg_c.df_chrg_amt,
			lv_o_sts=:lv_pkgreg_c.lv_o_sts,
			lw_ind=:lv_pkgreg_c.lw_ind,
			cur_no=:lv_pkgreg_c.cur_no,
			filler=:lv_pkgreg_c.filler
	WHERE rowid=:lv_pkgreg_c.rowid;
	if ( sqlca.sqlcode && sqlca.sqlcode != 1403 ){
		sprintf(acErrMsg,"UPDATE lv_pkgreg error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D105" );
		return CM_SQLCODE;
	}

	return 0;
}


int Lv_pkgreg_Del_Upd(struct lv_pkgreg_c lv_pkgreg_c , char * reply  ){

	EXEC SQL DELETE FROM lv_pkgreg WHERE rowid=:lv_pkgreg_c.rowid;
	if ( sqlca.sqlcode ){
		sprintf(acErrMsg,"DELETE lv_pkgreg error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D105" );
		return CM_SQLCODE;
	}

	return 0;
}

int Lv_pkgreg_Clo_Upd( ){
	EXEC SQL CLOSE upd_lv_pkgreg;
	return 0;
}

/*****************************************************************************/
/****                              增加函数部分                           ****/
/*****************************************************************************/
int Lv_pkgreg_Ins( struct lv_pkgreg_c lv_pkgreg_c , char * reply ){
	int ret;

	EXEC SQL INSERT INTO lv_pkgreg VALUES (:lv_pkgreg_c.pkgno,
			:lv_pkgreg_c.jz_date,
			:lv_pkgreg_c.in_date,
			:lv_pkgreg_c.wt_date,
			:lv_pkgreg_c.pack_date,
			:lv_pkgreg_c.orderno,
			:lv_pkgreg_c.tx_time,
			:lv_pkgreg_c.txnum,
			:lv_pkgreg_c.or_br_no,
			:lv_pkgreg_c.pay_qs_no,
			:lv_pkgreg_c.sendco,
			:lv_pkgreg_c.ac_br_no,
			:lv_pkgreg_c.cash_qs_no,
			:lv_pkgreg_c.receco,
			:lv_pkgreg_c.tx_amt,
			:lv_pkgreg_c.pay_opn_br_no,
			:lv_pkgreg_c.pay_ac_no,
			:lv_pkgreg_c.pay_name,
			:lv_pkgreg_c.pay_addr,
			:lv_pkgreg_c.cash_opn_br_no,
			:lv_pkgreg_c.cash_ac_no,
			:lv_pkgreg_c.cash_name,
			:lv_pkgreg_c.cash_addr,
			:lv_pkgreg_c.lv_yw_ind,
			:lv_pkgreg_c.lv_brf,
			:lv_pkgreg_c.resp_date,
			:lv_pkgreg_c.rcpstat,
			:lv_pkgreg_c.resp1,
			:lv_pkgreg_c.resp2,
			:lv_pkgreg_c.note_type,
			:lv_pkgreg_c.note_no,
			:lv_pkgreg_c.addid,
			:lv_pkgreg_c.br_no,
			:lv_pkgreg_c.input_tel,
			:lv_pkgreg_c.check_tel,
			:lv_pkgreg_c.auth_tel,
			:lv_pkgreg_c.send_tel,
			:lv_pkgreg_c.resp_tel,
			:lv_pkgreg_c.deal_tel,
			:lv_pkgreg_c.input_trace_no,
			:lv_pkgreg_c.check_trace_no,
			:lv_pkgreg_c.send_trace_no,
			:lv_pkgreg_c.resp_trace_no,
			:lv_pkgreg_c.deal_trace_no,
			:lv_pkgreg_c.lv_sts,
			:lv_pkgreg_c.beg_sts,
			:lv_pkgreg_c.operlevel,
			:lv_pkgreg_c.tx_chrg_ind,
			:lv_pkgreg_c.chrg_amt,
			:lv_pkgreg_c.checkflag,
			:lv_pkgreg_c.brprtflag,
			:lv_pkgreg_c.qsprtflag,
			:lv_pkgreg_c.packid,
			:lv_pkgreg_c.retcode,
			:lv_pkgreg_c.o_txnum,
			:lv_pkgreg_c.ywdtlid,
			:lv_pkgreg_c.protno,
			:lv_pkgreg_c.ac_type,
			:lv_pkgreg_c.refno,
			:lv_pkgreg_c.o_or_br_no,
			:lv_pkgreg_c.o_wt_date,
			:lv_pkgreg_c.o_pack_date,
			:lv_pkgreg_c.o_orderno,
			:lv_pkgreg_c.o_packid,
			:lv_pkgreg_c.o_ac_br_no,
			:lv_pkgreg_c.df_chrg_amt,
			:lv_pkgreg_c.lv_o_sts,
			:lv_pkgreg_c.lw_ind,
			:lv_pkgreg_c.cur_no,
			:lv_pkgreg_c.filler);
	if ( sqlca.sqlcode && sqlca.sqlcode != -1 )
	{
		sprintf(acErrMsg,"INSERT lv_pkgreg error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D107" );
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == -1 )
	{
		sprintf(acErrMsg,"INSERT lv_pkgreg error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D108" );
		return CM_SQLCODE;
	}

	return 0;
}
