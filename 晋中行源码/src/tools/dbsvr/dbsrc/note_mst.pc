#include<stdio.h>
#include<varargs.h>

#define EXTERN
#include"global.h"


EXEC SQL INCLUDE SQLCA;
#include"note_mst_c.h"
#define CM_SQLCODE sqlca.sqlcode==1403?100:(sqlca.sqlcode==-1?-239:sqlca.sqlcode)

int note_mst_con ( struct note_mst_c , char *);
int put_mystery( char *, char * );
char *zip_tail(char *s);
static void zip_struct(struct note_mst_c* ps){
	zip_tail(ps->rowid);
	zip_tail(ps->tel);
	zip_tail(ps->note_type);
	zip_tail(ps->br_no);
	zip_tail(ps->beg_note_no);
	zip_tail(ps->end_note_no);
	zip_tail(ps->sts);
}
int Note_mst_Debug(struct note_mst_c *ps){
	vtcp_log("note_mst_c.rowid=[%s]\n",ps->rowid);
	vtcp_log("note_mst_c.tel=[%s]\n",ps->tel);
	vtcp_log("note_mst_c.note_type=[%s]\n",ps->note_type);
	vtcp_log("note_mst_c.br_no=[%s]\n",ps->br_no);
	vtcp_log("note_mst_c.beg_note_no=[%s]\n",ps->beg_note_no);
	vtcp_log("note_mst_c.end_note_no=[%s]\n",ps->end_note_no);
	vtcp_log("note_mst_c.sts=[%s]\n",ps->sts);
	vtcp_log("note_mst_c.cnt=[%ld]\n",ps->cnt);
	vtcp_log("note_mst_c.ys_cnt=[%ld]\n",ps->ys_cnt);
	return(0);
}
/*****************************************************************************/
/****                              查询函数部分[]                       ****/
/*****************************************************************************/
int Note_mst_Sel(reply,note_mst_c,fmtstr,va_alist)
char    *reply;
struct  note_mst_c *note_mst_c;
char    *fmtstr;
va_dcl
{
	int   ret;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	ret = Note_mst_Dec_Sel( reply , "%s" , wherelist );
	if (ret){
		WRITEMSG
		return ret;
	}
	ret = Note_mst_Fet_Sel( note_mst_c , reply );
	if (ret){
		WRITEMSG
		return ret;
	}

	Note_mst_Clo_Sel();

	return 0;
}



char *key_strcat(char *,char *);
int Note_mst_Dec_Sel ( reply , fmtstr , va_alist )
char    *reply;
char    *fmtstr;
va_dcl
{
	EXEC    SQL BEGIN   DECLARE SECTION;
		char    comm[1000];
	EXEC    SQL END     DECLARE SECTION;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	sprintf ( comm ," SELECT rowid,note_mst.* FROM note_mst WHERE  ");
	key_strcat(comm,wherelist);

	vtcp_log("%s,%d,SQLSTR=[%s]\n",__FILE__,__LINE__,comm);
	sqlca.sqlcode=0;
	EXEC SQL PREPARE note_mst_sel FROM :comm;
	EXEC SQL DECLARE sel_note_mst CURSOR FOR note_mst_sel;

	EXEC SQL OPEN sel_note_mst;
	if (sqlca.sqlcode){
		sprintf(acErrMsg,"OPEN note_mst error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D102" );
		return CM_SQLCODE;
	}

	return 0;
}

int Note_mst_Fet_Sel ( struct note_mst_c *note_mst_c , char * reply )
{

	int   ret;

	EXEC SQL FETCH sel_note_mst INTO :note_mst_c;
	if (sqlca.sqlcode&&sqlca.sqlcode!=1403){
		sprintf(acErrMsg,"Fetch note_mst error!!! %d",sqlca.sqlcode);
		WRITEMSG
		strcpy (reply,"D103");
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == 1403 ){
		sprintf(acErrMsg,"Fetch note_mst finished!!! %d",sqlca.sqlcode);
		WRITEMSG
		strcpy (reply,"D104");
		return CM_SQLCODE;
	}
	zip_struct(note_mst_c);

	return 0;
}

int Note_mst_Clo_Sel (){
	EXEC SQL CLOSE sel_note_mst;
	return 0;
}

/*****************************************************************************/
/****                              修改函数部分                           ****/
/*****************************************************************************/
int Note_mst_Dec_Upd( reply , fmtstr , va_alist)
char    *reply;
char    *fmtstr;
va_dcl
{
	EXEC    SQL BEGIN   DECLARE SECTION;
		char    comm[1000];
	EXEC    SQL END     DECLARE SECTION;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	sprintf ( comm , "SELECT rowid,note_mst.* FROM note_mst WHERE  ");
	key_strcat(comm,wherelist);
	strcat(comm," FOR UPDATE WAIT 5 ");
	vtcp_log("%s,%d,SQLSTR=[%s]\n",__FILE__,__LINE__,comm);
	sqlca.sqlcode=0;
	EXEC SQL PREPARE note_mst_upd FROM :comm;

	EXEC SQL DECLARE upd_note_mst CURSOR FOR note_mst_upd;

	EXEC SQL OPEN upd_note_mst;
	if (sqlca.sqlcode){
		sprintf(acErrMsg,"open note_mst error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D102" );
		return CM_SQLCODE;
	}

	return 0;
}

int Note_mst_Fet_Upd( struct note_mst_c *note_mst_c , char * reply ){
	int   ret;

	EXEC SQL FETCH upd_note_mst INTO :note_mst_c;
	if ( sqlca.sqlcode && sqlca.sqlcode!=1403 ){
		sprintf(acErrMsg,"FETCH upd note_mst error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D103" );
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == 1403 ){
		sprintf(acErrMsg,"FETCH note_mst finished %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D104" );
		return CM_SQLCODE;
	}
	zip_struct(note_mst_c);

	return 0;
}

int Note_mst_Upd_Upd( struct note_mst_c note_mst_c , char * reply){
	int ret;

	EXEC SQL UPDATE note_mst SET tel=:note_mst_c.tel,
			note_type=:note_mst_c.note_type,
			br_no=:note_mst_c.br_no,
			beg_note_no=:note_mst_c.beg_note_no,
			end_note_no=:note_mst_c.end_note_no,
			sts=:note_mst_c.sts,
			cnt=:note_mst_c.cnt,
			ys_cnt=:note_mst_c.ys_cnt
	WHERE rowid=:note_mst_c.rowid;
	if ( sqlca.sqlcode && sqlca.sqlcode != 1403 ){
		sprintf(acErrMsg,"UPDATE note_mst error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D105" );
		return CM_SQLCODE;
	}

	return 0;
}


int Note_mst_Del_Upd(struct note_mst_c note_mst_c , char * reply  ){

	EXEC SQL DELETE FROM note_mst WHERE rowid=:note_mst_c.rowid;
	if ( sqlca.sqlcode ){
		sprintf(acErrMsg,"DELETE note_mst error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D105" );
		return CM_SQLCODE;
	}

	return 0;
}

int Note_mst_Clo_Upd( ){
	EXEC SQL CLOSE upd_note_mst;
	return 0;
}

/*****************************************************************************/
/****                              增加函数部分                           ****/
/*****************************************************************************/
int Note_mst_Ins( struct note_mst_c note_mst_c , char * reply ){
	int ret;

	EXEC SQL INSERT INTO note_mst VALUES (:note_mst_c.tel,
			:note_mst_c.note_type,
			:note_mst_c.br_no,
			:note_mst_c.beg_note_no,
			:note_mst_c.end_note_no,
			:note_mst_c.sts,
			:note_mst_c.cnt,
			:note_mst_c.ys_cnt);
	if ( sqlca.sqlcode && sqlca.sqlcode != -1 )
	{
		sprintf(acErrMsg,"INSERT note_mst error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D107" );
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == -1 )
	{
		sprintf(acErrMsg,"INSERT note_mst error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D108" );
		return CM_SQLCODE;
	}

	return 0;
}
/*****************************************************************************/
/****                              查询函数部分[1]                       ****/
/*****************************************************************************/
int Note_mst_Sel1(reply,note_mst_c,fmtstr,va_alist)
char    *reply;
struct  note_mst_c *note_mst_c;
char    *fmtstr;
va_dcl
{
	int   ret;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	ret = Note_mst_Dec_Sel1( reply , "%s" , wherelist );
	if (ret){
		WRITEMSG
		return ret;
	}
	ret = Note_mst_Fet_Sel1( note_mst_c , reply );
	if (ret){
		WRITEMSG
		return ret;
	}

	Note_mst_Clo_Sel1();

	return 0;
}



char *key_strcat(char *,char *);
int Note_mst_Dec_Sel1 ( reply , fmtstr , va_alist )
char    *reply;
char    *fmtstr;
va_dcl
{
	EXEC    SQL BEGIN   DECLARE SECTION;
		char    comm[1000];
	EXEC    SQL END     DECLARE SECTION;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	sprintf ( comm ," SELECT rowid,note_mst.* FROM note_mst WHERE  ");
	key_strcat(comm,wherelist);

	vtcp_log("%s,%d,SQLSTR=[%s]\n",__FILE__,__LINE__,comm);
	sqlca.sqlcode=0;
	EXEC SQL PREPARE note_mst_sel1 FROM :comm;
	EXEC SQL DECLARE sel_note_mst1 CURSOR FOR note_mst_sel1;

	EXEC SQL OPEN sel_note_mst1;
	if (sqlca.sqlcode){
		sprintf(acErrMsg,"OPEN note_mst error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D102" );
		return CM_SQLCODE;
	}

	return 0;
}

int Note_mst_Fet_Sel1 ( struct note_mst_c *note_mst_c , char * reply )
{

	int   ret;

	EXEC SQL FETCH sel_note_mst1 INTO :note_mst_c;
	if (sqlca.sqlcode&&sqlca.sqlcode!=1403){
		sprintf(acErrMsg,"Fetch note_mst error!!! %d",sqlca.sqlcode);
		WRITEMSG
		strcpy (reply,"D103");
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == 1403 ){
		sprintf(acErrMsg,"Fetch note_mst finished!!! %d",sqlca.sqlcode);
		WRITEMSG
		strcpy (reply,"D104");
		return CM_SQLCODE;
	}
	zip_struct(note_mst_c);

	return 0;
}

int Note_mst_Clo_Sel1 (){
	EXEC SQL CLOSE sel_note_mst1;
	return 0;
}

/*****************************************************************************/
/****                              修改函数部分                           ****/
/*****************************************************************************/
int Note_mst_Dec_Upd1( reply , fmtstr , va_alist)
char    *reply;
char    *fmtstr;
va_dcl
{
	EXEC    SQL BEGIN   DECLARE SECTION;
		char    comm[1000];
	EXEC    SQL END     DECLARE SECTION;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	sprintf ( comm , "SELECT rowid,note_mst.* FROM note_mst WHERE  ");
	key_strcat(comm,wherelist);
	strcat(comm," FOR UPDATE WAIT 5 ");
	vtcp_log("%s,%d,SQLSTR=[%s]\n",__FILE__,__LINE__,comm);
	sqlca.sqlcode=0;
	EXEC SQL PREPARE note_mst_upd1 FROM :comm;

	EXEC SQL DECLARE upd_note_mst1 CURSOR FOR note_mst_upd1;

	EXEC SQL OPEN upd_note_mst1;
	if (sqlca.sqlcode){
		sprintf(acErrMsg,"open note_mst error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D102" );
		return CM_SQLCODE;
	}

	return 0;
}

int Note_mst_Fet_Upd1( struct note_mst_c *note_mst_c , char * reply ){
	int   ret;

	EXEC SQL FETCH upd_note_mst1 INTO :note_mst_c;
	if ( sqlca.sqlcode && sqlca.sqlcode!=1403 ){
		sprintf(acErrMsg,"FETCH upd note_mst error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D103" );
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == 1403 ){
		sprintf(acErrMsg,"FETCH note_mst finished %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D104" );
		return CM_SQLCODE;
	}
	zip_struct(note_mst_c);

	return 0;
}

int Note_mst_Clo_Upd1( ){
	EXEC SQL CLOSE upd_note_mst1;
	return 0;
}

/*****************************************************************************/
/****                              查询函数部分[2]                       ****/
/*****************************************************************************/
int Note_mst_Sel2(reply,note_mst_c,fmtstr,va_alist)
char    *reply;
struct  note_mst_c *note_mst_c;
char    *fmtstr;
va_dcl
{
	int   ret;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	ret = Note_mst_Dec_Sel2( reply , "%s" , wherelist );
	if (ret){
		WRITEMSG
		return ret;
	}
	ret = Note_mst_Fet_Sel2( note_mst_c , reply );
	if (ret){
		WRITEMSG
		return ret;
	}

	Note_mst_Clo_Sel2();

	return 0;
}



char *key_strcat(char *,char *);
int Note_mst_Dec_Sel2 ( reply , fmtstr , va_alist )
char    *reply;
char    *fmtstr;
va_dcl
{
	EXEC    SQL BEGIN   DECLARE SECTION;
		char    comm[1000];
	EXEC    SQL END     DECLARE SECTION;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	sprintf ( comm ," SELECT rowid,note_mst.* FROM note_mst WHERE  ");
	key_strcat(comm,wherelist);

	vtcp_log("%s,%d,SQLSTR=[%s]\n",__FILE__,__LINE__,comm);
	sqlca.sqlcode=0;
	EXEC SQL PREPARE note_mst_sel2 FROM :comm;
	EXEC SQL DECLARE sel_note_mst2 CURSOR FOR note_mst_sel2;

	EXEC SQL OPEN sel_note_mst2;
	if (sqlca.sqlcode){
		sprintf(acErrMsg,"OPEN note_mst error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D102" );
		return CM_SQLCODE;
	}

	return 0;
}

int Note_mst_Fet_Sel2 ( struct note_mst_c *note_mst_c , char * reply )
{

	int   ret;

	EXEC SQL FETCH sel_note_mst2 INTO :note_mst_c;
	if (sqlca.sqlcode&&sqlca.sqlcode!=1403){
		sprintf(acErrMsg,"Fetch note_mst error!!! %d",sqlca.sqlcode);
		WRITEMSG
		strcpy (reply,"D103");
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == 1403 ){
		sprintf(acErrMsg,"Fetch note_mst finished!!! %d",sqlca.sqlcode);
		WRITEMSG
		strcpy (reply,"D104");
		return CM_SQLCODE;
	}
	zip_struct(note_mst_c);

	return 0;
}

int Note_mst_Clo_Sel2 (){
	EXEC SQL CLOSE sel_note_mst2;
	return 0;
}

/*****************************************************************************/
/****                              修改函数部分                           ****/
/*****************************************************************************/
int Note_mst_Dec_Upd2( reply , fmtstr , va_alist)
char    *reply;
char    *fmtstr;
va_dcl
{
	EXEC    SQL BEGIN   DECLARE SECTION;
		char    comm[1000];
	EXEC    SQL END     DECLARE SECTION;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	sprintf ( comm , "SELECT rowid,note_mst.* FROM note_mst WHERE  ");
	key_strcat(comm,wherelist);
	strcat(comm," FOR UPDATE WAIT 5 ");
	vtcp_log("%s,%d,SQLSTR=[%s]\n",__FILE__,__LINE__,comm);
	sqlca.sqlcode=0;
	EXEC SQL PREPARE note_mst_upd2 FROM :comm;

	EXEC SQL DECLARE upd_note_mst2 CURSOR FOR note_mst_upd2;

	EXEC SQL OPEN upd_note_mst2;
	if (sqlca.sqlcode){
		sprintf(acErrMsg,"open note_mst error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D102" );
		return CM_SQLCODE;
	}

	return 0;
}

int Note_mst_Fet_Upd2( struct note_mst_c *note_mst_c , char * reply ){
	int   ret;

	EXEC SQL FETCH upd_note_mst2 INTO :note_mst_c;
	if ( sqlca.sqlcode && sqlca.sqlcode!=1403 ){
		sprintf(acErrMsg,"FETCH upd note_mst error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D103" );
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == 1403 ){
		sprintf(acErrMsg,"FETCH note_mst finished %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D104" );
		return CM_SQLCODE;
	}
	zip_struct(note_mst_c);

	return 0;
}

int Note_mst_Clo_Upd2( ){
	EXEC SQL CLOSE upd_note_mst2;
	return 0;
}

