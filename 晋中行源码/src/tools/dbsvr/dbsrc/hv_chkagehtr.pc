#include<stdio.h>
#include<varargs.h>

#define EXTERN
#include"global.h"


EXEC SQL INCLUDE SQLCA;
#include"hv_chkagehtr_c.h"
#define CM_SQLCODE sqlca.sqlcode==1403?100:(sqlca.sqlcode==-1?-239:sqlca.sqlcode)

int hv_chkagehtr_con ( struct hv_chkagehtr_c , char *);
int put_mystery( char *, char * );
char *zip_tail(char *s);
static void zip_struct(struct hv_chkagehtr_c* ps){
	zip_tail(ps->rowid);
	zip_tail(ps->orderno);
	zip_tail(ps->pay_qs_no);
	zip_tail(ps->br_no);
	zip_tail(ps->cmtno);
	zip_tail(ps->cur_no);
	zip_tail(ps->or_br_no);
	zip_tail(ps->pay_no);
	zip_tail(ps->pay_ac_no);
	zip_tail(ps->pay_name);
	zip_tail(ps->cash_qs_ac_no);
	zip_tail(ps->acbr_no);
	zip_tail(ps->cash_no);
	zip_tail(ps->cash_ac_no);
	zip_tail(ps->cash_name);
	zip_tail(ps->yw_type);
	zip_tail(ps->sendco);
	zip_tail(ps->receco);
	zip_tail(ps->operlevel);
	zip_tail(ps->brf1);
	zip_tail(ps->brf2);
}
int Hv_chkagehtr_Debug(struct hv_chkagehtr_c *ps){
	vtcp_log("hv_chkagehtr_c.rowid=[%s]\n",ps->rowid);
	vtcp_log("hv_chkagehtr_c.orderno=[%s]\n",ps->orderno);
	vtcp_log("hv_chkagehtr_c.pay_qs_no=[%s]\n",ps->pay_qs_no);
	vtcp_log("hv_chkagehtr_c.tx_date=[%ld]\n",ps->tx_date);
	vtcp_log("hv_chkagehtr_c.br_no=[%s]\n",ps->br_no);
	vtcp_log("hv_chkagehtr_c.cmtno=[%s]\n",ps->cmtno);
	vtcp_log("hv_chkagehtr_c.tx_time=[%ld]\n",ps->tx_time);
	vtcp_log("hv_chkagehtr_c.cur_no=[%s]\n",ps->cur_no);
	vtcp_log("hv_chkagehtr_c.tx_amt=[%f]\n",ps->tx_amt);
	vtcp_log("hv_chkagehtr_c.or_br_no=[%s]\n",ps->or_br_no);
	vtcp_log("hv_chkagehtr_c.pay_no=[%s]\n",ps->pay_no);
	vtcp_log("hv_chkagehtr_c.pay_ac_no=[%s]\n",ps->pay_ac_no);
	vtcp_log("hv_chkagehtr_c.pay_name=[%s]\n",ps->pay_name);
	vtcp_log("hv_chkagehtr_c.cash_qs_ac_no=[%s]\n",ps->cash_qs_ac_no);
	vtcp_log("hv_chkagehtr_c.acbr_no=[%s]\n",ps->acbr_no);
	vtcp_log("hv_chkagehtr_c.cash_no=[%s]\n",ps->cash_no);
	vtcp_log("hv_chkagehtr_c.cash_ac_no=[%s]\n",ps->cash_ac_no);
	vtcp_log("hv_chkagehtr_c.cash_name=[%s]\n",ps->cash_name);
	vtcp_log("hv_chkagehtr_c.yw_type=[%s]\n",ps->yw_type);
	vtcp_log("hv_chkagehtr_c.sendco=[%s]\n",ps->sendco);
	vtcp_log("hv_chkagehtr_c.receco=[%s]\n",ps->receco);
	vtcp_log("hv_chkagehtr_c.operlevel=[%s]\n",ps->operlevel);
	vtcp_log("hv_chkagehtr_c.brf1=[%s]\n",ps->brf1);
	vtcp_log("hv_chkagehtr_c.brf2=[%s]\n",ps->brf2);
	return(0);
}
/*****************************************************************************/
/****                              查询函数部分[]                       ****/
/*****************************************************************************/
int Hv_chkagehtr_Sel(reply,hv_chkagehtr_c,fmtstr,va_alist)
char    *reply;
struct  hv_chkagehtr_c *hv_chkagehtr_c;
char    *fmtstr;
va_dcl
{
	int   ret;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	ret = Hv_chkagehtr_Dec_Sel( reply , "%s" , wherelist );
	if (ret){
		WRITEMSG
		return ret;
	}
	ret = Hv_chkagehtr_Fet_Sel( hv_chkagehtr_c , reply );
	if (ret){
		WRITEMSG
		return ret;
	}

	Hv_chkagehtr_Clo_Sel();

	return 0;
}



char *key_strcat(char *,char *);
int Hv_chkagehtr_Dec_Sel ( reply , fmtstr , va_alist )
char    *reply;
char    *fmtstr;
va_dcl
{
	EXEC    SQL BEGIN   DECLARE SECTION;
		char    comm[1000];
	EXEC    SQL END     DECLARE SECTION;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	sprintf ( comm ," SELECT rowid,hv_chkagehtr.* FROM hv_chkagehtr WHERE  ");
	key_strcat(comm,wherelist);

	vtcp_log("%s,%d,SQLSTR=[%s]\n",__FILE__,__LINE__,comm);
	sqlca.sqlcode=0;
	EXEC SQL PREPARE hv_chkagehtr_sel FROM :comm;
	EXEC SQL DECLARE sel_hv_chkagehtr CURSOR FOR hv_chkagehtr_sel;

	EXEC SQL OPEN sel_hv_chkagehtr;
	if (sqlca.sqlcode){
		sprintf(acErrMsg,"OPEN hv_chkagehtr error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D102" );
		return CM_SQLCODE;
	}

	return 0;
}

int Hv_chkagehtr_Fet_Sel ( struct hv_chkagehtr_c *hv_chkagehtr_c , char * reply )
{

	int   ret;

	EXEC SQL FETCH sel_hv_chkagehtr INTO :hv_chkagehtr_c;
	if (sqlca.sqlcode&&sqlca.sqlcode!=1403){
		sprintf(acErrMsg,"Fetch hv_chkagehtr error!!! %d",sqlca.sqlcode);
		WRITEMSG
		strcpy (reply,"D103");
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == 1403 ){
		sprintf(acErrMsg,"Fetch hv_chkagehtr finished!!! %d",sqlca.sqlcode);
		WRITEMSG
		strcpy (reply,"D104");
		return CM_SQLCODE;
	}
	zip_struct(hv_chkagehtr_c);

	return 0;
}

int Hv_chkagehtr_Clo_Sel (){
	EXEC SQL CLOSE sel_hv_chkagehtr;
	return 0;
}

/*****************************************************************************/
/****                              修改函数部分                           ****/
/*****************************************************************************/
int Hv_chkagehtr_Dec_Upd( reply , fmtstr , va_alist)
char    *reply;
char    *fmtstr;
va_dcl
{
	EXEC    SQL BEGIN   DECLARE SECTION;
		char    comm[1000];
	EXEC    SQL END     DECLARE SECTION;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	sprintf ( comm , "SELECT rowid,hv_chkagehtr.* FROM hv_chkagehtr WHERE  ");
	key_strcat(comm,wherelist);
	strcat(comm," FOR UPDATE WAIT 5 ");
	vtcp_log("%s,%d,SQLSTR=[%s]\n",__FILE__,__LINE__,comm);
	sqlca.sqlcode=0;
	EXEC SQL PREPARE hv_chkagehtr_upd FROM :comm;

	EXEC SQL DECLARE upd_hv_chkagehtr CURSOR FOR hv_chkagehtr_upd;

	EXEC SQL OPEN upd_hv_chkagehtr;
	if (sqlca.sqlcode){
		sprintf(acErrMsg,"open hv_chkagehtr error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D102" );
		return CM_SQLCODE;
	}

	return 0;
}

int Hv_chkagehtr_Fet_Upd( struct hv_chkagehtr_c *hv_chkagehtr_c , char * reply ){
	int   ret;

	EXEC SQL FETCH upd_hv_chkagehtr INTO :hv_chkagehtr_c;
	if ( sqlca.sqlcode && sqlca.sqlcode!=1403 ){
		sprintf(acErrMsg,"FETCH upd hv_chkagehtr error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D103" );
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == 1403 ){
		sprintf(acErrMsg,"FETCH hv_chkagehtr finished %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D104" );
		return CM_SQLCODE;
	}
	zip_struct(hv_chkagehtr_c);

	return 0;
}

int Hv_chkagehtr_Upd_Upd( struct hv_chkagehtr_c hv_chkagehtr_c , char * reply){
	int ret;

	EXEC SQL UPDATE hv_chkagehtr SET orderno=:hv_chkagehtr_c.orderno,
			pay_qs_no=:hv_chkagehtr_c.pay_qs_no,
			tx_date=:hv_chkagehtr_c.tx_date,
			br_no=:hv_chkagehtr_c.br_no,
			cmtno=:hv_chkagehtr_c.cmtno,
			tx_time=:hv_chkagehtr_c.tx_time,
			cur_no=:hv_chkagehtr_c.cur_no,
			tx_amt=:hv_chkagehtr_c.tx_amt,
			or_br_no=:hv_chkagehtr_c.or_br_no,
			pay_no=:hv_chkagehtr_c.pay_no,
			pay_ac_no=:hv_chkagehtr_c.pay_ac_no,
			pay_name=:hv_chkagehtr_c.pay_name,
			cash_qs_ac_no=:hv_chkagehtr_c.cash_qs_ac_no,
			acbr_no=:hv_chkagehtr_c.acbr_no,
			cash_no=:hv_chkagehtr_c.cash_no,
			cash_ac_no=:hv_chkagehtr_c.cash_ac_no,
			cash_name=:hv_chkagehtr_c.cash_name,
			yw_type=:hv_chkagehtr_c.yw_type,
			sendco=:hv_chkagehtr_c.sendco,
			receco=:hv_chkagehtr_c.receco,
			operlevel=:hv_chkagehtr_c.operlevel,
			brf1=:hv_chkagehtr_c.brf1,
			brf2=:hv_chkagehtr_c.brf2
	WHERE rowid=:hv_chkagehtr_c.rowid;
	if ( sqlca.sqlcode && sqlca.sqlcode != 1403 ){
		sprintf(acErrMsg,"UPDATE hv_chkagehtr error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D105" );
		return CM_SQLCODE;
	}

	return 0;
}


int Hv_chkagehtr_Del_Upd(struct hv_chkagehtr_c hv_chkagehtr_c , char * reply  ){

	EXEC SQL DELETE FROM hv_chkagehtr WHERE rowid=:hv_chkagehtr_c.rowid;
	if ( sqlca.sqlcode ){
		sprintf(acErrMsg,"DELETE hv_chkagehtr error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D105" );
		return CM_SQLCODE;
	}

	return 0;
}

int Hv_chkagehtr_Clo_Upd( ){
	EXEC SQL CLOSE upd_hv_chkagehtr;
	return 0;
}

/*****************************************************************************/
/****                              增加函数部分                           ****/
/*****************************************************************************/
int Hv_chkagehtr_Ins( struct hv_chkagehtr_c hv_chkagehtr_c , char * reply ){
	int ret;

	EXEC SQL INSERT INTO hv_chkagehtr VALUES (:hv_chkagehtr_c.orderno,
			:hv_chkagehtr_c.pay_qs_no,
			:hv_chkagehtr_c.tx_date,
			:hv_chkagehtr_c.br_no,
			:hv_chkagehtr_c.cmtno,
			:hv_chkagehtr_c.tx_time,
			:hv_chkagehtr_c.cur_no,
			:hv_chkagehtr_c.tx_amt,
			:hv_chkagehtr_c.or_br_no,
			:hv_chkagehtr_c.pay_no,
			:hv_chkagehtr_c.pay_ac_no,
			:hv_chkagehtr_c.pay_name,
			:hv_chkagehtr_c.cash_qs_ac_no,
			:hv_chkagehtr_c.acbr_no,
			:hv_chkagehtr_c.cash_no,
			:hv_chkagehtr_c.cash_ac_no,
			:hv_chkagehtr_c.cash_name,
			:hv_chkagehtr_c.yw_type,
			:hv_chkagehtr_c.sendco,
			:hv_chkagehtr_c.receco,
			:hv_chkagehtr_c.operlevel,
			:hv_chkagehtr_c.brf1,
			:hv_chkagehtr_c.brf2);
	if ( sqlca.sqlcode && sqlca.sqlcode != -1 )
	{
		sprintf(acErrMsg,"INSERT hv_chkagehtr error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D107" );
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == -1 )
	{
		sprintf(acErrMsg,"INSERT hv_chkagehtr error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D108" );
		return CM_SQLCODE;
	}

	return 0;
}
