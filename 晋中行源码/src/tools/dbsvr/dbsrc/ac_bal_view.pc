#include<stdio.h>
#include<varargs.h>

#define EXTERN
#include"global.h"


EXEC SQL INCLUDE SQLCA;
#include"ac_bal_view_c.h"
#define CM_SQLCODE sqlca.sqlcode==1403?100:(sqlca.sqlcode==-1?-239:sqlca.sqlcode)

int ac_bal_view_con ( struct ac_bal_view_c , char *);
int put_mystery( char *, char * );
char *zip_tail(char *s);
static void zip_struct(struct ac_bal_view_c* ps){
	zip_tail(ps->gsp_no);
	zip_tail(ps->prdt_no);
	zip_tail(ps->ind);
}
int Ac_bal_view_Debug(struct ac_bal_view_c *ps){
	printf("ac_bal_view_c.gsp_no=[%s]\n",ps->gsp_no);
	printf("ac_bal_view_c.prdt_no=[%s]\n",ps->prdt_no);
	printf("ac_bal_view_c.ind=[%s]\n",ps->ind);
	printf("ac_bal_view_c.num=[%ld]\n",ps->num);
	printf("ac_bal_view_c.bal=[%f]\n",ps->bal);
	return(0);
}
/*****************************************************************************/
/****                              查询函数部分                           ****/
/*****************************************************************************/
int Ac_bal_view_Sel(reply,ac_bal_view_c,fmtstr,va_alist)
char    *reply;
struct  ac_bal_view_c *ac_bal_view_c;
char    *fmtstr;
va_dcl
{
	int   ret;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	ret = Ac_bal_view_Dec_Sel( reply , "%s" , wherelist );
	if (ret){
		WRITEMSG
		return ret;
	}
	ret = Ac_bal_view_Fet_Sel( ac_bal_view_c , reply );
	if (ret){
		WRITEMSG
		return ret;
	}

	Ac_bal_view_Clo_Sel();

	return 0;
}



char *key_strcat(char *,char *);
int Ac_bal_view_Dec_Sel ( reply , fmtstr , va_alist )
char    *reply;
char    *fmtstr;
va_dcl
{
	EXEC    SQL BEGIN   DECLARE SECTION;
		char    comm[1000];
	EXEC    SQL END     DECLARE SECTION;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	sprintf ( comm ," SELECT ac_bal_view.* FROM ac_bal_view WHERE  ");
	key_strcat(comm,wherelist);

	vtcp_log("%s,%d,SQLSTR=[%s]\n",__FILE__,__LINE__,comm);
	sqlca.sqlcode=0;
	EXEC SQL PREPARE ac_bal_view_sel FROM :comm;
	EXEC SQL DECLARE sel_ac_bal_view CURSOR FOR ac_bal_view_sel;

	EXEC SQL OPEN sel_ac_bal_view;
	if (sqlca.sqlcode){
		sprintf(acErrMsg,"OPEN ac_bal_view error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D102" );
		return CM_SQLCODE;
	}

	return 0;
}

int Ac_bal_view_Fet_Sel ( struct ac_bal_view_c *ac_bal_view_c , char * reply )
{

	int   ret;

	EXEC SQL FETCH sel_ac_bal_view INTO :ac_bal_view_c;
	if (sqlca.sqlcode&&sqlca.sqlcode!=1403){
		sprintf(acErrMsg,"Fetch ac_bal_view error!!! %d",sqlca.sqlcode);
		WRITEMSG
		strcpy (reply,"D103");
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == 1403 ){
		sprintf(acErrMsg,"Fetch ac_bal_view finished!!! %d",sqlca.sqlcode);
		WRITEMSG
		strcpy (reply,"D104");
		return CM_SQLCODE;
	}
	zip_struct(ac_bal_view_c);

	return 0;
}

int Ac_bal_view_Clo_Sel (){
	EXEC SQL CLOSE sel_ac_bal_view;
}

/*****************************************************************************/
/****                              修改函数部分                           ****/
/*****************************************************************************/
int Ac_bal_view_Dec_Upd( reply , fmtstr , va_alist)
char    *reply;
char    *fmtstr;
va_dcl
{
	EXEC    SQL BEGIN   DECLARE SECTION;
		char    comm[1000];
	EXEC    SQL END     DECLARE SECTION;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	sprintf ( comm , "SELECT ac_bal_view.* FROM ac_bal_view WHERE  ");
	key_strcat(comm,wherelist);
	strcat(comm," FOR UPDATE WAIT 5 ");
	vtcp_log("%s,%d,SQLSTR=[%s]\n",__FILE__,__LINE__,comm);
	sqlca.sqlcode=0;
	EXEC SQL PREPARE ac_bal_view_upd FROM :comm;

	EXEC SQL DECLARE upd_ac_bal_view CURSOR FOR ac_bal_view_upd;

	EXEC SQL OPEN upd_ac_bal_view;
	if (sqlca.sqlcode){
		sprintf(acErrMsg,"open ac_bal_view error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D102" );
		return CM_SQLCODE;
	}

	return 0;
}

int Ac_bal_view_Fet_Upd( struct ac_bal_view_c *ac_bal_view_c , char * reply ){
	int   ret;

	EXEC SQL FETCH upd_ac_bal_view INTO :ac_bal_view_c;
	if ( sqlca.sqlcode && sqlca.sqlcode!=1403 ){
		sprintf(acErrMsg,"FETCH upd ac_bal_view error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D103" );
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == 1403 ){
		sprintf(acErrMsg,"FETCH ac_bal_view finished %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D104" );
		return CM_SQLCODE;
	}
	zip_struct(ac_bal_view_c);

	return 0;
}

int Ac_bal_view_Upd_Upd( struct ac_bal_view_c ac_bal_view_c , char * reply){
	int ret;

	EXEC SQL UPDATE ac_bal_view SET gsp_no=:ac_bal_view_c.gsp_no,
			prdt_no=:ac_bal_view_c.prdt_no,
			ind=:ac_bal_view_c.ind,
			num=:ac_bal_view_c.num,
			bal=:ac_bal_view_c.bal
	WHERE 1=0;
	if ( sqlca.sqlcode && sqlca.sqlcode != 1403 ){
		sprintf(acErrMsg,"UPDATE ac_bal_view error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D105" );
		return CM_SQLCODE;
	}
	pub_reg_rec_file(" upd ac_bal_view"); 

	return 0;
}


int Ac_bal_view_Del_Upd(struct ac_bal_view_c ac_bal_view_c , char * reply  ){

	EXEC SQL DELETE FROM ac_bal_view WHERE rowid='0000';
	if ( sqlca.sqlcode ){
		sprintf(acErrMsg,"DELETE ac_bal_view error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D105" );
		return CM_SQLCODE;
	}

	return 0;
}

int Ac_bal_view_Clo_Upd( ){
	EXEC SQL CLOSE upd_ac_bal_view;

	return 0;
}

/*****************************************************************************/
/****                              增加函数部分                           ****/
/*****************************************************************************/
int Ac_bal_view_Ins( struct ac_bal_view_c ac_bal_view_c , char * reply ){
	int ret;

	EXEC SQL INSERT INTO ac_bal_view VALUES (:ac_bal_view_c.gsp_no,
			:ac_bal_view_c.prdt_no,
			:ac_bal_view_c.ind,
			:ac_bal_view_c.num,
			:ac_bal_view_c.bal);
	if ( sqlca.sqlcode && sqlca.sqlcode != -1 )
	{
		sprintf(acErrMsg,"INSERT ac_bal_view error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D107" );
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == -1 )
	{
		sprintf(acErrMsg,"INSERT ac_bal_view error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D108" );
		return CM_SQLCODE;
	}
	pub_reg_rec_file(" ins ac_bal_view"); 

	return 0;
}
