#include<stdio.h>
#include<varargs.h>

#define EXTERN
#include"global.h"


EXEC SQL INCLUDE SQLCA;
#include"tmp_tx_sub_def_c.h"
#define CM_SQLCODE sqlca.sqlcode==1403?100:(sqlca.sqlcode==-1?-239:sqlca.sqlcode)

int tmp_tx_sub_def_con ( struct tmp_tx_sub_def_c , char *);
int put_mystery( char *, char * );
char *zip_tail(char *s);
static void zip_struct(struct tmp_tx_sub_def_c* ps){
	zip_tail(ps->rowid);
	zip_tail(ps->sub_tx_code);
	zip_tail(ps->sub_tx_name);
	zip_tail(ps->tx_func);
	zip_tail(ps->acct_ind);
	zip_tail(ps->chnl_ind);
}
int Tmp_tx_sub_def_Debug(struct tmp_tx_sub_def_c *ps){
	vtcp_log("tmp_tx_sub_def_c.rowid=[%s]\n",ps->rowid);
	vtcp_log("tmp_tx_sub_def_c.sub_tx_code=[%s]\n",ps->sub_tx_code);
	vtcp_log("tmp_tx_sub_def_c.sub_tx_name=[%s]\n",ps->sub_tx_name);
	vtcp_log("tmp_tx_sub_def_c.tx_func=[%s]\n",ps->tx_func);
	vtcp_log("tmp_tx_sub_def_c.acct_ind=[%s]\n",ps->acct_ind);
	vtcp_log("tmp_tx_sub_def_c.chnl_ind=[%s]\n",ps->chnl_ind);
	return(0);
}
/*****************************************************************************/
/****                              查询函数部分[]                       ****/
/*****************************************************************************/
int Tmp_tx_sub_def_Sel(reply,tmp_tx_sub_def_c,fmtstr,va_alist)
char    *reply;
struct  tmp_tx_sub_def_c *tmp_tx_sub_def_c;
char    *fmtstr;
va_dcl
{
	int   ret;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	ret = Tmp_tx_sub_def_Dec_Sel( reply , "%s" , wherelist );
	if (ret){
		WRITEMSG
		return ret;
	}
	ret = Tmp_tx_sub_def_Fet_Sel( tmp_tx_sub_def_c , reply );
	if (ret){
		WRITEMSG
		return ret;
	}

	Tmp_tx_sub_def_Clo_Sel();

	return 0;
}



char *key_strcat(char *,char *);
int Tmp_tx_sub_def_Dec_Sel ( reply , fmtstr , va_alist )
char    *reply;
char    *fmtstr;
va_dcl
{
	EXEC    SQL BEGIN   DECLARE SECTION;
		char    comm[1000];
	EXEC    SQL END     DECLARE SECTION;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	sprintf ( comm ," SELECT rowid,tmp_tx_sub_def.* FROM tmp_tx_sub_def WHERE  ");
	key_strcat(comm,wherelist);

	vtcp_log("%s,%d,SQLSTR=[%s]\n",__FILE__,__LINE__,comm);
	sqlca.sqlcode=0;
	EXEC SQL PREPARE tmp_tx_sub_def_sel FROM :comm;
	EXEC SQL DECLARE sel_tmp_tx_sub_def CURSOR FOR tmp_tx_sub_def_sel;

	EXEC SQL OPEN sel_tmp_tx_sub_def;
	if (sqlca.sqlcode){
		sprintf(acErrMsg,"OPEN tmp_tx_sub_def error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D102" );
		return CM_SQLCODE;
	}

	return 0;
}

int Tmp_tx_sub_def_Fet_Sel ( struct tmp_tx_sub_def_c *tmp_tx_sub_def_c , char * reply )
{

	int   ret;

	EXEC SQL FETCH sel_tmp_tx_sub_def INTO :tmp_tx_sub_def_c;
	if (sqlca.sqlcode&&sqlca.sqlcode!=1403){
		sprintf(acErrMsg,"Fetch tmp_tx_sub_def error!!! %d",sqlca.sqlcode);
		WRITEMSG
		strcpy (reply,"D103");
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == 1403 ){
		sprintf(acErrMsg,"Fetch tmp_tx_sub_def finished!!! %d",sqlca.sqlcode);
		WRITEMSG
		strcpy (reply,"D104");
		return CM_SQLCODE;
	}
	zip_struct(tmp_tx_sub_def_c);

	return 0;
}

int Tmp_tx_sub_def_Clo_Sel (){
	EXEC SQL CLOSE sel_tmp_tx_sub_def;
	return 0;
}

/*****************************************************************************/
/****                              修改函数部分                           ****/
/*****************************************************************************/
int Tmp_tx_sub_def_Dec_Upd( reply , fmtstr , va_alist)
char    *reply;
char    *fmtstr;
va_dcl
{
	EXEC    SQL BEGIN   DECLARE SECTION;
		char    comm[1000];
	EXEC    SQL END     DECLARE SECTION;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	sprintf ( comm , "SELECT rowid,tmp_tx_sub_def.* FROM tmp_tx_sub_def WHERE  ");
	key_strcat(comm,wherelist);
	strcat(comm," FOR UPDATE WAIT 5 ");
	vtcp_log("%s,%d,SQLSTR=[%s]\n",__FILE__,__LINE__,comm);
	sqlca.sqlcode=0;
	EXEC SQL PREPARE tmp_tx_sub_def_upd FROM :comm;

	EXEC SQL DECLARE upd_tmp_tx_sub_def CURSOR FOR tmp_tx_sub_def_upd;

	EXEC SQL OPEN upd_tmp_tx_sub_def;
	if (sqlca.sqlcode){
		sprintf(acErrMsg,"open tmp_tx_sub_def error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D102" );
		return CM_SQLCODE;
	}

	return 0;
}

int Tmp_tx_sub_def_Fet_Upd( struct tmp_tx_sub_def_c *tmp_tx_sub_def_c , char * reply ){
	int   ret;

	EXEC SQL FETCH upd_tmp_tx_sub_def INTO :tmp_tx_sub_def_c;
	if ( sqlca.sqlcode && sqlca.sqlcode!=1403 ){
		sprintf(acErrMsg,"FETCH upd tmp_tx_sub_def error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D103" );
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == 1403 ){
		sprintf(acErrMsg,"FETCH tmp_tx_sub_def finished %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D104" );
		return CM_SQLCODE;
	}
	zip_struct(tmp_tx_sub_def_c);

	return 0;
}

int Tmp_tx_sub_def_Upd_Upd( struct tmp_tx_sub_def_c tmp_tx_sub_def_c , char * reply){
	int ret;

	EXEC SQL UPDATE tmp_tx_sub_def SET sub_tx_code=:tmp_tx_sub_def_c.sub_tx_code,
			sub_tx_name=:tmp_tx_sub_def_c.sub_tx_name,
			tx_func=:tmp_tx_sub_def_c.tx_func,
			acct_ind=:tmp_tx_sub_def_c.acct_ind,
			chnl_ind=:tmp_tx_sub_def_c.chnl_ind
	WHERE rowid=:tmp_tx_sub_def_c.rowid;
	if ( sqlca.sqlcode && sqlca.sqlcode != 1403 ){
		sprintf(acErrMsg,"UPDATE tmp_tx_sub_def error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D105" );
		return CM_SQLCODE;
	}

	return 0;
}


int Tmp_tx_sub_def_Del_Upd(struct tmp_tx_sub_def_c tmp_tx_sub_def_c , char * reply  ){

	EXEC SQL DELETE FROM tmp_tx_sub_def WHERE rowid=:tmp_tx_sub_def_c.rowid;
	if ( sqlca.sqlcode ){
		sprintf(acErrMsg,"DELETE tmp_tx_sub_def error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D105" );
		return CM_SQLCODE;
	}

	return 0;
}

int Tmp_tx_sub_def_Clo_Upd( ){
	EXEC SQL CLOSE upd_tmp_tx_sub_def;
	return 0;
}

/*****************************************************************************/
/****                              增加函数部分                           ****/
/*****************************************************************************/
int Tmp_tx_sub_def_Ins( struct tmp_tx_sub_def_c tmp_tx_sub_def_c , char * reply ){
	int ret;

	EXEC SQL INSERT INTO tmp_tx_sub_def VALUES (:tmp_tx_sub_def_c.sub_tx_code,
			:tmp_tx_sub_def_c.sub_tx_name,
			:tmp_tx_sub_def_c.tx_func,
			:tmp_tx_sub_def_c.acct_ind,
			:tmp_tx_sub_def_c.chnl_ind);
	if ( sqlca.sqlcode && sqlca.sqlcode != -1 )
	{
		sprintf(acErrMsg,"INSERT tmp_tx_sub_def error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D107" );
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == -1 )
	{
		sprintf(acErrMsg,"INSERT tmp_tx_sub_def error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D108" );
		return CM_SQLCODE;
	}

	return 0;
}
