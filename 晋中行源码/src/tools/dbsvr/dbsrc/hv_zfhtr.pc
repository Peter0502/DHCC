#include<stdio.h>
#include<varargs.h>

#define EXTERN
#include"global.h"


EXEC SQL INCLUDE SQLCA;
#include"hv_zfhtr_c.h"
#define CM_SQLCODE sqlca.sqlcode==1403?100:(sqlca.sqlcode==-1?-239:sqlca.sqlcode)

int hv_zfhtr_con ( struct hv_zfhtr_c , char *);
int put_mystery( char *, char * );
char *zip_tail(char *s);
static void zip_struct(struct hv_zfhtr_c* ps){
	zip_tail(ps->rowid);
	zip_tail(ps->br_no);
	zip_tail(ps->orderno);
	zip_tail(ps->cur_no);
	zip_tail(ps->note_type);
	zip_tail(ps->note_no);
	zip_tail(ps->tx_chrg_ind);
	zip_tail(ps->pay_qs_no);
	zip_tail(ps->or_br_no);
	zip_tail(ps->pay_opn_br_no);
	zip_tail(ps->pay_ac_no);
	zip_tail(ps->pay_name);
	zip_tail(ps->pay_addr);
	zip_tail(ps->cash_qs_no);
	zip_tail(ps->ac_br_no);
	zip_tail(ps->cash_opn_br_no);
	zip_tail(ps->cash_ac_no);
	zip_tail(ps->cash_name);
	zip_tail(ps->cash_addr);
	zip_tail(ps->yw_type);
	zip_tail(ps->sendco);
	zip_tail(ps->receco);
	zip_tail(ps->cmtno);
	zip_tail(ps->beg_sts);
	zip_tail(ps->operlevel);
	zip_tail(ps->hv_sts);
	zip_tail(ps->tel);
	zip_tail(ps->hv_osts);
	zip_tail(ps->checkflag);
	zip_tail(ps->hv_prt_ind);
	zip_tail(ps->resend_ind);
	zip_tail(ps->o_orderno);
	zip_tail(ps->o_cmtno);
	zip_tail(ps->lw_ind);
	zip_tail(ps->addid);
	zip_tail(ps->refno);
	zip_tail(ps->auth_tel);
	zip_tail(ps->chk);
	zip_tail(ps->send_tel);
	zip_tail(ps->dealerr_tel);
	zip_tail(ps->resp1);
	zip_tail(ps->hv_brf);
}
int Hv_zfhtr_Debug(struct hv_zfhtr_c *ps){
	vtcp_log("hv_zfhtr_c.rowid=[%s]\n",ps->rowid);
	vtcp_log("hv_zfhtr_c.br_no=[%s]\n",ps->br_no);
	vtcp_log("hv_zfhtr_c.tx_date=[%ld]\n",ps->tx_date);
	vtcp_log("hv_zfhtr_c.wt_date=[%ld]\n",ps->wt_date);
	vtcp_log("hv_zfhtr_c.tx_time=[%ld]\n",ps->tx_time);
	vtcp_log("hv_zfhtr_c.orderno=[%s]\n",ps->orderno);
	vtcp_log("hv_zfhtr_c.cur_no=[%s]\n",ps->cur_no);
	vtcp_log("hv_zfhtr_c.note_type=[%s]\n",ps->note_type);
	vtcp_log("hv_zfhtr_c.note_no=[%s]\n",ps->note_no);
	vtcp_log("hv_zfhtr_c.tx_amt=[%f]\n",ps->tx_amt);
	vtcp_log("hv_zfhtr_c.tx_chrg_ind=[%s]\n",ps->tx_chrg_ind);
	vtcp_log("hv_zfhtr_c.chrg_amt=[%f]\n",ps->chrg_amt);
	vtcp_log("hv_zfhtr_c.pay_qs_no=[%s]\n",ps->pay_qs_no);
	vtcp_log("hv_zfhtr_c.or_br_no=[%s]\n",ps->or_br_no);
	vtcp_log("hv_zfhtr_c.pay_opn_br_no=[%s]\n",ps->pay_opn_br_no);
	vtcp_log("hv_zfhtr_c.pay_ac_no=[%s]\n",ps->pay_ac_no);
	vtcp_log("hv_zfhtr_c.pay_name=[%s]\n",ps->pay_name);
	vtcp_log("hv_zfhtr_c.pay_addr=[%s]\n",ps->pay_addr);
	vtcp_log("hv_zfhtr_c.cash_qs_no=[%s]\n",ps->cash_qs_no);
	vtcp_log("hv_zfhtr_c.ac_br_no=[%s]\n",ps->ac_br_no);
	vtcp_log("hv_zfhtr_c.cash_opn_br_no=[%s]\n",ps->cash_opn_br_no);
	vtcp_log("hv_zfhtr_c.cash_ac_no=[%s]\n",ps->cash_ac_no);
	vtcp_log("hv_zfhtr_c.cash_name=[%s]\n",ps->cash_name);
	vtcp_log("hv_zfhtr_c.cash_addr=[%s]\n",ps->cash_addr);
	vtcp_log("hv_zfhtr_c.yw_type=[%s]\n",ps->yw_type);
	vtcp_log("hv_zfhtr_c.sendco=[%s]\n",ps->sendco);
	vtcp_log("hv_zfhtr_c.receco=[%s]\n",ps->receco);
	vtcp_log("hv_zfhtr_c.cmtno=[%s]\n",ps->cmtno);
	vtcp_log("hv_zfhtr_c.beg_sts=[%s]\n",ps->beg_sts);
	vtcp_log("hv_zfhtr_c.operlevel=[%s]\n",ps->operlevel);
	vtcp_log("hv_zfhtr_c.hv_sts=[%s]\n",ps->hv_sts);
	vtcp_log("hv_zfhtr_c.tel=[%s]\n",ps->tel);
	vtcp_log("hv_zfhtr_c.trace_no=[%ld]\n",ps->trace_no);
	vtcp_log("hv_zfhtr_c.hv_osts=[%s]\n",ps->hv_osts);
	vtcp_log("hv_zfhtr_c.checkflag=[%s]\n",ps->checkflag);
	vtcp_log("hv_zfhtr_c.hv_prt_ind=[%s]\n",ps->hv_prt_ind);
	vtcp_log("hv_zfhtr_c.resend_ind=[%s]\n",ps->resend_ind);
	vtcp_log("hv_zfhtr_c.resend_date=[%ld]\n",ps->resend_date);
	vtcp_log("hv_zfhtr_c.o_orderno=[%s]\n",ps->o_orderno);
	vtcp_log("hv_zfhtr_c.o_tx_date=[%ld]\n",ps->o_tx_date);
	vtcp_log("hv_zfhtr_c.o_wt_date=[%ld]\n",ps->o_wt_date);
	vtcp_log("hv_zfhtr_c.o_cmtno=[%s]\n",ps->o_cmtno);
	vtcp_log("hv_zfhtr_c.lw_ind=[%s]\n",ps->lw_ind);
	vtcp_log("hv_zfhtr_c.addid=[%s]\n",ps->addid);
	vtcp_log("hv_zfhtr_c.refno=[%s]\n",ps->refno);
	vtcp_log("hv_zfhtr_c.auth_tel=[%s]\n",ps->auth_tel);
	vtcp_log("hv_zfhtr_c.auth_trace_no=[%ld]\n",ps->auth_trace_no);
	vtcp_log("hv_zfhtr_c.chk=[%s]\n",ps->chk);
	vtcp_log("hv_zfhtr_c.chk_trace_no=[%ld]\n",ps->chk_trace_no);
	vtcp_log("hv_zfhtr_c.send_tel=[%s]\n",ps->send_tel);
	vtcp_log("hv_zfhtr_c.send_tel_trace_no=[%ld]\n",ps->send_tel_trace_no);
	vtcp_log("hv_zfhtr_c.dealerr_date=[%ld]\n",ps->dealerr_date);
	vtcp_log("hv_zfhtr_c.dealerr_tel=[%s]\n",ps->dealerr_tel);
	vtcp_log("hv_zfhtr_c.resp1=[%s]\n",ps->resp1);
	vtcp_log("hv_zfhtr_c.hv_brf=[%s]\n",ps->hv_brf);
	return(0);
}
/*****************************************************************************/
/****                              查询函数部分[]                       ****/
/*****************************************************************************/
int Hv_zfhtr_Sel(reply,hv_zfhtr_c,fmtstr,va_alist)
char    *reply;
struct  hv_zfhtr_c *hv_zfhtr_c;
char    *fmtstr;
va_dcl
{
	int   ret;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	ret = Hv_zfhtr_Dec_Sel( reply , "%s" , wherelist );
	if (ret){
		WRITEMSG
		return ret;
	}
	ret = Hv_zfhtr_Fet_Sel( hv_zfhtr_c , reply );
	if (ret){
		WRITEMSG
		return ret;
	}

	Hv_zfhtr_Clo_Sel();

	return 0;
}



char *key_strcat(char *,char *);
int Hv_zfhtr_Dec_Sel ( reply , fmtstr , va_alist )
char    *reply;
char    *fmtstr;
va_dcl
{
	EXEC    SQL BEGIN   DECLARE SECTION;
		char    comm[1000];
	EXEC    SQL END     DECLARE SECTION;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	sprintf ( comm ," SELECT rowid,hv_zfhtr.* FROM hv_zfhtr WHERE  ");
	key_strcat(comm,wherelist);

	vtcp_log("%s,%d,SQLSTR=[%s]\n",__FILE__,__LINE__,comm);
	sqlca.sqlcode=0;
	EXEC SQL PREPARE hv_zfhtr_sel FROM :comm;
	EXEC SQL DECLARE sel_hv_zfhtr CURSOR FOR hv_zfhtr_sel;

	EXEC SQL OPEN sel_hv_zfhtr;
	if (sqlca.sqlcode){
		sprintf(acErrMsg,"OPEN hv_zfhtr error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D102" );
		return CM_SQLCODE;
	}

	return 0;
}

int Hv_zfhtr_Fet_Sel ( struct hv_zfhtr_c *hv_zfhtr_c , char * reply )
{

	int   ret;

	EXEC SQL FETCH sel_hv_zfhtr INTO :hv_zfhtr_c;
	if (sqlca.sqlcode&&sqlca.sqlcode!=1403){
		sprintf(acErrMsg,"Fetch hv_zfhtr error!!! %d",sqlca.sqlcode);
		WRITEMSG
		strcpy (reply,"D103");
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == 1403 ){
		sprintf(acErrMsg,"Fetch hv_zfhtr finished!!! %d",sqlca.sqlcode);
		WRITEMSG
		strcpy (reply,"D104");
		return CM_SQLCODE;
	}
	zip_struct(hv_zfhtr_c);

	return 0;
}

int Hv_zfhtr_Clo_Sel (){
	EXEC SQL CLOSE sel_hv_zfhtr;
	return 0;
}

/*****************************************************************************/
/****                              修改函数部分                           ****/
/*****************************************************************************/
int Hv_zfhtr_Dec_Upd( reply , fmtstr , va_alist)
char    *reply;
char    *fmtstr;
va_dcl
{
	EXEC    SQL BEGIN   DECLARE SECTION;
		char    comm[1000];
	EXEC    SQL END     DECLARE SECTION;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	sprintf ( comm , "SELECT rowid,hv_zfhtr.* FROM hv_zfhtr WHERE  ");
	key_strcat(comm,wherelist);
	strcat(comm," FOR UPDATE WAIT 5 ");
	vtcp_log("%s,%d,SQLSTR=[%s]\n",__FILE__,__LINE__,comm);
	sqlca.sqlcode=0;
	EXEC SQL PREPARE hv_zfhtr_upd FROM :comm;

	EXEC SQL DECLARE upd_hv_zfhtr CURSOR FOR hv_zfhtr_upd;

	EXEC SQL OPEN upd_hv_zfhtr;
	if (sqlca.sqlcode){
		sprintf(acErrMsg,"open hv_zfhtr error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D102" );
		return CM_SQLCODE;
	}

	return 0;
}

int Hv_zfhtr_Fet_Upd( struct hv_zfhtr_c *hv_zfhtr_c , char * reply ){
	int   ret;

	EXEC SQL FETCH upd_hv_zfhtr INTO :hv_zfhtr_c;
	if ( sqlca.sqlcode && sqlca.sqlcode!=1403 ){
		sprintf(acErrMsg,"FETCH upd hv_zfhtr error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D103" );
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == 1403 ){
		sprintf(acErrMsg,"FETCH hv_zfhtr finished %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D104" );
		return CM_SQLCODE;
	}
	zip_struct(hv_zfhtr_c);

	return 0;
}

int Hv_zfhtr_Upd_Upd( struct hv_zfhtr_c hv_zfhtr_c , char * reply){
	int ret;

	EXEC SQL UPDATE hv_zfhtr SET br_no=:hv_zfhtr_c.br_no,
			tx_date=:hv_zfhtr_c.tx_date,
			wt_date=:hv_zfhtr_c.wt_date,
			tx_time=:hv_zfhtr_c.tx_time,
			orderno=:hv_zfhtr_c.orderno,
			cur_no=:hv_zfhtr_c.cur_no,
			note_type=:hv_zfhtr_c.note_type,
			note_no=:hv_zfhtr_c.note_no,
			tx_amt=:hv_zfhtr_c.tx_amt,
			tx_chrg_ind=:hv_zfhtr_c.tx_chrg_ind,
			chrg_amt=:hv_zfhtr_c.chrg_amt,
			pay_qs_no=:hv_zfhtr_c.pay_qs_no,
			or_br_no=:hv_zfhtr_c.or_br_no,
			pay_opn_br_no=:hv_zfhtr_c.pay_opn_br_no,
			pay_ac_no=:hv_zfhtr_c.pay_ac_no,
			pay_name=:hv_zfhtr_c.pay_name,
			pay_addr=:hv_zfhtr_c.pay_addr,
			cash_qs_no=:hv_zfhtr_c.cash_qs_no,
			ac_br_no=:hv_zfhtr_c.ac_br_no,
			cash_opn_br_no=:hv_zfhtr_c.cash_opn_br_no,
			cash_ac_no=:hv_zfhtr_c.cash_ac_no,
			cash_name=:hv_zfhtr_c.cash_name,
			cash_addr=:hv_zfhtr_c.cash_addr,
			yw_type=:hv_zfhtr_c.yw_type,
			sendco=:hv_zfhtr_c.sendco,
			receco=:hv_zfhtr_c.receco,
			cmtno=:hv_zfhtr_c.cmtno,
			beg_sts=:hv_zfhtr_c.beg_sts,
			operlevel=:hv_zfhtr_c.operlevel,
			hv_sts=:hv_zfhtr_c.hv_sts,
			tel=:hv_zfhtr_c.tel,
			trace_no=:hv_zfhtr_c.trace_no,
			hv_osts=:hv_zfhtr_c.hv_osts,
			checkflag=:hv_zfhtr_c.checkflag,
			hv_prt_ind=:hv_zfhtr_c.hv_prt_ind,
			resend_ind=:hv_zfhtr_c.resend_ind,
			resend_date=:hv_zfhtr_c.resend_date,
			o_orderno=:hv_zfhtr_c.o_orderno,
			o_tx_date=:hv_zfhtr_c.o_tx_date,
			o_wt_date=:hv_zfhtr_c.o_wt_date,
			o_cmtno=:hv_zfhtr_c.o_cmtno,
			lw_ind=:hv_zfhtr_c.lw_ind,
			addid=:hv_zfhtr_c.addid,
			refno=:hv_zfhtr_c.refno,
			auth_tel=:hv_zfhtr_c.auth_tel,
			auth_trace_no=:hv_zfhtr_c.auth_trace_no,
			chk=:hv_zfhtr_c.chk,
			chk_trace_no=:hv_zfhtr_c.chk_trace_no,
			send_tel=:hv_zfhtr_c.send_tel,
			send_tel_trace_no=:hv_zfhtr_c.send_tel_trace_no,
			dealerr_date=:hv_zfhtr_c.dealerr_date,
			dealerr_tel=:hv_zfhtr_c.dealerr_tel,
			resp1=:hv_zfhtr_c.resp1,
			hv_brf=:hv_zfhtr_c.hv_brf
	WHERE rowid=:hv_zfhtr_c.rowid;
	if ( sqlca.sqlcode && sqlca.sqlcode != 1403 ){
		sprintf(acErrMsg,"UPDATE hv_zfhtr error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D105" );
		return CM_SQLCODE;
	}

	return 0;
}


int Hv_zfhtr_Del_Upd(struct hv_zfhtr_c hv_zfhtr_c , char * reply  ){

	EXEC SQL DELETE FROM hv_zfhtr WHERE rowid=:hv_zfhtr_c.rowid;
	if ( sqlca.sqlcode ){
		sprintf(acErrMsg,"DELETE hv_zfhtr error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D105" );
		return CM_SQLCODE;
	}

	return 0;
}

int Hv_zfhtr_Clo_Upd( ){
	EXEC SQL CLOSE upd_hv_zfhtr;
	return 0;
}

/*****************************************************************************/
/****                              增加函数部分                           ****/
/*****************************************************************************/
int Hv_zfhtr_Ins( struct hv_zfhtr_c hv_zfhtr_c , char * reply ){
	int ret;

	EXEC SQL INSERT INTO hv_zfhtr VALUES (:hv_zfhtr_c.br_no,
			:hv_zfhtr_c.tx_date,
			:hv_zfhtr_c.wt_date,
			:hv_zfhtr_c.tx_time,
			:hv_zfhtr_c.orderno,
			:hv_zfhtr_c.cur_no,
			:hv_zfhtr_c.note_type,
			:hv_zfhtr_c.note_no,
			:hv_zfhtr_c.tx_amt,
			:hv_zfhtr_c.tx_chrg_ind,
			:hv_zfhtr_c.chrg_amt,
			:hv_zfhtr_c.pay_qs_no,
			:hv_zfhtr_c.or_br_no,
			:hv_zfhtr_c.pay_opn_br_no,
			:hv_zfhtr_c.pay_ac_no,
			:hv_zfhtr_c.pay_name,
			:hv_zfhtr_c.pay_addr,
			:hv_zfhtr_c.cash_qs_no,
			:hv_zfhtr_c.ac_br_no,
			:hv_zfhtr_c.cash_opn_br_no,
			:hv_zfhtr_c.cash_ac_no,
			:hv_zfhtr_c.cash_name,
			:hv_zfhtr_c.cash_addr,
			:hv_zfhtr_c.yw_type,
			:hv_zfhtr_c.sendco,
			:hv_zfhtr_c.receco,
			:hv_zfhtr_c.cmtno,
			:hv_zfhtr_c.beg_sts,
			:hv_zfhtr_c.operlevel,
			:hv_zfhtr_c.hv_sts,
			:hv_zfhtr_c.tel,
			:hv_zfhtr_c.trace_no,
			:hv_zfhtr_c.hv_osts,
			:hv_zfhtr_c.checkflag,
			:hv_zfhtr_c.hv_prt_ind,
			:hv_zfhtr_c.resend_ind,
			:hv_zfhtr_c.resend_date,
			:hv_zfhtr_c.o_orderno,
			:hv_zfhtr_c.o_tx_date,
			:hv_zfhtr_c.o_wt_date,
			:hv_zfhtr_c.o_cmtno,
			:hv_zfhtr_c.lw_ind,
			:hv_zfhtr_c.addid,
			:hv_zfhtr_c.refno,
			:hv_zfhtr_c.auth_tel,
			:hv_zfhtr_c.auth_trace_no,
			:hv_zfhtr_c.chk,
			:hv_zfhtr_c.chk_trace_no,
			:hv_zfhtr_c.send_tel,
			:hv_zfhtr_c.send_tel_trace_no,
			:hv_zfhtr_c.dealerr_date,
			:hv_zfhtr_c.dealerr_tel,
			:hv_zfhtr_c.resp1,
			:hv_zfhtr_c.hv_brf);
	if ( sqlca.sqlcode && sqlca.sqlcode != -1 )
	{
		sprintf(acErrMsg,"INSERT hv_zfhtr error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D107" );
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == -1 )
	{
		sprintf(acErrMsg,"INSERT hv_zfhtr error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D108" );
		return CM_SQLCODE;
	}

	return 0;
}
