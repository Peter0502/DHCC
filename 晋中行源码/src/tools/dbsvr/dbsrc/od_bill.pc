#include<stdio.h>
#include<varargs.h>

#define EXTERN
#include"global.h"


EXEC SQL INCLUDE SQLCA;
#include"od_bill_c.h"
#define CM_SQLCODE sqlca.sqlcode==1403?100:(sqlca.sqlcode==-1?-239:sqlca.sqlcode)

int od_bill_con ( struct od_bill_c , char *);
int put_mystery( char *, char * );
char *zip_tail(char *s);
static void zip_struct(struct od_bill_c* ps){
	zip_tail(ps->rowid);
	zip_tail(ps->pay_sts);
	zip_tail(ps->curr_sts);
}
int Od_bill_Debug(struct od_bill_c *ps){
	vtcp_log("od_bill_c.rowid=[%s]\n",ps->rowid);
	vtcp_log("od_bill_c.ac_id=[%ld]\n",ps->ac_id);
	vtcp_log("od_bill_c.ac_seqn=[%ld]\n",ps->ac_seqn);
	vtcp_log("od_bill_c.curr_cnt=[%ld]\n",ps->curr_cnt);
	vtcp_log("od_bill_c.amt=[%f]\n",ps->amt);
	vtcp_log("od_bill_c.bal=[%f]\n",ps->bal);
	vtcp_log("od_bill_c.drt_bal=[%f]\n",ps->drt_bal);
	vtcp_log("od_bill_c.intst_acm=[%f]\n",ps->intst_acm);
	vtcp_log("od_bill_c.drt_intst_acm=[%f]\n",ps->drt_intst_acm);
	vtcp_log("od_bill_c.intst_amt=[%f]\n",ps->intst_amt);
	vtcp_log("od_bill_c.intst_bal=[%f]\n",ps->intst_bal);
	vtcp_log("od_bill_c.drt_intst_bal=[%f]\n",ps->drt_intst_bal);
	vtcp_log("od_bill_c.beg_date=[%ld]\n",ps->beg_date);
	vtcp_log("od_bill_c.end_date=[%ld]\n",ps->end_date);
	vtcp_log("od_bill_c.pay_date=[%ld]\n",ps->pay_date);
	vtcp_log("od_bill_c.tx_date=[%ld]\n",ps->tx_date);
	vtcp_log("od_bill_c.lst_date=[%ld]\n",ps->lst_date);
	vtcp_log("od_bill_c.pay_sts=[%s]\n",ps->pay_sts);
	vtcp_log("od_bill_c.curr_sts=[%s]\n",ps->curr_sts);
	return(0);
}
/*****************************************************************************/
/****                              查询函数部分[]                       ****/
/*****************************************************************************/
int Od_bill_Sel(reply,od_bill_c,fmtstr,va_alist)
char    *reply;
struct  od_bill_c *od_bill_c;
char    *fmtstr;
va_dcl
{
	int   ret;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	ret = Od_bill_Dec_Sel( reply , "%s" , wherelist );
	if (ret){
		WRITEMSG
		return ret;
	}
	ret = Od_bill_Fet_Sel( od_bill_c , reply );
	if (ret){
		WRITEMSG
		return ret;
	}

	Od_bill_Clo_Sel();

	return 0;
}



char *key_strcat(char *,char *);
int Od_bill_Dec_Sel ( reply , fmtstr , va_alist )
char    *reply;
char    *fmtstr;
va_dcl
{
	EXEC    SQL BEGIN   DECLARE SECTION;
		char    comm[1000];
	EXEC    SQL END     DECLARE SECTION;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	sprintf ( comm ," SELECT rowid,od_bill.* FROM od_bill WHERE  ");
	key_strcat(comm,wherelist);

	vtcp_log("%s,%d,SQLSTR=[%s]\n",__FILE__,__LINE__,comm);
	sqlca.sqlcode=0;
	EXEC SQL PREPARE od_bill_sel FROM :comm;
	EXEC SQL DECLARE sel_od_bill CURSOR FOR od_bill_sel;

	EXEC SQL OPEN sel_od_bill;
	if (sqlca.sqlcode){
		sprintf(acErrMsg,"OPEN od_bill error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D102" );
		return CM_SQLCODE;
	}

	return 0;
}

int Od_bill_Fet_Sel ( struct od_bill_c *od_bill_c , char * reply )
{

	int   ret;

	EXEC SQL FETCH sel_od_bill INTO :od_bill_c;
	if (sqlca.sqlcode&&sqlca.sqlcode!=1403){
		sprintf(acErrMsg,"Fetch od_bill error!!! %d",sqlca.sqlcode);
		WRITEMSG
		strcpy (reply,"D103");
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == 1403 ){
		sprintf(acErrMsg,"Fetch od_bill finished!!! %d",sqlca.sqlcode);
		WRITEMSG
		strcpy (reply,"D104");
		return CM_SQLCODE;
	}
	zip_struct(od_bill_c);

	return 0;
}

int Od_bill_Clo_Sel (){
	EXEC SQL CLOSE sel_od_bill;
	return 0;
}

/*****************************************************************************/
/****                              修改函数部分                           ****/
/*****************************************************************************/
int Od_bill_Dec_Upd( reply , fmtstr , va_alist)
char    *reply;
char    *fmtstr;
va_dcl
{
	EXEC    SQL BEGIN   DECLARE SECTION;
		char    comm[1000];
	EXEC    SQL END     DECLARE SECTION;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	sprintf ( comm , "SELECT rowid,od_bill.* FROM od_bill WHERE  ");
	key_strcat(comm,wherelist);
	strcat(comm," FOR UPDATE WAIT 5 ");
	vtcp_log("%s,%d,SQLSTR=[%s]\n",__FILE__,__LINE__,comm);
	sqlca.sqlcode=0;
	EXEC SQL PREPARE od_bill_upd FROM :comm;

	EXEC SQL DECLARE upd_od_bill CURSOR FOR od_bill_upd;

	EXEC SQL OPEN upd_od_bill;
	if (sqlca.sqlcode){
		sprintf(acErrMsg,"open od_bill error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D102" );
		return CM_SQLCODE;
	}

	return 0;
}

int Od_bill_Fet_Upd( struct od_bill_c *od_bill_c , char * reply ){
	int   ret;

	EXEC SQL FETCH upd_od_bill INTO :od_bill_c;
	if ( sqlca.sqlcode && sqlca.sqlcode!=1403 ){
		sprintf(acErrMsg,"FETCH upd od_bill error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D103" );
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == 1403 ){
		sprintf(acErrMsg,"FETCH od_bill finished %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D104" );
		return CM_SQLCODE;
	}
	zip_struct(od_bill_c);

	return 0;
}

int Od_bill_Upd_Upd( struct od_bill_c od_bill_c , char * reply){
	int ret;

	EXEC SQL UPDATE od_bill SET ac_id=:od_bill_c.ac_id,
			ac_seqn=:od_bill_c.ac_seqn,
			curr_cnt=:od_bill_c.curr_cnt,
			amt=:od_bill_c.amt,
			bal=:od_bill_c.bal,
			drt_bal=:od_bill_c.drt_bal,
			intst_acm=:od_bill_c.intst_acm,
			drt_intst_acm=:od_bill_c.drt_intst_acm,
			intst_amt=:od_bill_c.intst_amt,
			intst_bal=:od_bill_c.intst_bal,
			drt_intst_bal=:od_bill_c.drt_intst_bal,
			beg_date=:od_bill_c.beg_date,
			end_date=:od_bill_c.end_date,
			pay_date=:od_bill_c.pay_date,
			tx_date=:od_bill_c.tx_date,
			lst_date=:od_bill_c.lst_date,
			pay_sts=:od_bill_c.pay_sts,
			curr_sts=:od_bill_c.curr_sts
	WHERE rowid=:od_bill_c.rowid;
	if ( sqlca.sqlcode && sqlca.sqlcode != 1403 ){
		sprintf(acErrMsg,"UPDATE od_bill error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D105" );
		return CM_SQLCODE;
	}

	return 0;
}


int Od_bill_Del_Upd(struct od_bill_c od_bill_c , char * reply  ){

	EXEC SQL DELETE FROM od_bill WHERE rowid=:od_bill_c.rowid;
	if ( sqlca.sqlcode ){
		sprintf(acErrMsg,"DELETE od_bill error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D105" );
		return CM_SQLCODE;
	}

	return 0;
}

int Od_bill_Clo_Upd( ){
	EXEC SQL CLOSE upd_od_bill;
	return 0;
}

/*****************************************************************************/
/****                              增加函数部分                           ****/
/*****************************************************************************/
int Od_bill_Ins( struct od_bill_c od_bill_c , char * reply ){
	int ret;

	EXEC SQL INSERT INTO od_bill VALUES (:od_bill_c.ac_id,
			:od_bill_c.ac_seqn,
			:od_bill_c.curr_cnt,
			:od_bill_c.amt,
			:od_bill_c.bal,
			:od_bill_c.drt_bal,
			:od_bill_c.intst_acm,
			:od_bill_c.drt_intst_acm,
			:od_bill_c.intst_amt,
			:od_bill_c.intst_bal,
			:od_bill_c.drt_intst_bal,
			:od_bill_c.beg_date,
			:od_bill_c.end_date,
			:od_bill_c.pay_date,
			:od_bill_c.tx_date,
			:od_bill_c.lst_date,
			:od_bill_c.pay_sts,
			:od_bill_c.curr_sts);
	if ( sqlca.sqlcode && sqlca.sqlcode != -1 )
	{
		sprintf(acErrMsg,"INSERT od_bill error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D107" );
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == -1 )
	{
		sprintf(acErrMsg,"INSERT od_bill error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D108" );
		return CM_SQLCODE;
	}

	return 0;
}
