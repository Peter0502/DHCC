#include<stdio.h>
#include<varargs.h>

#define EXTERN
#include"global.h"


EXEC SQL INCLUDE SQLCA;
#include"point_prdt_def_c.h"
#define CM_SQLCODE sqlca.sqlcode==1403?100:(sqlca.sqlcode==-1?-239:sqlca.sqlcode)

int point_prdt_def_con ( struct point_prdt_def_c , char *);
int put_mystery( char *, char * );
char *zip_tail(char *s);
static void zip_struct(struct point_prdt_def_c* ps){
	zip_tail(ps->rowid);
	zip_tail(ps->prdt_no);
	zip_tail(ps->cif_type);
}
int Point_prdt_def_Debug(struct point_prdt_def_c *ps){
	vtcp_log("point_prdt_def_c.rowid=[%s]\n",ps->rowid);
	vtcp_log("point_prdt_def_c.prdt_no=[%s]\n",ps->prdt_no);
	vtcp_log("point_prdt_def_c.cif_type=[%s]\n",ps->cif_type);
	vtcp_log("point_prdt_def_c.beg_date=[%ld]\n",ps->beg_date);
	vtcp_log("point_prdt_def_c.edn_date=[%ld]\n",ps->edn_date);
	vtcp_log("point_prdt_def_c.beg_bal=[%f]\n",ps->beg_bal);
	vtcp_log("point_prdt_def_c.edn_bal=[%f]\n",ps->edn_bal);
	vtcp_log("point_prdt_def_c.max_point=[%ld]\n",ps->max_point);
	vtcp_log("point_prdt_def_c.min_point=[%ld]\n",ps->min_point);
	vtcp_log("point_prdt_def_c.ratio=[%ld]\n",ps->ratio);
	return(0);
}
/*****************************************************************************/
/****                              查询函数部分[]                       ****/
/*****************************************************************************/
int Point_prdt_def_Sel(reply,point_prdt_def_c,fmtstr,va_alist)
char    *reply;
struct  point_prdt_def_c *point_prdt_def_c;
char    *fmtstr;
va_dcl
{
	int   ret;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	ret = Point_prdt_def_Dec_Sel( reply , "%s" , wherelist );
	if (ret){
		WRITEMSG
		return ret;
	}
	ret = Point_prdt_def_Fet_Sel( point_prdt_def_c , reply );
	if (ret){
		WRITEMSG
		return ret;
	}

	Point_prdt_def_Clo_Sel();

	return 0;
}



char *key_strcat(char *,char *);
int Point_prdt_def_Dec_Sel ( reply , fmtstr , va_alist )
char    *reply;
char    *fmtstr;
va_dcl
{
	EXEC    SQL BEGIN   DECLARE SECTION;
		char    comm[1000];
	EXEC    SQL END     DECLARE SECTION;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	sprintf ( comm ," SELECT rowid,point_prdt_def.* FROM point_prdt_def WHERE  ");
	key_strcat(comm,wherelist);

	vtcp_log("%s,%d,SQLSTR=[%s]\n",__FILE__,__LINE__,comm);
	sqlca.sqlcode=0;
	EXEC SQL PREPARE point_prdt_def_sel FROM :comm;
	EXEC SQL DECLARE sel_point_prdt_def CURSOR FOR point_prdt_def_sel;

	EXEC SQL OPEN sel_point_prdt_def;
	if (sqlca.sqlcode){
		sprintf(acErrMsg,"OPEN point_prdt_def error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D102" );
		return CM_SQLCODE;
	}

	return 0;
}

int Point_prdt_def_Fet_Sel ( struct point_prdt_def_c *point_prdt_def_c , char * reply )
{

	int   ret;

	EXEC SQL FETCH sel_point_prdt_def INTO :point_prdt_def_c;
	if (sqlca.sqlcode&&sqlca.sqlcode!=1403){
		sprintf(acErrMsg,"Fetch point_prdt_def error!!! %d",sqlca.sqlcode);
		WRITEMSG
		strcpy (reply,"D103");
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == 1403 ){
		sprintf(acErrMsg,"Fetch point_prdt_def finished!!! %d",sqlca.sqlcode);
		WRITEMSG
		strcpy (reply,"D104");
		return CM_SQLCODE;
	}
	zip_struct(point_prdt_def_c);

	return 0;
}

int Point_prdt_def_Clo_Sel (){
	EXEC SQL CLOSE sel_point_prdt_def;
	return 0;
}

/*****************************************************************************/
/****                              修改函数部分                           ****/
/*****************************************************************************/
int Point_prdt_def_Dec_Upd( reply , fmtstr , va_alist)
char    *reply;
char    *fmtstr;
va_dcl
{
	EXEC    SQL BEGIN   DECLARE SECTION;
		char    comm[1000];
	EXEC    SQL END     DECLARE SECTION;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	sprintf ( comm , "SELECT rowid,point_prdt_def.* FROM point_prdt_def WHERE  ");
	key_strcat(comm,wherelist);
	strcat(comm," FOR UPDATE WAIT 5 ");
	vtcp_log("%s,%d,SQLSTR=[%s]\n",__FILE__,__LINE__,comm);
	sqlca.sqlcode=0;
	EXEC SQL PREPARE point_prdt_def_upd FROM :comm;

	EXEC SQL DECLARE upd_point_prdt_def CURSOR FOR point_prdt_def_upd;

	EXEC SQL OPEN upd_point_prdt_def;
	if (sqlca.sqlcode){
		sprintf(acErrMsg,"open point_prdt_def error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D102" );
		return CM_SQLCODE;
	}

	return 0;
}

int Point_prdt_def_Fet_Upd( struct point_prdt_def_c *point_prdt_def_c , char * reply ){
	int   ret;

	EXEC SQL FETCH upd_point_prdt_def INTO :point_prdt_def_c;
	if ( sqlca.sqlcode && sqlca.sqlcode!=1403 ){
		sprintf(acErrMsg,"FETCH upd point_prdt_def error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D103" );
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == 1403 ){
		sprintf(acErrMsg,"FETCH point_prdt_def finished %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D104" );
		return CM_SQLCODE;
	}
	zip_struct(point_prdt_def_c);

	return 0;
}

int Point_prdt_def_Upd_Upd( struct point_prdt_def_c point_prdt_def_c , char * reply){
	int ret;

	EXEC SQL UPDATE point_prdt_def SET prdt_no=:point_prdt_def_c.prdt_no,
			cif_type=:point_prdt_def_c.cif_type,
			beg_date=:point_prdt_def_c.beg_date,
			edn_date=:point_prdt_def_c.edn_date,
			beg_bal=:point_prdt_def_c.beg_bal,
			edn_bal=:point_prdt_def_c.edn_bal,
			max_point=:point_prdt_def_c.max_point,
			min_point=:point_prdt_def_c.min_point,
			ratio=:point_prdt_def_c.ratio
	WHERE rowid=:point_prdt_def_c.rowid;
	if ( sqlca.sqlcode && sqlca.sqlcode != 1403 ){
		sprintf(acErrMsg,"UPDATE point_prdt_def error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D105" );
		return CM_SQLCODE;
	}

	return 0;
}


int Point_prdt_def_Del_Upd(struct point_prdt_def_c point_prdt_def_c , char * reply  ){

	EXEC SQL DELETE FROM point_prdt_def WHERE rowid=:point_prdt_def_c.rowid;
	if ( sqlca.sqlcode ){
		sprintf(acErrMsg,"DELETE point_prdt_def error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D105" );
		return CM_SQLCODE;
	}

	return 0;
}

int Point_prdt_def_Clo_Upd( ){
	EXEC SQL CLOSE upd_point_prdt_def;
	return 0;
}

/*****************************************************************************/
/****                              增加函数部分                           ****/
/*****************************************************************************/
int Point_prdt_def_Ins( struct point_prdt_def_c point_prdt_def_c , char * reply ){
	int ret;

	EXEC SQL INSERT INTO point_prdt_def VALUES (:point_prdt_def_c.prdt_no,
			:point_prdt_def_c.cif_type,
			:point_prdt_def_c.beg_date,
			:point_prdt_def_c.edn_date,
			:point_prdt_def_c.beg_bal,
			:point_prdt_def_c.edn_bal,
			:point_prdt_def_c.max_point,
			:point_prdt_def_c.min_point,
			:point_prdt_def_c.ratio);
	if ( sqlca.sqlcode && sqlca.sqlcode != -1 )
	{
		sprintf(acErrMsg,"INSERT point_prdt_def error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D107" );
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == -1 )
	{
		sprintf(acErrMsg,"INSERT point_prdt_def error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D108" );
		return CM_SQLCODE;
	}

	return 0;
}
