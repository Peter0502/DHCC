#include<stdio.h>
#include<varargs.h>

#define EXTERN
#include"global.h"


EXEC SQL INCLUDE SQLCA;
#include"gl_tsub_c.h"
#define CM_SQLCODE sqlca.sqlcode==1403?100:(sqlca.sqlcode==-1?-239:sqlca.sqlcode)

int gl_tsub_con ( struct gl_tsub_c , char *);
int put_mystery( char *, char * );
char *zip_tail(char *s);
static void zip_struct(struct gl_tsub_c* ps){
	zip_tail(ps->rowid);
	zip_tail(ps->br_no);
	zip_tail(ps->cur_no);
	zip_tail(ps->acc_hrt);
	zip_tail(ps->bal_d);
	zip_tail(ps->term_type);
	zip_tail(ps->spe_ind);
}
int Gl_tsub_Debug(struct gl_tsub_c *ps){
	vtcp_log("gl_tsub_c.rowid=[%s]\n",ps->rowid);
	vtcp_log("gl_tsub_c.br_no=[%s]\n",ps->br_no);
	vtcp_log("gl_tsub_c.cur_no=[%s]\n",ps->cur_no);
	vtcp_log("gl_tsub_c.acc_hrt=[%s]\n",ps->acc_hrt);
	vtcp_log("gl_tsub_c.date=[%ld]\n",ps->date);
	vtcp_log("gl_tsub_c.bal_d=[%s]\n",ps->bal_d);
	vtcp_log("gl_tsub_c.bt_dr_bal=[%f]\n",ps->bt_dr_bal);
	vtcp_log("gl_tsub_c.bt_cr_bal=[%f]\n",ps->bt_cr_bal);
	vtcp_log("gl_tsub_c.r_dr_amt=[%f]\n",ps->r_dr_amt);
	vtcp_log("gl_tsub_c.r_cr_amt=[%f]\n",ps->r_cr_amt);
	vtcp_log("gl_tsub_c.r_dr_cnt=[%ld]\n",ps->r_dr_cnt);
	vtcp_log("gl_tsub_c.r_cr_cnt=[%ld]\n",ps->r_cr_cnt);
	vtcp_log("gl_tsub_c.r_dr_bal=[%f]\n",ps->r_dr_bal);
	vtcp_log("gl_tsub_c.r_cr_bal=[%f]\n",ps->r_cr_bal);
	vtcp_log("gl_tsub_c.term_type=[%s]\n",ps->term_type);
	vtcp_log("gl_tsub_c.spe_ind=[%s]\n",ps->spe_ind);
	return(0);
}
/*****************************************************************************/
/****                              查询函数部分[]                       ****/
/*****************************************************************************/
int Gl_tsub_Sel(reply,gl_tsub_c,fmtstr,va_alist)
char    *reply;
struct  gl_tsub_c *gl_tsub_c;
char    *fmtstr;
va_dcl
{
	int   ret;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	ret = Gl_tsub_Dec_Sel( reply , "%s" , wherelist );
	if (ret){
		WRITEMSG
		return ret;
	}
	ret = Gl_tsub_Fet_Sel( gl_tsub_c , reply );
	if (ret){
		WRITEMSG
		return ret;
	}

	Gl_tsub_Clo_Sel();

	return 0;
}



char *key_strcat(char *,char *);
int Gl_tsub_Dec_Sel ( reply , fmtstr , va_alist )
char    *reply;
char    *fmtstr;
va_dcl
{
	EXEC    SQL BEGIN   DECLARE SECTION;
		char    comm[1000];
	EXEC    SQL END     DECLARE SECTION;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	sprintf ( comm ," SELECT rowid,gl_tsub.* FROM gl_tsub WHERE  ");
	key_strcat(comm,wherelist);

	vtcp_log("%s,%d,SQLSTR=[%s]\n",__FILE__,__LINE__,comm);
	sqlca.sqlcode=0;
	EXEC SQL PREPARE gl_tsub_sel FROM :comm;
	EXEC SQL DECLARE sel_gl_tsub CURSOR FOR gl_tsub_sel;

	EXEC SQL OPEN sel_gl_tsub;
	if (sqlca.sqlcode){
		sprintf(acErrMsg,"OPEN gl_tsub error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D102" );
		return CM_SQLCODE;
	}

	return 0;
}

int Gl_tsub_Fet_Sel ( struct gl_tsub_c *gl_tsub_c , char * reply )
{

	int   ret;

	EXEC SQL FETCH sel_gl_tsub INTO :gl_tsub_c;
	if (sqlca.sqlcode&&sqlca.sqlcode!=1403){
		sprintf(acErrMsg,"Fetch gl_tsub error!!! %d",sqlca.sqlcode);
		WRITEMSG
		strcpy (reply,"D103");
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == 1403 ){
		sprintf(acErrMsg,"Fetch gl_tsub finished!!! %d",sqlca.sqlcode);
		WRITEMSG
		strcpy (reply,"D104");
		return CM_SQLCODE;
	}
	zip_struct(gl_tsub_c);

	return 0;
}

int Gl_tsub_Clo_Sel (){
	EXEC SQL CLOSE sel_gl_tsub;
	return 0;
}

/*****************************************************************************/
/****                              修改函数部分                           ****/
/*****************************************************************************/
int Gl_tsub_Dec_Upd( reply , fmtstr , va_alist)
char    *reply;
char    *fmtstr;
va_dcl
{
	EXEC    SQL BEGIN   DECLARE SECTION;
		char    comm[1000];
	EXEC    SQL END     DECLARE SECTION;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	sprintf ( comm , "SELECT rowid,gl_tsub.* FROM gl_tsub WHERE  ");
	key_strcat(comm,wherelist);
	strcat(comm," FOR UPDATE WAIT 5 ");
	vtcp_log("%s,%d,SQLSTR=[%s]\n",__FILE__,__LINE__,comm);
	sqlca.sqlcode=0;
	EXEC SQL PREPARE gl_tsub_upd FROM :comm;

	EXEC SQL DECLARE upd_gl_tsub CURSOR FOR gl_tsub_upd;

	EXEC SQL OPEN upd_gl_tsub;
	if (sqlca.sqlcode){
		sprintf(acErrMsg,"open gl_tsub error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D102" );
		return CM_SQLCODE;
	}

	return 0;
}

int Gl_tsub_Fet_Upd( struct gl_tsub_c *gl_tsub_c , char * reply ){
	int   ret;

	EXEC SQL FETCH upd_gl_tsub INTO :gl_tsub_c;
	if ( sqlca.sqlcode && sqlca.sqlcode!=1403 ){
		sprintf(acErrMsg,"FETCH upd gl_tsub error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D103" );
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == 1403 ){
		sprintf(acErrMsg,"FETCH gl_tsub finished %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D104" );
		return CM_SQLCODE;
	}
	zip_struct(gl_tsub_c);

	return 0;
}

int Gl_tsub_Upd_Upd( struct gl_tsub_c gl_tsub_c , char * reply){
	int ret;

	EXEC SQL UPDATE gl_tsub SET br_no=:gl_tsub_c.br_no,
			cur_no=:gl_tsub_c.cur_no,
			acc_hrt=:gl_tsub_c.acc_hrt,
			"date"=:gl_tsub_c.date,
			bal_d=:gl_tsub_c.bal_d,
			bt_dr_bal=:gl_tsub_c.bt_dr_bal,
			bt_cr_bal=:gl_tsub_c.bt_cr_bal,
			r_dr_amt=:gl_tsub_c.r_dr_amt,
			r_cr_amt=:gl_tsub_c.r_cr_amt,
			r_dr_cnt=:gl_tsub_c.r_dr_cnt,
			r_cr_cnt=:gl_tsub_c.r_cr_cnt,
			r_dr_bal=:gl_tsub_c.r_dr_bal,
			r_cr_bal=:gl_tsub_c.r_cr_bal,
			term_type=:gl_tsub_c.term_type,
			spe_ind=:gl_tsub_c.spe_ind
	WHERE rowid=:gl_tsub_c.rowid;
	if ( sqlca.sqlcode && sqlca.sqlcode != 1403 ){
		sprintf(acErrMsg,"UPDATE gl_tsub error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D105" );
		return CM_SQLCODE;
	}

	return 0;
}


int Gl_tsub_Del_Upd(struct gl_tsub_c gl_tsub_c , char * reply  ){

	EXEC SQL DELETE FROM gl_tsub WHERE rowid=:gl_tsub_c.rowid;
	if ( sqlca.sqlcode ){
		sprintf(acErrMsg,"DELETE gl_tsub error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D105" );
		return CM_SQLCODE;
	}

	return 0;
}

int Gl_tsub_Clo_Upd( ){
	EXEC SQL CLOSE upd_gl_tsub;
	return 0;
}

/*****************************************************************************/
/****                              增加函数部分                           ****/
/*****************************************************************************/
int Gl_tsub_Ins( struct gl_tsub_c gl_tsub_c , char * reply ){
	int ret;

	EXEC SQL INSERT INTO gl_tsub VALUES (:gl_tsub_c.br_no,
			:gl_tsub_c.cur_no,
			:gl_tsub_c.acc_hrt,
			:gl_tsub_c.date,
			:gl_tsub_c.bal_d,
			:gl_tsub_c.bt_dr_bal,
			:gl_tsub_c.bt_cr_bal,
			:gl_tsub_c.r_dr_amt,
			:gl_tsub_c.r_cr_amt,
			:gl_tsub_c.r_dr_cnt,
			:gl_tsub_c.r_cr_cnt,
			:gl_tsub_c.r_dr_bal,
			:gl_tsub_c.r_cr_bal,
			:gl_tsub_c.term_type,
			:gl_tsub_c.spe_ind);
	if ( sqlca.sqlcode && sqlca.sqlcode != -1 )
	{
		sprintf(acErrMsg,"INSERT gl_tsub error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D107" );
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == -1 )
	{
		sprintf(acErrMsg,"INSERT gl_tsub error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D108" );
		return CM_SQLCODE;
	}

	return 0;
}
