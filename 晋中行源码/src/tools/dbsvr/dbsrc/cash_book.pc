#include<stdio.h>
#include<varargs.h>

#define EXTERN
#include"global.h"


EXEC SQL INCLUDE SQLCA;
#include"cash_book_c.h"
#define CM_SQLCODE sqlca.sqlcode==1403?100:(sqlca.sqlcode==-1?-239:sqlca.sqlcode)

int cash_book_con ( struct cash_book_c , char *);
int put_mystery( char *, char * );
char *zip_tail(char *s);
static void zip_struct(struct cash_book_c* ps){
	zip_tail(ps->rowid);
	zip_tail(ps->br_no);
	zip_tail(ps->tel);
	zip_tail(ps->tw_br_no);
	zip_tail(ps->tw_tel);
	zip_tail(ps->cur_no);
	zip_tail(ps->ind);
}
int Cash_book_Debug(struct cash_book_c *ps){
	vtcp_log("cash_book_c.rowid=[%s]\n",ps->rowid);
	vtcp_log("cash_book_c.trace_no=[%ld]\n",ps->trace_no);
	vtcp_log("cash_book_c.tx_date=[%ld]\n",ps->tx_date);
	vtcp_log("cash_book_c.br_no=[%s]\n",ps->br_no);
	vtcp_log("cash_book_c.tel=[%s]\n",ps->tel);
	vtcp_log("cash_book_c.tw_br_no=[%s]\n",ps->tw_br_no);
	vtcp_log("cash_book_c.tw_tel=[%s]\n",ps->tw_tel);
	vtcp_log("cash_book_c.cur_no=[%s]\n",ps->cur_no);
	vtcp_log("cash_book_c.amt=[%f]\n",ps->amt);
	vtcp_log("cash_book_c.ind=[%s]\n",ps->ind);
	vtcp_log("cash_book_c.wrk_no=[%ld]\n",ps->wrk_no);
	vtcp_log("cash_book_c.out_no=[%ld]\n",ps->out_no);
	return(0);
}
/*****************************************************************************/
/****                              查询函数部分[]                       ****/
/*****************************************************************************/
int Cash_book_Sel(reply,cash_book_c,fmtstr,va_alist)
char    *reply;
struct  cash_book_c *cash_book_c;
char    *fmtstr;
va_dcl
{
	int   ret;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	ret = Cash_book_Dec_Sel( reply , "%s" , wherelist );
	if (ret){
		WRITEMSG
		return ret;
	}
	ret = Cash_book_Fet_Sel( cash_book_c , reply );
	if (ret){
		WRITEMSG
		return ret;
	}

	Cash_book_Clo_Sel();

	return 0;
}



char *key_strcat(char *,char *);
int Cash_book_Dec_Sel ( reply , fmtstr , va_alist )
char    *reply;
char    *fmtstr;
va_dcl
{
	EXEC    SQL BEGIN   DECLARE SECTION;
		char    comm[1000];
	EXEC    SQL END     DECLARE SECTION;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	sprintf ( comm ," SELECT rowid,cash_book.* FROM cash_book WHERE  ");
	key_strcat(comm,wherelist);

	vtcp_log("%s,%d,SQLSTR=[%s]\n",__FILE__,__LINE__,comm);
	sqlca.sqlcode=0;
	EXEC SQL PREPARE cash_book_sel FROM :comm;
	EXEC SQL DECLARE sel_cash_book CURSOR FOR cash_book_sel;

	EXEC SQL OPEN sel_cash_book;
	if (sqlca.sqlcode){
		sprintf(acErrMsg,"OPEN cash_book error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D102" );
		return CM_SQLCODE;
	}

	return 0;
}

int Cash_book_Fet_Sel ( struct cash_book_c *cash_book_c , char * reply )
{

	int   ret;

	EXEC SQL FETCH sel_cash_book INTO :cash_book_c;
	if (sqlca.sqlcode&&sqlca.sqlcode!=1403){
		sprintf(acErrMsg,"Fetch cash_book error!!! %d",sqlca.sqlcode);
		WRITEMSG
		strcpy (reply,"D103");
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == 1403 ){
		sprintf(acErrMsg,"Fetch cash_book finished!!! %d",sqlca.sqlcode);
		WRITEMSG
		strcpy (reply,"D104");
		return CM_SQLCODE;
	}
	zip_struct(cash_book_c);

	return 0;
}

int Cash_book_Clo_Sel (){
	EXEC SQL CLOSE sel_cash_book;
	return 0;
}

/*****************************************************************************/
/****                              修改函数部分                           ****/
/*****************************************************************************/
int Cash_book_Dec_Upd( reply , fmtstr , va_alist)
char    *reply;
char    *fmtstr;
va_dcl
{
	EXEC    SQL BEGIN   DECLARE SECTION;
		char    comm[1000];
	EXEC    SQL END     DECLARE SECTION;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	sprintf ( comm , "SELECT rowid,cash_book.* FROM cash_book WHERE  ");
	key_strcat(comm,wherelist);
	strcat(comm," FOR UPDATE WAIT 5 ");
	vtcp_log("%s,%d,SQLSTR=[%s]\n",__FILE__,__LINE__,comm);
	sqlca.sqlcode=0;
	EXEC SQL PREPARE cash_book_upd FROM :comm;

	EXEC SQL DECLARE upd_cash_book CURSOR FOR cash_book_upd;

	EXEC SQL OPEN upd_cash_book;
	if (sqlca.sqlcode){
		sprintf(acErrMsg,"open cash_book error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D102" );
		return CM_SQLCODE;
	}

	return 0;
}

int Cash_book_Fet_Upd( struct cash_book_c *cash_book_c , char * reply ){
	int   ret;

	EXEC SQL FETCH upd_cash_book INTO :cash_book_c;
	if ( sqlca.sqlcode && sqlca.sqlcode!=1403 ){
		sprintf(acErrMsg,"FETCH upd cash_book error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D103" );
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == 1403 ){
		sprintf(acErrMsg,"FETCH cash_book finished %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D104" );
		return CM_SQLCODE;
	}
	zip_struct(cash_book_c);

	return 0;
}

int Cash_book_Upd_Upd( struct cash_book_c cash_book_c , char * reply){
	int ret;

	EXEC SQL UPDATE cash_book SET trace_no=:cash_book_c.trace_no,
			tx_date=:cash_book_c.tx_date,
			br_no=:cash_book_c.br_no,
			tel=:cash_book_c.tel,
			tw_br_no=:cash_book_c.tw_br_no,
			tw_tel=:cash_book_c.tw_tel,
			cur_no=:cash_book_c.cur_no,
			amt=:cash_book_c.amt,
			ind=:cash_book_c.ind,
			wrk_no=:cash_book_c.wrk_no,
			out_no=:cash_book_c.out_no
	WHERE rowid=:cash_book_c.rowid;
	if ( sqlca.sqlcode && sqlca.sqlcode != 1403 ){
		sprintf(acErrMsg,"UPDATE cash_book error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D105" );
		return CM_SQLCODE;
	}

	return 0;
}


int Cash_book_Del_Upd(struct cash_book_c cash_book_c , char * reply  ){

	EXEC SQL DELETE FROM cash_book WHERE rowid=:cash_book_c.rowid;
	if ( sqlca.sqlcode ){
		sprintf(acErrMsg,"DELETE cash_book error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D105" );
		return CM_SQLCODE;
	}

	return 0;
}

int Cash_book_Clo_Upd( ){
	EXEC SQL CLOSE upd_cash_book;
	return 0;
}

/*****************************************************************************/
/****                              增加函数部分                           ****/
/*****************************************************************************/
int Cash_book_Ins( struct cash_book_c cash_book_c , char * reply ){
	int ret;

	EXEC SQL INSERT INTO cash_book VALUES (:cash_book_c.trace_no,
			:cash_book_c.tx_date,
			:cash_book_c.br_no,
			:cash_book_c.tel,
			:cash_book_c.tw_br_no,
			:cash_book_c.tw_tel,
			:cash_book_c.cur_no,
			:cash_book_c.amt,
			:cash_book_c.ind,
			:cash_book_c.wrk_no,
			:cash_book_c.out_no);
	if ( sqlca.sqlcode && sqlca.sqlcode != -1 )
	{
		sprintf(acErrMsg,"INSERT cash_book error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D107" );
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == -1 )
	{
		sprintf(acErrMsg,"INSERT cash_book error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D108" );
		return CM_SQLCODE;
	}

	return 0;
}
