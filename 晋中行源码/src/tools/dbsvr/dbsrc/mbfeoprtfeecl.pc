#include<stdio.h>
#include<varargs.h>

#define EXTERN
#include"global.h"


EXEC SQL INCLUDE SQLCA;
#include"mbfeoprtfeecl_c.h"
#define CM_SQLCODE sqlca.sqlcode==1403?100:(sqlca.sqlcode==-1?-239:sqlca.sqlcode)

int mbfeoprtfeecl_con ( struct mbfeoprtfeecl_c , char *);
int put_mystery( char *, char * );
char *zip_tail(char *s);
static void zip_struct(struct mbfeoprtfeecl_c* ps){
	zip_tail(ps->rowid);
	zip_tail(ps->rdficenter);
	zip_tail(ps->feebkcode);
	zip_tail(ps->feeacno);
}
int Mbfeoprtfeecl_Debug(struct mbfeoprtfeecl_c *ps){
	vtcp_log("mbfeoprtfeecl_c.rowid=[%s]\n",ps->rowid);
	vtcp_log("mbfeoprtfeecl_c.consigndate=[%ld]\n",ps->consigndate);
	vtcp_log("mbfeoprtfeecl_c.rdficenter=[%s]\n",ps->rdficenter);
	vtcp_log("mbfeoprtfeecl_c.feebkcode=[%s]\n",ps->feebkcode);
	vtcp_log("mbfeoprtfeecl_c.feebgdate=[%ld]\n",ps->feebgdate);
	vtcp_log("mbfeoprtfeecl_c.feeeddate=[%ld]\n",ps->feeeddate);
	vtcp_log("mbfeoprtfeecl_c.feeammunt=[%f]\n",ps->feeammunt);
	vtcp_log("mbfeoprtfeecl_c.sapsrate=[%f]\n",ps->sapsrate);
	vtcp_log("mbfeoprtfeecl_c.bktprate=[%f]\n",ps->bktprate);
	vtcp_log("mbfeoprtfeecl_c.mothrate=[%f]\n",ps->mothrate);
	vtcp_log("mbfeoprtfeecl_c.hvpfeeamt=[%f]\n",ps->hvpfeeamt);
	vtcp_log("mbfeoprtfeecl_c.hvpfeecnt=[%ld]\n",ps->hvpfeecnt);
	vtcp_log("mbfeoprtfeecl_c.singlefeeamt=[%f]\n",ps->singlefeeamt);
	vtcp_log("mbfeoprtfeecl_c.singlefeecnt=[%ld]\n",ps->singlefeecnt);
	vtcp_log("mbfeoprtfeecl_c.infofeeamt=[%f]\n",ps->infofeeamt);
	vtcp_log("mbfeoprtfeecl_c.infofeecnt=[%ld]\n",ps->infofeecnt);
	vtcp_log("mbfeoprtfeecl_c.feeacno=[%s]\n",ps->feeacno);
	vtcp_log("mbfeoprtfeecl_c.printno=[%ld]\n",ps->printno);
	return(0);
}
/*****************************************************************************/
/****                              查询函数部分[]                       ****/
/*****************************************************************************/
int Mbfeoprtfeecl_Sel(reply,mbfeoprtfeecl_c,fmtstr,va_alist)
char    *reply;
struct  mbfeoprtfeecl_c *mbfeoprtfeecl_c;
char    *fmtstr;
va_dcl
{
	int   ret;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	ret = Mbfeoprtfeecl_Dec_Sel( reply , "%s" , wherelist );
	if (ret){
		WRITEMSG
		return ret;
	}
	ret = Mbfeoprtfeecl_Fet_Sel( mbfeoprtfeecl_c , reply );
	if (ret){
		WRITEMSG
		return ret;
	}

	Mbfeoprtfeecl_Clo_Sel();

	return 0;
}



char *key_strcat(char *,char *);
int Mbfeoprtfeecl_Dec_Sel ( reply , fmtstr , va_alist )
char    *reply;
char    *fmtstr;
va_dcl
{
	EXEC    SQL BEGIN   DECLARE SECTION;
		char    comm[1000];
	EXEC    SQL END     DECLARE SECTION;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	sprintf ( comm ," SELECT rowid,mbfeoprtfeecl.* FROM mbfeoprtfeecl WHERE  ");
	key_strcat(comm,wherelist);

	vtcp_log("%s,%d,SQLSTR=[%s]\n",__FILE__,__LINE__,comm);
	sqlca.sqlcode=0;
	EXEC SQL PREPARE mbfeoprtfeecl_sel FROM :comm;
	EXEC SQL DECLARE sel_mbfeoprtfeecl CURSOR FOR mbfeoprtfeecl_sel;

	EXEC SQL OPEN sel_mbfeoprtfeecl;
	if (sqlca.sqlcode){
		sprintf(acErrMsg,"OPEN mbfeoprtfeecl error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D102" );
		return CM_SQLCODE;
	}

	return 0;
}

int Mbfeoprtfeecl_Fet_Sel ( struct mbfeoprtfeecl_c *mbfeoprtfeecl_c , char * reply )
{

	int   ret;

	EXEC SQL FETCH sel_mbfeoprtfeecl INTO :mbfeoprtfeecl_c;
	if (sqlca.sqlcode&&sqlca.sqlcode!=1403){
		sprintf(acErrMsg,"Fetch mbfeoprtfeecl error!!! %d",sqlca.sqlcode);
		WRITEMSG
		strcpy (reply,"D103");
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == 1403 ){
		sprintf(acErrMsg,"Fetch mbfeoprtfeecl finished!!! %d",sqlca.sqlcode);
		WRITEMSG
		strcpy (reply,"D104");
		return CM_SQLCODE;
	}
	zip_struct(mbfeoprtfeecl_c);

	return 0;
}

int Mbfeoprtfeecl_Clo_Sel (){
	EXEC SQL CLOSE sel_mbfeoprtfeecl;
	return 0;
}

/*****************************************************************************/
/****                              修改函数部分                           ****/
/*****************************************************************************/
int Mbfeoprtfeecl_Dec_Upd( reply , fmtstr , va_alist)
char    *reply;
char    *fmtstr;
va_dcl
{
	EXEC    SQL BEGIN   DECLARE SECTION;
		char    comm[1000];
	EXEC    SQL END     DECLARE SECTION;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	sprintf ( comm , "SELECT rowid,mbfeoprtfeecl.* FROM mbfeoprtfeecl WHERE  ");
	key_strcat(comm,wherelist);
	strcat(comm," FOR UPDATE WAIT 5 ");
	vtcp_log("%s,%d,SQLSTR=[%s]\n",__FILE__,__LINE__,comm);
	sqlca.sqlcode=0;
	EXEC SQL PREPARE mbfeoprtfeecl_upd FROM :comm;

	EXEC SQL DECLARE upd_mbfeoprtfeecl CURSOR FOR mbfeoprtfeecl_upd;

	EXEC SQL OPEN upd_mbfeoprtfeecl;
	if (sqlca.sqlcode){
		sprintf(acErrMsg,"open mbfeoprtfeecl error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D102" );
		return CM_SQLCODE;
	}

	return 0;
}

int Mbfeoprtfeecl_Fet_Upd( struct mbfeoprtfeecl_c *mbfeoprtfeecl_c , char * reply ){
	int   ret;

	EXEC SQL FETCH upd_mbfeoprtfeecl INTO :mbfeoprtfeecl_c;
	if ( sqlca.sqlcode && sqlca.sqlcode!=1403 ){
		sprintf(acErrMsg,"FETCH upd mbfeoprtfeecl error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D103" );
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == 1403 ){
		sprintf(acErrMsg,"FETCH mbfeoprtfeecl finished %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D104" );
		return CM_SQLCODE;
	}
	zip_struct(mbfeoprtfeecl_c);

	return 0;
}

int Mbfeoprtfeecl_Upd_Upd( struct mbfeoprtfeecl_c mbfeoprtfeecl_c , char * reply){
	int ret;

	EXEC SQL UPDATE mbfeoprtfeecl SET consigndate=:mbfeoprtfeecl_c.consigndate,
			rdficenter=:mbfeoprtfeecl_c.rdficenter,
			feebkcode=:mbfeoprtfeecl_c.feebkcode,
			feebgdate=:mbfeoprtfeecl_c.feebgdate,
			feeeddate=:mbfeoprtfeecl_c.feeeddate,
			feeammunt=:mbfeoprtfeecl_c.feeammunt,
			sapsrate=:mbfeoprtfeecl_c.sapsrate,
			bktprate=:mbfeoprtfeecl_c.bktprate,
			mothrate=:mbfeoprtfeecl_c.mothrate,
			hvpfeeamt=:mbfeoprtfeecl_c.hvpfeeamt,
			hvpfeecnt=:mbfeoprtfeecl_c.hvpfeecnt,
			singlefeeamt=:mbfeoprtfeecl_c.singlefeeamt,
			singlefeecnt=:mbfeoprtfeecl_c.singlefeecnt,
			infofeeamt=:mbfeoprtfeecl_c.infofeeamt,
			infofeecnt=:mbfeoprtfeecl_c.infofeecnt,
			feeacno=:mbfeoprtfeecl_c.feeacno,
			printno=:mbfeoprtfeecl_c.printno
	WHERE rowid=:mbfeoprtfeecl_c.rowid;
	if ( sqlca.sqlcode && sqlca.sqlcode != 1403 ){
		sprintf(acErrMsg,"UPDATE mbfeoprtfeecl error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D105" );
		return CM_SQLCODE;
	}

	return 0;
}


int Mbfeoprtfeecl_Del_Upd(struct mbfeoprtfeecl_c mbfeoprtfeecl_c , char * reply  ){

	EXEC SQL DELETE FROM mbfeoprtfeecl WHERE rowid=:mbfeoprtfeecl_c.rowid;
	if ( sqlca.sqlcode ){
		sprintf(acErrMsg,"DELETE mbfeoprtfeecl error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D105" );
		return CM_SQLCODE;
	}

	return 0;
}

int Mbfeoprtfeecl_Clo_Upd( ){
	EXEC SQL CLOSE upd_mbfeoprtfeecl;
	return 0;
}

/*****************************************************************************/
/****                              增加函数部分                           ****/
/*****************************************************************************/
int Mbfeoprtfeecl_Ins( struct mbfeoprtfeecl_c mbfeoprtfeecl_c , char * reply ){
	int ret;

	EXEC SQL INSERT INTO mbfeoprtfeecl VALUES (:mbfeoprtfeecl_c.consigndate,
			:mbfeoprtfeecl_c.rdficenter,
			:mbfeoprtfeecl_c.feebkcode,
			:mbfeoprtfeecl_c.feebgdate,
			:mbfeoprtfeecl_c.feeeddate,
			:mbfeoprtfeecl_c.feeammunt,
			:mbfeoprtfeecl_c.sapsrate,
			:mbfeoprtfeecl_c.bktprate,
			:mbfeoprtfeecl_c.mothrate,
			:mbfeoprtfeecl_c.hvpfeeamt,
			:mbfeoprtfeecl_c.hvpfeecnt,
			:mbfeoprtfeecl_c.singlefeeamt,
			:mbfeoprtfeecl_c.singlefeecnt,
			:mbfeoprtfeecl_c.infofeeamt,
			:mbfeoprtfeecl_c.infofeecnt,
			:mbfeoprtfeecl_c.feeacno,
			:mbfeoprtfeecl_c.printno);
	if ( sqlca.sqlcode && sqlca.sqlcode != -1 )
	{
		sprintf(acErrMsg,"INSERT mbfeoprtfeecl error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D107" );
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == -1 )
	{
		sprintf(acErrMsg,"INSERT mbfeoprtfeecl error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D108" );
		return CM_SQLCODE;
	}

	return 0;
}
