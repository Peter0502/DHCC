#include<stdio.h>
#include<varargs.h>

#define EXTERN
#include"global.h"


EXEC SQL INCLUDE SQLCA;
#include"hv_chkmrhis_c.h"
#define CM_SQLCODE sqlca.sqlcode==1403?100:(sqlca.sqlcode==-1?-239:sqlca.sqlcode)

int hv_chkmrhis_con ( struct hv_chkmrhis_c , char *);
int put_mystery( char *, char * );
char *zip_tail(char *s);
static void zip_struct(struct hv_chkmrhis_c* ps){
	zip_tail(ps->rowid);
	zip_tail(ps->ccpc_no);
	zip_tail(ps->send_dtl);
	zip_tail(ps->recevice_dtl);
	zip_tail(ps->online_dtl);
}
int Hv_chkmrhis_Debug(struct hv_chkmrhis_c *ps){
	vtcp_log("hv_chkmrhis_c.rowid=[%s]\n",ps->rowid);
	vtcp_log("hv_chkmrhis_c.tx_date=[%ld]\n",ps->tx_date);
	vtcp_log("hv_chkmrhis_c.ccpc_no=[%s]\n",ps->ccpc_no);
	vtcp_log("hv_chkmrhis_c.send_cnt=[%ld]\n",ps->send_cnt);
	vtcp_log("hv_chkmrhis_c.send_amt=[%f]\n",ps->send_amt);
	vtcp_log("hv_chkmrhis_c.send_item=[%ld]\n",ps->send_item);
	vtcp_log("hv_chkmrhis_c.send_dtl=[%s]\n",ps->send_dtl);
	vtcp_log("hv_chkmrhis_c.recevice_cnt=[%ld]\n",ps->recevice_cnt);
	vtcp_log("hv_chkmrhis_c.recevice_amt=[%f]\n",ps->recevice_amt);
	vtcp_log("hv_chkmrhis_c.recevice_item=[%ld]\n",ps->recevice_item);
	vtcp_log("hv_chkmrhis_c.recevice_dtl=[%s]\n",ps->recevice_dtl);
	vtcp_log("hv_chkmrhis_c.online_cnt=[%ld]\n",ps->online_cnt);
	vtcp_log("hv_chkmrhis_c.online_amt=[%f]\n",ps->online_amt);
	vtcp_log("hv_chkmrhis_c.online_item=[%ld]\n",ps->online_item);
	vtcp_log("hv_chkmrhis_c.online_dtl=[%s]\n",ps->online_dtl);
	return(0);
}
/*****************************************************************************/
/****                              查询函数部分[]                       ****/
/*****************************************************************************/
int Hv_chkmrhis_Sel(reply,hv_chkmrhis_c,fmtstr,va_alist)
char    *reply;
struct  hv_chkmrhis_c *hv_chkmrhis_c;
char    *fmtstr;
va_dcl
{
	int   ret;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	ret = Hv_chkmrhis_Dec_Sel( reply , "%s" , wherelist );
	if (ret){
		WRITEMSG
		return ret;
	}
	ret = Hv_chkmrhis_Fet_Sel( hv_chkmrhis_c , reply );
	if (ret){
		WRITEMSG
		return ret;
	}

	Hv_chkmrhis_Clo_Sel();

	return 0;
}



char *key_strcat(char *,char *);
int Hv_chkmrhis_Dec_Sel ( reply , fmtstr , va_alist )
char    *reply;
char    *fmtstr;
va_dcl
{
	EXEC    SQL BEGIN   DECLARE SECTION;
		char    comm[1000];
	EXEC    SQL END     DECLARE SECTION;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	sprintf ( comm ," SELECT rowid,hv_chkmrhis.* FROM hv_chkmrhis WHERE  ");
	key_strcat(comm,wherelist);

	vtcp_log("%s,%d,SQLSTR=[%s]\n",__FILE__,__LINE__,comm);
	sqlca.sqlcode=0;
	EXEC SQL PREPARE hv_chkmrhis_sel FROM :comm;
	EXEC SQL DECLARE sel_hv_chkmrhis CURSOR FOR hv_chkmrhis_sel;

	EXEC SQL OPEN sel_hv_chkmrhis;
	if (sqlca.sqlcode){
		sprintf(acErrMsg,"OPEN hv_chkmrhis error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D102" );
		return CM_SQLCODE;
	}

	return 0;
}

int Hv_chkmrhis_Fet_Sel ( struct hv_chkmrhis_c *hv_chkmrhis_c , char * reply )
{

	int   ret;

	EXEC SQL FETCH sel_hv_chkmrhis INTO :hv_chkmrhis_c;
	if (sqlca.sqlcode&&sqlca.sqlcode!=1403){
		sprintf(acErrMsg,"Fetch hv_chkmrhis error!!! %d",sqlca.sqlcode);
		WRITEMSG
		strcpy (reply,"D103");
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == 1403 ){
		sprintf(acErrMsg,"Fetch hv_chkmrhis finished!!! %d",sqlca.sqlcode);
		WRITEMSG
		strcpy (reply,"D104");
		return CM_SQLCODE;
	}
	zip_struct(hv_chkmrhis_c);

	return 0;
}

int Hv_chkmrhis_Clo_Sel (){
	EXEC SQL CLOSE sel_hv_chkmrhis;
	return 0;
}

/*****************************************************************************/
/****                              修改函数部分                           ****/
/*****************************************************************************/
int Hv_chkmrhis_Dec_Upd( reply , fmtstr , va_alist)
char    *reply;
char    *fmtstr;
va_dcl
{
	EXEC    SQL BEGIN   DECLARE SECTION;
		char    comm[1000];
	EXEC    SQL END     DECLARE SECTION;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	sprintf ( comm , "SELECT rowid,hv_chkmrhis.* FROM hv_chkmrhis WHERE  ");
	key_strcat(comm,wherelist);
	strcat(comm," FOR UPDATE WAIT 5 ");
	vtcp_log("%s,%d,SQLSTR=[%s]\n",__FILE__,__LINE__,comm);
	sqlca.sqlcode=0;
	EXEC SQL PREPARE hv_chkmrhis_upd FROM :comm;

	EXEC SQL DECLARE upd_hv_chkmrhis CURSOR FOR hv_chkmrhis_upd;

	EXEC SQL OPEN upd_hv_chkmrhis;
	if (sqlca.sqlcode){
		sprintf(acErrMsg,"open hv_chkmrhis error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D102" );
		return CM_SQLCODE;
	}

	return 0;
}

int Hv_chkmrhis_Fet_Upd( struct hv_chkmrhis_c *hv_chkmrhis_c , char * reply ){
	int   ret;

	EXEC SQL FETCH upd_hv_chkmrhis INTO :hv_chkmrhis_c;
	if ( sqlca.sqlcode && sqlca.sqlcode!=1403 ){
		sprintf(acErrMsg,"FETCH upd hv_chkmrhis error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D103" );
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == 1403 ){
		sprintf(acErrMsg,"FETCH hv_chkmrhis finished %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D104" );
		return CM_SQLCODE;
	}
	zip_struct(hv_chkmrhis_c);

	return 0;
}

int Hv_chkmrhis_Upd_Upd( struct hv_chkmrhis_c hv_chkmrhis_c , char * reply){
	int ret;

	EXEC SQL UPDATE hv_chkmrhis SET tx_date=:hv_chkmrhis_c.tx_date,
			ccpc_no=:hv_chkmrhis_c.ccpc_no,
			send_cnt=:hv_chkmrhis_c.send_cnt,
			send_amt=:hv_chkmrhis_c.send_amt,
			send_item=:hv_chkmrhis_c.send_item,
			send_dtl=:hv_chkmrhis_c.send_dtl,
			recevice_cnt=:hv_chkmrhis_c.recevice_cnt,
			recevice_amt=:hv_chkmrhis_c.recevice_amt,
			recevice_item=:hv_chkmrhis_c.recevice_item,
			recevice_dtl=:hv_chkmrhis_c.recevice_dtl,
			online_cnt=:hv_chkmrhis_c.online_cnt,
			online_amt=:hv_chkmrhis_c.online_amt,
			online_item=:hv_chkmrhis_c.online_item,
			online_dtl=:hv_chkmrhis_c.online_dtl
	WHERE rowid=:hv_chkmrhis_c.rowid;
	if ( sqlca.sqlcode && sqlca.sqlcode != 1403 ){
		sprintf(acErrMsg,"UPDATE hv_chkmrhis error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D105" );
		return CM_SQLCODE;
	}

	return 0;
}


int Hv_chkmrhis_Del_Upd(struct hv_chkmrhis_c hv_chkmrhis_c , char * reply  ){

	EXEC SQL DELETE FROM hv_chkmrhis WHERE rowid=:hv_chkmrhis_c.rowid;
	if ( sqlca.sqlcode ){
		sprintf(acErrMsg,"DELETE hv_chkmrhis error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D105" );
		return CM_SQLCODE;
	}

	return 0;
}

int Hv_chkmrhis_Clo_Upd( ){
	EXEC SQL CLOSE upd_hv_chkmrhis;
	return 0;
}

/*****************************************************************************/
/****                              增加函数部分                           ****/
/*****************************************************************************/
int Hv_chkmrhis_Ins( struct hv_chkmrhis_c hv_chkmrhis_c , char * reply ){
	int ret;

	EXEC SQL INSERT INTO hv_chkmrhis VALUES (:hv_chkmrhis_c.tx_date,
			:hv_chkmrhis_c.ccpc_no,
			:hv_chkmrhis_c.send_cnt,
			:hv_chkmrhis_c.send_amt,
			:hv_chkmrhis_c.send_item,
			:hv_chkmrhis_c.send_dtl,
			:hv_chkmrhis_c.recevice_cnt,
			:hv_chkmrhis_c.recevice_amt,
			:hv_chkmrhis_c.recevice_item,
			:hv_chkmrhis_c.recevice_dtl,
			:hv_chkmrhis_c.online_cnt,
			:hv_chkmrhis_c.online_amt,
			:hv_chkmrhis_c.online_item,
			:hv_chkmrhis_c.online_dtl);
	if ( sqlca.sqlcode && sqlca.sqlcode != -1 )
	{
		sprintf(acErrMsg,"INSERT hv_chkmrhis error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D107" );
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == -1 )
	{
		sprintf(acErrMsg,"INSERT hv_chkmrhis error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D108" );
		return CM_SQLCODE;
	}

	return 0;
}
