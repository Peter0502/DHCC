#include<stdio.h>
#include<varargs.h>

#define EXTERN
#include"global.h"


EXEC SQL INCLUDE SQLCA;
#include"card_book_c.h"
#define CM_SQLCODE sqlca.sqlcode==1403?100:(sqlca.sqlcode==-1?-239:sqlca.sqlcode)

int card_book_con ( struct card_book_c , char *);
int put_mystery( char *, char * );
char *zip_tail(char *s);
static void zip_struct(struct card_book_c* ps){
	zip_tail(ps->rowid);
	zip_tail(ps->mdm_code);
	zip_tail(ps->beg_no);
	zip_tail(ps->end_no);
	zip_tail(ps->br_no);
	zip_tail(ps->tel);
}
int Card_book_Debug(struct card_book_c *ps){
	vtcp_log("card_book_c.rowid=[%s]\n",ps->rowid);
	vtcp_log("card_book_c.mdm_code=[%s]\n",ps->mdm_code);
	vtcp_log("card_book_c.beg_no=[%s]\n",ps->beg_no);
	vtcp_log("card_book_c.end_no=[%s]\n",ps->end_no);
	vtcp_log("card_book_c.cnt=[%ld]\n",ps->cnt);
	vtcp_log("card_book_c.tx_date=[%ld]\n",ps->tx_date);
	vtcp_log("card_book_c.br_no=[%s]\n",ps->br_no);
	vtcp_log("card_book_c.tel=[%s]\n",ps->tel);
	return(0);
}
/*****************************************************************************/
/****                              查询函数部分[]                       ****/
/*****************************************************************************/
int Card_book_Sel(reply,card_book_c,fmtstr,va_alist)
char    *reply;
struct  card_book_c *card_book_c;
char    *fmtstr;
va_dcl
{
	int   ret;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	ret = Card_book_Dec_Sel( reply , "%s" , wherelist );
	if (ret){
		WRITEMSG
		return ret;
	}
	ret = Card_book_Fet_Sel( card_book_c , reply );
	if (ret){
		WRITEMSG
		return ret;
	}

	Card_book_Clo_Sel();

	return 0;
}



char *key_strcat(char *,char *);
int Card_book_Dec_Sel ( reply , fmtstr , va_alist )
char    *reply;
char    *fmtstr;
va_dcl
{
	EXEC    SQL BEGIN   DECLARE SECTION;
		char    comm[1000];
	EXEC    SQL END     DECLARE SECTION;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	sprintf ( comm ," SELECT rowid,card_book.* FROM card_book WHERE  ");
	key_strcat(comm,wherelist);

	vtcp_log("%s,%d,SQLSTR=[%s]\n",__FILE__,__LINE__,comm);
	sqlca.sqlcode=0;
	EXEC SQL PREPARE card_book_sel FROM :comm;
	EXEC SQL DECLARE sel_card_book CURSOR FOR card_book_sel;

	EXEC SQL OPEN sel_card_book;
	if (sqlca.sqlcode){
		sprintf(acErrMsg,"OPEN card_book error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D102" );
		return CM_SQLCODE;
	}

	return 0;
}

int Card_book_Fet_Sel ( struct card_book_c *card_book_c , char * reply )
{

	int   ret;

	EXEC SQL FETCH sel_card_book INTO :card_book_c;
	if (sqlca.sqlcode&&sqlca.sqlcode!=1403){
		sprintf(acErrMsg,"Fetch card_book error!!! %d",sqlca.sqlcode);
		WRITEMSG
		strcpy (reply,"D103");
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == 1403 ){
		sprintf(acErrMsg,"Fetch card_book finished!!! %d",sqlca.sqlcode);
		WRITEMSG
		strcpy (reply,"D104");
		return CM_SQLCODE;
	}
	zip_struct(card_book_c);

	return 0;
}

int Card_book_Clo_Sel (){
	EXEC SQL CLOSE sel_card_book;
	return 0;
}

/*****************************************************************************/
/****                              修改函数部分                           ****/
/*****************************************************************************/
int Card_book_Dec_Upd( reply , fmtstr , va_alist)
char    *reply;
char    *fmtstr;
va_dcl
{
	EXEC    SQL BEGIN   DECLARE SECTION;
		char    comm[1000];
	EXEC    SQL END     DECLARE SECTION;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	sprintf ( comm , "SELECT rowid,card_book.* FROM card_book WHERE  ");
	key_strcat(comm,wherelist);
	strcat(comm," FOR UPDATE WAIT 5 ");
	vtcp_log("%s,%d,SQLSTR=[%s]\n",__FILE__,__LINE__,comm);
	sqlca.sqlcode=0;
	EXEC SQL PREPARE card_book_upd FROM :comm;

	EXEC SQL DECLARE upd_card_book CURSOR FOR card_book_upd;

	EXEC SQL OPEN upd_card_book;
	if (sqlca.sqlcode){
		sprintf(acErrMsg,"open card_book error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D102" );
		return CM_SQLCODE;
	}

	return 0;
}

int Card_book_Fet_Upd( struct card_book_c *card_book_c , char * reply ){
	int   ret;

	EXEC SQL FETCH upd_card_book INTO :card_book_c;
	if ( sqlca.sqlcode && sqlca.sqlcode!=1403 ){
		sprintf(acErrMsg,"FETCH upd card_book error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D103" );
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == 1403 ){
		sprintf(acErrMsg,"FETCH card_book finished %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D104" );
		return CM_SQLCODE;
	}
	zip_struct(card_book_c);

	return 0;
}

int Card_book_Upd_Upd( struct card_book_c card_book_c , char * reply){
	int ret;

	EXEC SQL UPDATE card_book SET mdm_code=:card_book_c.mdm_code,
			beg_no=:card_book_c.beg_no,
			end_no=:card_book_c.end_no,
			cnt=:card_book_c.cnt,
			tx_date=:card_book_c.tx_date,
			br_no=:card_book_c.br_no,
			tel=:card_book_c.tel
	WHERE rowid=:card_book_c.rowid;
	if ( sqlca.sqlcode && sqlca.sqlcode != 1403 ){
		sprintf(acErrMsg,"UPDATE card_book error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D105" );
		return CM_SQLCODE;
	}

	return 0;
}


int Card_book_Del_Upd(struct card_book_c card_book_c , char * reply  ){

	EXEC SQL DELETE FROM card_book WHERE rowid=:card_book_c.rowid;
	if ( sqlca.sqlcode ){
		sprintf(acErrMsg,"DELETE card_book error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D105" );
		return CM_SQLCODE;
	}

	return 0;
}

int Card_book_Clo_Upd( ){
	EXEC SQL CLOSE upd_card_book;
	return 0;
}

/*****************************************************************************/
/****                              增加函数部分                           ****/
/*****************************************************************************/
int Card_book_Ins( struct card_book_c card_book_c , char * reply ){
	int ret;

	EXEC SQL INSERT INTO card_book VALUES (:card_book_c.mdm_code,
			:card_book_c.beg_no,
			:card_book_c.end_no,
			:card_book_c.cnt,
			:card_book_c.tx_date,
			:card_book_c.br_no,
			:card_book_c.tel);
	if ( sqlca.sqlcode && sqlca.sqlcode != -1 )
	{
		sprintf(acErrMsg,"INSERT card_book error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D107" );
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == -1 )
	{
		sprintf(acErrMsg,"INSERT card_book error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D108" );
		return CM_SQLCODE;
	}

	return 0;
}
