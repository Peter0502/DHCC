#include<stdio.h>
#include<varargs.h>

#define EXTERN
#include"global.h"


EXEC SQL INCLUDE SQLCA;
#include"lv_category_c.h"
#define CM_SQLCODE sqlca.sqlcode==1403?100:(sqlca.sqlcode==-1?-239:sqlca.sqlcode)

int lv_category_con ( struct lv_category_c , char *);
int put_mystery( char *, char * );
char *zip_tail(char *s);
static void zip_struct(struct lv_category_c* ps){
	zip_tail(ps->rowid);
	zip_tail(ps->definition);
	zip_tail(ps->category_no);
	zip_tail(ps->name);
	zip_tail(ps->orderno);
	zip_tail(ps->code);
	zip_tail(ps->state);
	zip_tail(ps->remark);
}
int Lv_category_Debug(struct lv_category_c *ps){
	vtcp_log("lv_category_c.rowid=[%s]\n",ps->rowid);
	vtcp_log("lv_category_c.definition=[%s]\n",ps->definition);
	vtcp_log("lv_category_c.category_no=[%s]\n",ps->category_no);
	vtcp_log("lv_category_c.name=[%s]\n",ps->name);
	vtcp_log("lv_category_c.orderno=[%s]\n",ps->orderno);
	vtcp_log("lv_category_c.code=[%s]\n",ps->code);
	vtcp_log("lv_category_c.state=[%s]\n",ps->state);
	vtcp_log("lv_category_c.remark=[%s]\n",ps->remark);
	return(0);
}
/*****************************************************************************/
/****                              查询函数部分[]                       ****/
/*****************************************************************************/
int Lv_category_Sel(reply,lv_category_c,fmtstr,va_alist)
char    *reply;
struct  lv_category_c *lv_category_c;
char    *fmtstr;
va_dcl
{
	int   ret;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	ret = Lv_category_Dec_Sel( reply , "%s" , wherelist );
	if (ret){
		WRITEMSG
		return ret;
	}
	ret = Lv_category_Fet_Sel( lv_category_c , reply );
	if (ret){
		WRITEMSG
		return ret;
	}

	Lv_category_Clo_Sel();

	return 0;
}



char *key_strcat(char *,char *);
int Lv_category_Dec_Sel ( reply , fmtstr , va_alist )
char    *reply;
char    *fmtstr;
va_dcl
{
	EXEC    SQL BEGIN   DECLARE SECTION;
		char    comm[1000];
	EXEC    SQL END     DECLARE SECTION;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	sprintf ( comm ," SELECT rowid,lv_category.* FROM lv_category WHERE  ");
	key_strcat(comm,wherelist);

	vtcp_log("%s,%d,SQLSTR=[%s]\n",__FILE__,__LINE__,comm);
	sqlca.sqlcode=0;
	EXEC SQL PREPARE lv_category_sel FROM :comm;
	EXEC SQL DECLARE sel_lv_category CURSOR FOR lv_category_sel;

	EXEC SQL OPEN sel_lv_category;
	if (sqlca.sqlcode){
		sprintf(acErrMsg,"OPEN lv_category error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D102" );
		return CM_SQLCODE;
	}

	return 0;
}

int Lv_category_Fet_Sel ( struct lv_category_c *lv_category_c , char * reply )
{

	int   ret;

	EXEC SQL FETCH sel_lv_category INTO :lv_category_c;
	if (sqlca.sqlcode&&sqlca.sqlcode!=1403){
		sprintf(acErrMsg,"Fetch lv_category error!!! %d",sqlca.sqlcode);
		WRITEMSG
		strcpy (reply,"D103");
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == 1403 ){
		sprintf(acErrMsg,"Fetch lv_category finished!!! %d",sqlca.sqlcode);
		WRITEMSG
		strcpy (reply,"D104");
		return CM_SQLCODE;
	}
	zip_struct(lv_category_c);

	return 0;
}

int Lv_category_Clo_Sel (){
	EXEC SQL CLOSE sel_lv_category;
	return 0;
}

/*****************************************************************************/
/****                              修改函数部分                           ****/
/*****************************************************************************/
int Lv_category_Dec_Upd( reply , fmtstr , va_alist)
char    *reply;
char    *fmtstr;
va_dcl
{
	EXEC    SQL BEGIN   DECLARE SECTION;
		char    comm[1000];
	EXEC    SQL END     DECLARE SECTION;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	sprintf ( comm , "SELECT rowid,lv_category.* FROM lv_category WHERE  ");
	key_strcat(comm,wherelist);
	strcat(comm," FOR UPDATE WAIT 5 ");
	vtcp_log("%s,%d,SQLSTR=[%s]\n",__FILE__,__LINE__,comm);
	sqlca.sqlcode=0;
	EXEC SQL PREPARE lv_category_upd FROM :comm;

	EXEC SQL DECLARE upd_lv_category CURSOR FOR lv_category_upd;

	EXEC SQL OPEN upd_lv_category;
	if (sqlca.sqlcode){
		sprintf(acErrMsg,"open lv_category error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D102" );
		return CM_SQLCODE;
	}

	return 0;
}

int Lv_category_Fet_Upd( struct lv_category_c *lv_category_c , char * reply ){
	int   ret;

	EXEC SQL FETCH upd_lv_category INTO :lv_category_c;
	if ( sqlca.sqlcode && sqlca.sqlcode!=1403 ){
		sprintf(acErrMsg,"FETCH upd lv_category error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D103" );
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == 1403 ){
		sprintf(acErrMsg,"FETCH lv_category finished %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D104" );
		return CM_SQLCODE;
	}
	zip_struct(lv_category_c);

	return 0;
}

int Lv_category_Upd_Upd( struct lv_category_c lv_category_c , char * reply){
	int ret;

	EXEC SQL UPDATE lv_category SET definition=:lv_category_c.definition,
			category_no=:lv_category_c.category_no,
			name=:lv_category_c.name,
			orderno=:lv_category_c.orderno,
			code=:lv_category_c.code,
			state=:lv_category_c.state,
			remark=:lv_category_c.remark
	WHERE rowid=:lv_category_c.rowid;
	if ( sqlca.sqlcode && sqlca.sqlcode != 1403 ){
		sprintf(acErrMsg,"UPDATE lv_category error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D105" );
		return CM_SQLCODE;
	}

	return 0;
}


int Lv_category_Del_Upd(struct lv_category_c lv_category_c , char * reply  ){

	EXEC SQL DELETE FROM lv_category WHERE rowid=:lv_category_c.rowid;
	if ( sqlca.sqlcode ){
		sprintf(acErrMsg,"DELETE lv_category error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D105" );
		return CM_SQLCODE;
	}

	return 0;
}

int Lv_category_Clo_Upd( ){
	EXEC SQL CLOSE upd_lv_category;
	return 0;
}

/*****************************************************************************/
/****                              增加函数部分                           ****/
/*****************************************************************************/
int Lv_category_Ins( struct lv_category_c lv_category_c , char * reply ){
	int ret;

	EXEC SQL INSERT INTO lv_category VALUES (:lv_category_c.definition,
			:lv_category_c.category_no,
			:lv_category_c.name,
			:lv_category_c.orderno,
			:lv_category_c.code,
			:lv_category_c.state,
			:lv_category_c.remark);
	if ( sqlca.sqlcode && sqlca.sqlcode != -1 )
	{
		sprintf(acErrMsg,"INSERT lv_category error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D107" );
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == -1 )
	{
		sprintf(acErrMsg,"INSERT lv_category error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D108" );
		return CM_SQLCODE;
	}

	return 0;
}
