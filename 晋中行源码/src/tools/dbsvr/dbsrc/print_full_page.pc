#include<stdio.h>
#include<varargs.h>

#define EXTERN
#include"global.h"


EXEC SQL INCLUDE SQLCA;
#include"print_full_page_c.h"
#define CM_SQLCODE sqlca.sqlcode==1403?100:(sqlca.sqlcode==-1?-239:sqlca.sqlcode)

int print_full_page_con ( struct print_full_page_c , char *);
int put_mystery( char *, char * );
char *zip_tail(char *s);
static void zip_struct(struct print_full_page_c* ps){
	zip_tail(ps->rowid);
	zip_tail(ps->filler1);
	zip_tail(ps->filler2);
	zip_tail(ps->filler3);
}
int Print_full_page_Debug(struct print_full_page_c *ps){
	vtcp_log("print_full_page_c.rowid=[%s]\n",ps->rowid);
	vtcp_log("print_full_page_c.ac_id=[%ld]\n",ps->ac_id);
	vtcp_log("print_full_page_c.hst_cnt=[%ld]\n",ps->hst_cnt);
	vtcp_log("print_full_page_c.pagecnt=[%ld]\n",ps->pagecnt);
	vtcp_log("print_full_page_c.lst_bal=[%f]\n",ps->lst_bal);
	vtcp_log("print_full_page_c.trace_no=[%ld]\n",ps->trace_no);
	vtcp_log("print_full_page_c.tx_date=[%ld]\n",ps->tx_date);
	vtcp_log("print_full_page_c.tx_time=[%ld]\n",ps->tx_time);
	vtcp_log("print_full_page_c.filler1=[%s]\n",ps->filler1);
	vtcp_log("print_full_page_c.filler2=[%s]\n",ps->filler2);
	vtcp_log("print_full_page_c.filler3=[%s]\n",ps->filler3);
	return(0);
}
/*****************************************************************************/
/****                              查询函数部分[]                       ****/
/*****************************************************************************/
int Print_full_page_Sel(reply,print_full_page_c,fmtstr,va_alist)
char    *reply;
struct  print_full_page_c *print_full_page_c;
char    *fmtstr;
va_dcl
{
	int   ret;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	ret = Print_full_page_Dec_Sel( reply , "%s" , wherelist );
	if (ret){
		WRITEMSG
		return ret;
	}
	ret = Print_full_page_Fet_Sel( print_full_page_c , reply );
	if (ret){
		WRITEMSG
		return ret;
	}

	Print_full_page_Clo_Sel();

	return 0;
}



char *key_strcat(char *,char *);
int Print_full_page_Dec_Sel ( reply , fmtstr , va_alist )
char    *reply;
char    *fmtstr;
va_dcl
{
	EXEC    SQL BEGIN   DECLARE SECTION;
		char    comm[1000];
	EXEC    SQL END     DECLARE SECTION;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	sprintf ( comm ," SELECT rowid,print_full_page.* FROM print_full_page WHERE  ");
	key_strcat(comm,wherelist);

	vtcp_log("%s,%d,SQLSTR=[%s]\n",__FILE__,__LINE__,comm);
	sqlca.sqlcode=0;
	EXEC SQL PREPARE print_full_page_sel FROM :comm;
	EXEC SQL DECLARE sel_print_full_page CURSOR FOR print_full_page_sel;

	EXEC SQL OPEN sel_print_full_page;
	if (sqlca.sqlcode){
		sprintf(acErrMsg,"OPEN print_full_page error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D102" );
		return CM_SQLCODE;
	}

	return 0;
}

int Print_full_page_Fet_Sel ( struct print_full_page_c *print_full_page_c , char * reply )
{

	int   ret;

	EXEC SQL FETCH sel_print_full_page INTO :print_full_page_c;
	if (sqlca.sqlcode&&sqlca.sqlcode!=1403){
		sprintf(acErrMsg,"Fetch print_full_page error!!! %d",sqlca.sqlcode);
		WRITEMSG
		strcpy (reply,"D103");
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == 1403 ){
		sprintf(acErrMsg,"Fetch print_full_page finished!!! %d",sqlca.sqlcode);
		WRITEMSG
		strcpy (reply,"D104");
		return CM_SQLCODE;
	}
	zip_struct(print_full_page_c);

	return 0;
}

int Print_full_page_Clo_Sel (){
	EXEC SQL CLOSE sel_print_full_page;
	return 0;
}

/*****************************************************************************/
/****                              修改函数部分                           ****/
/*****************************************************************************/
int Print_full_page_Dec_Upd( reply , fmtstr , va_alist)
char    *reply;
char    *fmtstr;
va_dcl
{
	EXEC    SQL BEGIN   DECLARE SECTION;
		char    comm[1000];
	EXEC    SQL END     DECLARE SECTION;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	sprintf ( comm , "SELECT rowid,print_full_page.* FROM print_full_page WHERE  ");
	key_strcat(comm,wherelist);
	strcat(comm," FOR UPDATE WAIT 5 ");
	vtcp_log("%s,%d,SQLSTR=[%s]\n",__FILE__,__LINE__,comm);
	sqlca.sqlcode=0;
	EXEC SQL PREPARE print_full_page_upd FROM :comm;

	EXEC SQL DECLARE upd_print_full_page CURSOR FOR print_full_page_upd;

	EXEC SQL OPEN upd_print_full_page;
	if (sqlca.sqlcode){
		sprintf(acErrMsg,"open print_full_page error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D102" );
		return CM_SQLCODE;
	}

	return 0;
}

int Print_full_page_Fet_Upd( struct print_full_page_c *print_full_page_c , char * reply ){
	int   ret;

	EXEC SQL FETCH upd_print_full_page INTO :print_full_page_c;
	if ( sqlca.sqlcode && sqlca.sqlcode!=1403 ){
		sprintf(acErrMsg,"FETCH upd print_full_page error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D103" );
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == 1403 ){
		sprintf(acErrMsg,"FETCH print_full_page finished %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D104" );
		return CM_SQLCODE;
	}
	zip_struct(print_full_page_c);

	return 0;
}

int Print_full_page_Upd_Upd( struct print_full_page_c print_full_page_c , char * reply){
	int ret;

	EXEC SQL UPDATE print_full_page SET ac_id=:print_full_page_c.ac_id,
			hst_cnt=:print_full_page_c.hst_cnt,
			pagecnt=:print_full_page_c.pagecnt,
			lst_bal=:print_full_page_c.lst_bal,
			trace_no=:print_full_page_c.trace_no,
			tx_date=:print_full_page_c.tx_date,
			tx_time=:print_full_page_c.tx_time,
			filler1=:print_full_page_c.filler1,
			filler2=:print_full_page_c.filler2,
			filler3=:print_full_page_c.filler3
	WHERE rowid=:print_full_page_c.rowid;
	if ( sqlca.sqlcode && sqlca.sqlcode != 1403 ){
		sprintf(acErrMsg,"UPDATE print_full_page error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D105" );
		return CM_SQLCODE;
	}

	return 0;
}


int Print_full_page_Del_Upd(struct print_full_page_c print_full_page_c , char * reply  ){

	EXEC SQL DELETE FROM print_full_page WHERE rowid=:print_full_page_c.rowid;
	if ( sqlca.sqlcode ){
		sprintf(acErrMsg,"DELETE print_full_page error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D105" );
		return CM_SQLCODE;
	}

	return 0;
}

int Print_full_page_Clo_Upd( ){
	EXEC SQL CLOSE upd_print_full_page;
	return 0;
}

/*****************************************************************************/
/****                              增加函数部分                           ****/
/*****************************************************************************/
int Print_full_page_Ins( struct print_full_page_c print_full_page_c , char * reply ){
	int ret;

	EXEC SQL INSERT INTO print_full_page VALUES (:print_full_page_c.ac_id,
			:print_full_page_c.hst_cnt,
			:print_full_page_c.pagecnt,
			:print_full_page_c.lst_bal,
			:print_full_page_c.trace_no,
			:print_full_page_c.tx_date,
			:print_full_page_c.tx_time,
			:print_full_page_c.filler1,
			:print_full_page_c.filler2,
			:print_full_page_c.filler3);
	if ( sqlca.sqlcode && sqlca.sqlcode != -1 )
	{
		sprintf(acErrMsg,"INSERT print_full_page error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D107" );
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == -1 )
	{
		sprintf(acErrMsg,"INSERT print_full_page error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D108" );
		return CM_SQLCODE;
	}

	return 0;
}
