#include<stdio.h>
#include<varargs.h>

#define EXTERN
#include"global.h"


EXEC SQL INCLUDE SQLCA;
#include"pay_agent_c.h"
#define CM_SQLCODE sqlca.sqlcode==1403?100:(sqlca.sqlcode==-1?-239:sqlca.sqlcode)

int pay_agent_con ( struct pay_agent_c , char *);
int put_mystery( char *, char * );
char *zip_tail(char *s);
static void zip_struct(struct pay_agent_c* ps){
	zip_tail(ps->rowid);
	zip_tail(ps->unit_no);
	zip_tail(ps->item_no);
	zip_tail(ps->name);
	zip_tail(ps->id_type);
	zip_tail(ps->id_no);
	zip_tail(ps->ac_no);
	zip_tail(ps->remark);
	zip_tail(ps->ckmk_flag);
	zip_tail(ps->sata);
	zip_tail(ps->result);
	zip_tail(ps->result_name);
	zip_tail(ps->cnt);
}
int Pay_agent_Debug(struct pay_agent_c *ps){
	vtcp_log("pay_agent_c.rowid=[%s]\n",ps->rowid);
	vtcp_log("pay_agent_c.unit_no=[%s]\n",ps->unit_no);
	vtcp_log("pay_agent_c.item_no=[%s]\n",ps->item_no);
	vtcp_log("pay_agent_c.name=[%s]\n",ps->name);
	vtcp_log("pay_agent_c.id_type=[%s]\n",ps->id_type);
	vtcp_log("pay_agent_c.id_no=[%s]\n",ps->id_no);
	vtcp_log("pay_agent_c.ac_no=[%s]\n",ps->ac_no);
	vtcp_log("pay_agent_c.trace_no=[%ld]\n",ps->trace_no);
	vtcp_log("pay_agent_c.end_date=[%ld]\n",ps->end_date);
	vtcp_log("pay_agent_c.tx_date=[%ld]\n",ps->tx_date);
	vtcp_log("pay_agent_c.tram=[%f]\n",ps->tram);
	vtcp_log("pay_agent_c.remark=[%s]\n",ps->remark);
	vtcp_log("pay_agent_c.ckmk_flag=[%s]\n",ps->ckmk_flag);
	vtcp_log("pay_agent_c.sata=[%s]\n",ps->sata);
	vtcp_log("pay_agent_c.result=[%s]\n",ps->result);
	vtcp_log("pay_agent_c.result_name=[%s]\n",ps->result_name);
	vtcp_log("pay_agent_c.cnt=[%s]\n",ps->cnt);
	return(0);
}
/*****************************************************************************/
/****                              查询函数部分[]                       ****/
/*****************************************************************************/
int Pay_agent_Sel(reply,pay_agent_c,fmtstr,va_alist)
char    *reply;
struct  pay_agent_c *pay_agent_c;
char    *fmtstr;
va_dcl
{
	int   ret;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	ret = Pay_agent_Dec_Sel( reply , "%s" , wherelist );
	if (ret){
		WRITEMSG
		return ret;
	}
	ret = Pay_agent_Fet_Sel( pay_agent_c , reply );
	if (ret){
		WRITEMSG
		return ret;
	}

	Pay_agent_Clo_Sel();

	return 0;
}



char *key_strcat(char *,char *);
int Pay_agent_Dec_Sel ( reply , fmtstr , va_alist )
char    *reply;
char    *fmtstr;
va_dcl
{
	EXEC    SQL BEGIN   DECLARE SECTION;
		char    comm[1000];
	EXEC    SQL END     DECLARE SECTION;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	sprintf ( comm ," SELECT rowid,pay_agent.* FROM pay_agent WHERE  ");
	key_strcat(comm,wherelist);

	vtcp_log("%s,%d,SQLSTR=[%s]\n",__FILE__,__LINE__,comm);
	sqlca.sqlcode=0;
	EXEC SQL PREPARE pay_agent_sel FROM :comm;
	EXEC SQL DECLARE sel_pay_agent CURSOR FOR pay_agent_sel;

	EXEC SQL OPEN sel_pay_agent;
	if (sqlca.sqlcode){
		sprintf(acErrMsg,"OPEN pay_agent error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D102" );
		return CM_SQLCODE;
	}

	return 0;
}

int Pay_agent_Fet_Sel ( struct pay_agent_c *pay_agent_c , char * reply )
{

	int   ret;

	EXEC SQL FETCH sel_pay_agent INTO :pay_agent_c;
	if (sqlca.sqlcode&&sqlca.sqlcode!=1403){
		sprintf(acErrMsg,"Fetch pay_agent error!!! %d",sqlca.sqlcode);
		WRITEMSG
		strcpy (reply,"D103");
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == 1403 ){
		sprintf(acErrMsg,"Fetch pay_agent finished!!! %d",sqlca.sqlcode);
		WRITEMSG
		strcpy (reply,"D104");
		return CM_SQLCODE;
	}
	zip_struct(pay_agent_c);

	return 0;
}

int Pay_agent_Clo_Sel (){
	EXEC SQL CLOSE sel_pay_agent;
	return 0;
}

/*****************************************************************************/
/****                              修改函数部分                           ****/
/*****************************************************************************/
int Pay_agent_Dec_Upd( reply , fmtstr , va_alist)
char    *reply;
char    *fmtstr;
va_dcl
{
	EXEC    SQL BEGIN   DECLARE SECTION;
		char    comm[1000];
	EXEC    SQL END     DECLARE SECTION;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	sprintf ( comm , "SELECT rowid,pay_agent.* FROM pay_agent WHERE  ");
	key_strcat(comm,wherelist);
	strcat(comm," FOR UPDATE WAIT 5 ");
	vtcp_log("%s,%d,SQLSTR=[%s]\n",__FILE__,__LINE__,comm);
	sqlca.sqlcode=0;
	EXEC SQL PREPARE pay_agent_upd FROM :comm;

	EXEC SQL DECLARE upd_pay_agent CURSOR FOR pay_agent_upd;

	EXEC SQL OPEN upd_pay_agent;
	if (sqlca.sqlcode){
		sprintf(acErrMsg,"open pay_agent error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D102" );
		return CM_SQLCODE;
	}

	return 0;
}

int Pay_agent_Fet_Upd( struct pay_agent_c *pay_agent_c , char * reply ){
	int   ret;

	EXEC SQL FETCH upd_pay_agent INTO :pay_agent_c;
	if ( sqlca.sqlcode && sqlca.sqlcode!=1403 ){
		sprintf(acErrMsg,"FETCH upd pay_agent error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D103" );
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == 1403 ){
		sprintf(acErrMsg,"FETCH pay_agent finished %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D104" );
		return CM_SQLCODE;
	}
	zip_struct(pay_agent_c);

	return 0;
}

int Pay_agent_Upd_Upd( struct pay_agent_c pay_agent_c , char * reply){
	int ret;

	EXEC SQL UPDATE pay_agent SET unit_no=:pay_agent_c.unit_no,
			item_no=:pay_agent_c.item_no,
			name=:pay_agent_c.name,
			id_type=:pay_agent_c.id_type,
			id_no=:pay_agent_c.id_no,
			ac_no=:pay_agent_c.ac_no,
			trace_no=:pay_agent_c.trace_no,
			end_date=:pay_agent_c.end_date,
			tx_date=:pay_agent_c.tx_date,
			tram=:pay_agent_c.tram,
			remark=:pay_agent_c.remark,
			ckmk_flag=:pay_agent_c.ckmk_flag,
			sata=:pay_agent_c.sata,
			result=:pay_agent_c.result,
			result_name=:pay_agent_c.result_name,
			cnt=:pay_agent_c.cnt
	WHERE rowid=:pay_agent_c.rowid;
	if ( sqlca.sqlcode && sqlca.sqlcode != 1403 ){
		sprintf(acErrMsg,"UPDATE pay_agent error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D105" );
		return CM_SQLCODE;
	}

	return 0;
}


int Pay_agent_Del_Upd(struct pay_agent_c pay_agent_c , char * reply  ){

	EXEC SQL DELETE FROM pay_agent WHERE rowid=:pay_agent_c.rowid;
	if ( sqlca.sqlcode ){
		sprintf(acErrMsg,"DELETE pay_agent error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D105" );
		return CM_SQLCODE;
	}

	return 0;
}

int Pay_agent_Clo_Upd( ){
	EXEC SQL CLOSE upd_pay_agent;
	return 0;
}

/*****************************************************************************/
/****                              增加函数部分                           ****/
/*****************************************************************************/
int Pay_agent_Ins( struct pay_agent_c pay_agent_c , char * reply ){
	int ret;

	EXEC SQL INSERT INTO pay_agent VALUES (:pay_agent_c.unit_no,
			:pay_agent_c.item_no,
			:pay_agent_c.name,
			:pay_agent_c.id_type,
			:pay_agent_c.id_no,
			:pay_agent_c.ac_no,
			:pay_agent_c.trace_no,
			:pay_agent_c.end_date,
			:pay_agent_c.tx_date,
			:pay_agent_c.tram,
			:pay_agent_c.remark,
			:pay_agent_c.ckmk_flag,
			:pay_agent_c.sata,
			:pay_agent_c.result,
			:pay_agent_c.result_name,
			:pay_agent_c.cnt);
	if ( sqlca.sqlcode && sqlca.sqlcode != -1 )
	{
		sprintf(acErrMsg,"INSERT pay_agent error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D107" );
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == -1 )
	{
		sprintf(acErrMsg,"INSERT pay_agent error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D108" );
		return CM_SQLCODE;
	}

	return 0;
}
/*****************************************************************************/
/****                              查询函数部分[1]                       ****/
/*****************************************************************************/
int Pay_agent_Sel1(reply,pay_agent_c,fmtstr,va_alist)
char    *reply;
struct  pay_agent_c *pay_agent_c;
char    *fmtstr;
va_dcl
{
	int   ret;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	ret = Pay_agent_Dec_Sel1( reply , "%s" , wherelist );
	if (ret){
		WRITEMSG
		return ret;
	}
	ret = Pay_agent_Fet_Sel1( pay_agent_c , reply );
	if (ret){
		WRITEMSG
		return ret;
	}

	Pay_agent_Clo_Sel1();

	return 0;
}



char *key_strcat(char *,char *);
int Pay_agent_Dec_Sel1 ( reply , fmtstr , va_alist )
char    *reply;
char    *fmtstr;
va_dcl
{
	EXEC    SQL BEGIN   DECLARE SECTION;
		char    comm[1000];
	EXEC    SQL END     DECLARE SECTION;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	sprintf ( comm ," SELECT rowid,pay_agent.* FROM pay_agent WHERE  ");
	key_strcat(comm,wherelist);

	vtcp_log("%s,%d,SQLSTR=[%s]\n",__FILE__,__LINE__,comm);
	sqlca.sqlcode=0;
	EXEC SQL PREPARE pay_agent_sel1 FROM :comm;
	EXEC SQL DECLARE sel_pay_agent1 CURSOR FOR pay_agent_sel1;

	EXEC SQL OPEN sel_pay_agent1;
	if (sqlca.sqlcode){
		sprintf(acErrMsg,"OPEN pay_agent error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D102" );
		return CM_SQLCODE;
	}

	return 0;
}

int Pay_agent_Fet_Sel1 ( struct pay_agent_c *pay_agent_c , char * reply )
{

	int   ret;

	EXEC SQL FETCH sel_pay_agent1 INTO :pay_agent_c;
	if (sqlca.sqlcode&&sqlca.sqlcode!=1403){
		sprintf(acErrMsg,"Fetch pay_agent error!!! %d",sqlca.sqlcode);
		WRITEMSG
		strcpy (reply,"D103");
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == 1403 ){
		sprintf(acErrMsg,"Fetch pay_agent finished!!! %d",sqlca.sqlcode);
		WRITEMSG
		strcpy (reply,"D104");
		return CM_SQLCODE;
	}
	zip_struct(pay_agent_c);

	return 0;
}

int Pay_agent_Clo_Sel1 (){
	EXEC SQL CLOSE sel_pay_agent1;
	return 0;
}

/*****************************************************************************/
/****                              修改函数部分                           ****/
/*****************************************************************************/
int Pay_agent_Dec_Upd1( reply , fmtstr , va_alist)
char    *reply;
char    *fmtstr;
va_dcl
{
	EXEC    SQL BEGIN   DECLARE SECTION;
		char    comm[1000];
	EXEC    SQL END     DECLARE SECTION;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	sprintf ( comm , "SELECT rowid,pay_agent.* FROM pay_agent WHERE  ");
	key_strcat(comm,wherelist);
	strcat(comm," FOR UPDATE WAIT 5 ");
	vtcp_log("%s,%d,SQLSTR=[%s]\n",__FILE__,__LINE__,comm);
	sqlca.sqlcode=0;
	EXEC SQL PREPARE pay_agent_upd1 FROM :comm;

	EXEC SQL DECLARE upd_pay_agent1 CURSOR FOR pay_agent_upd1;

	EXEC SQL OPEN upd_pay_agent1;
	if (sqlca.sqlcode){
		sprintf(acErrMsg,"open pay_agent error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D102" );
		return CM_SQLCODE;
	}

	return 0;
}

int Pay_agent_Fet_Upd1( struct pay_agent_c *pay_agent_c , char * reply ){
	int   ret;

	EXEC SQL FETCH upd_pay_agent1 INTO :pay_agent_c;
	if ( sqlca.sqlcode && sqlca.sqlcode!=1403 ){
		sprintf(acErrMsg,"FETCH upd pay_agent error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D103" );
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == 1403 ){
		sprintf(acErrMsg,"FETCH pay_agent finished %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D104" );
		return CM_SQLCODE;
	}
	zip_struct(pay_agent_c);

	return 0;
}

int Pay_agent_Clo_Upd1( ){
	EXEC SQL CLOSE upd_pay_agent1;
	return 0;
}

/*****************************************************************************/
/****                              查询函数部分[2]                       ****/
/*****************************************************************************/
int Pay_agent_Sel2(reply,pay_agent_c,fmtstr,va_alist)
char    *reply;
struct  pay_agent_c *pay_agent_c;
char    *fmtstr;
va_dcl
{
	int   ret;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	ret = Pay_agent_Dec_Sel2( reply , "%s" , wherelist );
	if (ret){
		WRITEMSG
		return ret;
	}
	ret = Pay_agent_Fet_Sel2( pay_agent_c , reply );
	if (ret){
		WRITEMSG
		return ret;
	}

	Pay_agent_Clo_Sel2();

	return 0;
}



char *key_strcat(char *,char *);
int Pay_agent_Dec_Sel2 ( reply , fmtstr , va_alist )
char    *reply;
char    *fmtstr;
va_dcl
{
	EXEC    SQL BEGIN   DECLARE SECTION;
		char    comm[1000];
	EXEC    SQL END     DECLARE SECTION;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	sprintf ( comm ," SELECT rowid,pay_agent.* FROM pay_agent WHERE  ");
	key_strcat(comm,wherelist);

	vtcp_log("%s,%d,SQLSTR=[%s]\n",__FILE__,__LINE__,comm);
	sqlca.sqlcode=0;
	EXEC SQL PREPARE pay_agent_sel2 FROM :comm;
	EXEC SQL DECLARE sel_pay_agent2 CURSOR FOR pay_agent_sel2;

	EXEC SQL OPEN sel_pay_agent2;
	if (sqlca.sqlcode){
		sprintf(acErrMsg,"OPEN pay_agent error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D102" );
		return CM_SQLCODE;
	}

	return 0;
}

int Pay_agent_Fet_Sel2 ( struct pay_agent_c *pay_agent_c , char * reply )
{

	int   ret;

	EXEC SQL FETCH sel_pay_agent2 INTO :pay_agent_c;
	if (sqlca.sqlcode&&sqlca.sqlcode!=1403){
		sprintf(acErrMsg,"Fetch pay_agent error!!! %d",sqlca.sqlcode);
		WRITEMSG
		strcpy (reply,"D103");
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == 1403 ){
		sprintf(acErrMsg,"Fetch pay_agent finished!!! %d",sqlca.sqlcode);
		WRITEMSG
		strcpy (reply,"D104");
		return CM_SQLCODE;
	}
	zip_struct(pay_agent_c);

	return 0;
}

int Pay_agent_Clo_Sel2 (){
	EXEC SQL CLOSE sel_pay_agent2;
	return 0;
}

/*****************************************************************************/
/****                              修改函数部分                           ****/
/*****************************************************************************/
int Pay_agent_Dec_Upd2( reply , fmtstr , va_alist)
char    *reply;
char    *fmtstr;
va_dcl
{
	EXEC    SQL BEGIN   DECLARE SECTION;
		char    comm[1000];
	EXEC    SQL END     DECLARE SECTION;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	sprintf ( comm , "SELECT rowid,pay_agent.* FROM pay_agent WHERE  ");
	key_strcat(comm,wherelist);
	strcat(comm," FOR UPDATE WAIT 5 ");
	vtcp_log("%s,%d,SQLSTR=[%s]\n",__FILE__,__LINE__,comm);
	sqlca.sqlcode=0;
	EXEC SQL PREPARE pay_agent_upd2 FROM :comm;

	EXEC SQL DECLARE upd_pay_agent2 CURSOR FOR pay_agent_upd2;

	EXEC SQL OPEN upd_pay_agent2;
	if (sqlca.sqlcode){
		sprintf(acErrMsg,"open pay_agent error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D102" );
		return CM_SQLCODE;
	}

	return 0;
}

int Pay_agent_Fet_Upd2( struct pay_agent_c *pay_agent_c , char * reply ){
	int   ret;

	EXEC SQL FETCH upd_pay_agent2 INTO :pay_agent_c;
	if ( sqlca.sqlcode && sqlca.sqlcode!=1403 ){
		sprintf(acErrMsg,"FETCH upd pay_agent error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D103" );
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == 1403 ){
		sprintf(acErrMsg,"FETCH pay_agent finished %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D104" );
		return CM_SQLCODE;
	}
	zip_struct(pay_agent_c);

	return 0;
}

int Pay_agent_Clo_Upd2( ){
	EXEC SQL CLOSE upd_pay_agent2;
	return 0;
}

