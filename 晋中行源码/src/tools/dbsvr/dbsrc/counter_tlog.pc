#include<stdio.h>
#include<varargs.h>

#define EXTERN
#include"global.h"


EXEC SQL INCLUDE SQLCA;
#include"counter_tlog_c.h"
#define CM_SQLCODE sqlca.sqlcode==1403?100:(sqlca.sqlcode==-1?-239:sqlca.sqlcode)

int counter_tlog_con ( struct counter_tlog_c , char *);
int put_mystery( char *, char * );
char *zip_tail(char *s);
static void zip_struct(struct counter_tlog_c* ps){
	zip_tail(ps->rowid);
	zip_tail(ps->main_ac_no);
	zip_tail(ps->dc_ind);
	zip_tail(ps->ct_ind);
	zip_tail(ps->app_ac_no);
}
int Counter_tlog_Debug(struct counter_tlog_c *ps){
	vtcp_log("counter_tlog_c.rowid=[%s]\n",ps->rowid);
	vtcp_log("counter_tlog_c.platform_date=[%ld]\n",ps->platform_date);
	vtcp_log("counter_tlog_c.ptrace_no=[%f]\n",ps->ptrace_no);
	vtcp_log("counter_tlog_c.tx_date=[%ld]\n",ps->tx_date);
	vtcp_log("counter_tlog_c.trace_no=[%ld]\n",ps->trace_no);
	vtcp_log("counter_tlog_c.tx_amt=[%f]\n",ps->tx_amt);
	vtcp_log("counter_tlog_c.main_ac_no=[%s]\n",ps->main_ac_no);
	vtcp_log("counter_tlog_c.dc_ind=[%s]\n",ps->dc_ind);
	vtcp_log("counter_tlog_c.ct_ind=[%s]\n",ps->ct_ind);
	vtcp_log("counter_tlog_c.app_ac_no=[%s]\n",ps->app_ac_no);
	return(0);
}
/*****************************************************************************/
/****                              查询函数部分[]                       ****/
/*****************************************************************************/
int Counter_tlog_Sel(reply,counter_tlog_c,fmtstr,va_alist)
char    *reply;
struct  counter_tlog_c *counter_tlog_c;
char    *fmtstr;
va_dcl
{
	int   ret;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	ret = Counter_tlog_Dec_Sel( reply , "%s" , wherelist );
	if (ret){
		WRITEMSG
		return ret;
	}
	ret = Counter_tlog_Fet_Sel( counter_tlog_c , reply );
	if (ret){
		WRITEMSG
		return ret;
	}

	Counter_tlog_Clo_Sel();

	return 0;
}



char *key_strcat(char *,char *);
int Counter_tlog_Dec_Sel ( reply , fmtstr , va_alist )
char    *reply;
char    *fmtstr;
va_dcl
{
	EXEC    SQL BEGIN   DECLARE SECTION;
		char    comm[1000];
	EXEC    SQL END     DECLARE SECTION;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	sprintf ( comm ," SELECT rowid,counter_tlog.* FROM counter_tlog WHERE  ");
	key_strcat(comm,wherelist);

	vtcp_log("%s,%d,SQLSTR=[%s]\n",__FILE__,__LINE__,comm);
	sqlca.sqlcode=0;
	EXEC SQL PREPARE counter_tlog_sel FROM :comm;
	EXEC SQL DECLARE sel_counter_tlog CURSOR FOR counter_tlog_sel;

	EXEC SQL OPEN sel_counter_tlog;
	if (sqlca.sqlcode){
		sprintf(acErrMsg,"OPEN counter_tlog error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D102" );
		return CM_SQLCODE;
	}

	return 0;
}

int Counter_tlog_Fet_Sel ( struct counter_tlog_c *counter_tlog_c , char * reply )
{

	int   ret;

	EXEC SQL FETCH sel_counter_tlog INTO :counter_tlog_c;
	if (sqlca.sqlcode&&sqlca.sqlcode!=1403){
		sprintf(acErrMsg,"Fetch counter_tlog error!!! %d",sqlca.sqlcode);
		WRITEMSG
		strcpy (reply,"D103");
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == 1403 ){
		sprintf(acErrMsg,"Fetch counter_tlog finished!!! %d",sqlca.sqlcode);
		WRITEMSG
		strcpy (reply,"D104");
		return CM_SQLCODE;
	}
	zip_struct(counter_tlog_c);

	return 0;
}

int Counter_tlog_Clo_Sel (){
	EXEC SQL CLOSE sel_counter_tlog;
	return 0;
}

/*****************************************************************************/
/****                              修改函数部分                           ****/
/*****************************************************************************/
int Counter_tlog_Dec_Upd( reply , fmtstr , va_alist)
char    *reply;
char    *fmtstr;
va_dcl
{
	EXEC    SQL BEGIN   DECLARE SECTION;
		char    comm[1000];
	EXEC    SQL END     DECLARE SECTION;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	sprintf ( comm , "SELECT rowid,counter_tlog.* FROM counter_tlog WHERE  ");
	key_strcat(comm,wherelist);
	strcat(comm," FOR UPDATE WAIT 5 ");
	vtcp_log("%s,%d,SQLSTR=[%s]\n",__FILE__,__LINE__,comm);
	sqlca.sqlcode=0;
	EXEC SQL PREPARE counter_tlog_upd FROM :comm;

	EXEC SQL DECLARE upd_counter_tlog CURSOR FOR counter_tlog_upd;

	EXEC SQL OPEN upd_counter_tlog;
	if (sqlca.sqlcode){
		sprintf(acErrMsg,"open counter_tlog error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D102" );
		return CM_SQLCODE;
	}

	return 0;
}

int Counter_tlog_Fet_Upd( struct counter_tlog_c *counter_tlog_c , char * reply ){
	int   ret;

	EXEC SQL FETCH upd_counter_tlog INTO :counter_tlog_c;
	if ( sqlca.sqlcode && sqlca.sqlcode!=1403 ){
		sprintf(acErrMsg,"FETCH upd counter_tlog error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D103" );
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == 1403 ){
		sprintf(acErrMsg,"FETCH counter_tlog finished %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D104" );
		return CM_SQLCODE;
	}
	zip_struct(counter_tlog_c);

	return 0;
}

int Counter_tlog_Upd_Upd( struct counter_tlog_c counter_tlog_c , char * reply){
	int ret;

	EXEC SQL UPDATE counter_tlog SET platform_date=:counter_tlog_c.platform_date,
			ptrace_no=:counter_tlog_c.ptrace_no,
			tx_date=:counter_tlog_c.tx_date,
			trace_no=:counter_tlog_c.trace_no,
			tx_amt=:counter_tlog_c.tx_amt,
			main_ac_no=:counter_tlog_c.main_ac_no,
			dc_ind=:counter_tlog_c.dc_ind,
			ct_ind=:counter_tlog_c.ct_ind,
			app_ac_no=:counter_tlog_c.app_ac_no
	WHERE rowid=:counter_tlog_c.rowid;
	if ( sqlca.sqlcode && sqlca.sqlcode != 1403 ){
		sprintf(acErrMsg,"UPDATE counter_tlog error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D105" );
		return CM_SQLCODE;
	}

	return 0;
}


int Counter_tlog_Del_Upd(struct counter_tlog_c counter_tlog_c , char * reply  ){

	EXEC SQL DELETE FROM counter_tlog WHERE rowid=:counter_tlog_c.rowid;
	if ( sqlca.sqlcode ){
		sprintf(acErrMsg,"DELETE counter_tlog error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D105" );
		return CM_SQLCODE;
	}

	return 0;
}

int Counter_tlog_Clo_Upd( ){
	EXEC SQL CLOSE upd_counter_tlog;
	return 0;
}

/*****************************************************************************/
/****                              增加函数部分                           ****/
/*****************************************************************************/
int Counter_tlog_Ins( struct counter_tlog_c counter_tlog_c , char * reply ){
	int ret;

	EXEC SQL INSERT INTO counter_tlog VALUES (:counter_tlog_c.platform_date,
			:counter_tlog_c.ptrace_no,
			:counter_tlog_c.tx_date,
			:counter_tlog_c.trace_no,
			:counter_tlog_c.tx_amt,
			:counter_tlog_c.main_ac_no,
			:counter_tlog_c.dc_ind,
			:counter_tlog_c.ct_ind,
			:counter_tlog_c.app_ac_no);
	if ( sqlca.sqlcode && sqlca.sqlcode != -1 )
	{
		sprintf(acErrMsg,"INSERT counter_tlog error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D107" );
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == -1 )
	{
		sprintf(acErrMsg,"INSERT counter_tlog error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D108" );
		return CM_SQLCODE;
	}

	return 0;
}
