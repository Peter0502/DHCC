#include<stdio.h>
#include<varargs.h>

#define EXTERN
#include"global.h"


EXEC SQL INCLUDE SQLCA;
#include"gl_prdt_dyn_hst_c.h"
#define CM_SQLCODE sqlca.sqlcode==1403?100:(sqlca.sqlcode==-1?-239:sqlca.sqlcode)

int gl_prdt_dyn_hst_con ( struct gl_prdt_dyn_hst_c , char *);
int put_mystery( char *, char * );
char *zip_tail(char *s);
static void zip_struct(struct gl_prdt_dyn_hst_c* ps){
	zip_tail(ps->rowid);
	zip_tail(ps->prdt_cod);
	zip_tail(ps->br_no);
	zip_tail(ps->spe_ind);
}
int Gl_prdt_dyn_hst_Debug(struct gl_prdt_dyn_hst_c *ps){
	vtcp_log("gl_prdt_dyn_hst_c.rowid=[%s]\n",ps->rowid);
	vtcp_log("gl_prdt_dyn_hst_c.date=[%ld]\n",ps->date);
	vtcp_log("gl_prdt_dyn_hst_c.prdt_cod=[%s]\n",ps->prdt_cod);
	vtcp_log("gl_prdt_dyn_hst_c.br_no=[%s]\n",ps->br_no);
	vtcp_log("gl_prdt_dyn_hst_c.cr_bal=[%f]\n",ps->cr_bal);
	vtcp_log("gl_prdt_dyn_hst_c.ac_cnt=[%ld]\n",ps->ac_cnt);
	vtcp_log("gl_prdt_dyn_hst_c.lcd_bal=[%f]\n",ps->lcd_bal);
	vtcp_log("gl_prdt_dyn_hst_c.l_ac_cnt=[%ld]\n",ps->l_ac_cnt);
	vtcp_log("gl_prdt_dyn_hst_c.d_opn_cnt=[%ld]\n",ps->d_opn_cnt);
	vtcp_log("gl_prdt_dyn_hst_c.d_cls_cnt=[%ld]\n",ps->d_cls_cnt);
	vtcp_log("gl_prdt_dyn_hst_c.rdd_cnt=[%ld]\n",ps->rdd_cnt);
	vtcp_log("gl_prdt_dyn_hst_c.rcd_cnt=[%ld]\n",ps->rcd_cnt);
	vtcp_log("gl_prdt_dyn_hst_c.rdd_amt=[%f]\n",ps->rdd_amt);
	vtcp_log("gl_prdt_dyn_hst_c.rcd_amt=[%f]\n",ps->rcd_amt);
	vtcp_log("gl_prdt_dyn_hst_c.cdd_cnt=[%ld]\n",ps->cdd_cnt);
	vtcp_log("gl_prdt_dyn_hst_c.ccd_cnt=[%ld]\n",ps->ccd_cnt);
	vtcp_log("gl_prdt_dyn_hst_c.cdd_amt=[%f]\n",ps->cdd_amt);
	vtcp_log("gl_prdt_dyn_hst_c.ccd_amt=[%f]\n",ps->ccd_amt);
	vtcp_log("gl_prdt_dyn_hst_c.spe_ind=[%s]\n",ps->spe_ind);
	return(0);
}
/*****************************************************************************/
/****                              查询函数部分[]                       ****/
/*****************************************************************************/
int Gl_prdt_dyn_hst_Sel(reply,gl_prdt_dyn_hst_c,fmtstr,va_alist)
char    *reply;
struct  gl_prdt_dyn_hst_c *gl_prdt_dyn_hst_c;
char    *fmtstr;
va_dcl
{
	int   ret;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	ret = Gl_prdt_dyn_hst_Dec_Sel( reply , "%s" , wherelist );
	if (ret){
		WRITEMSG
		return ret;
	}
	ret = Gl_prdt_dyn_hst_Fet_Sel( gl_prdt_dyn_hst_c , reply );
	if (ret){
		WRITEMSG
		return ret;
	}

	Gl_prdt_dyn_hst_Clo_Sel();

	return 0;
}



char *key_strcat(char *,char *);
int Gl_prdt_dyn_hst_Dec_Sel ( reply , fmtstr , va_alist )
char    *reply;
char    *fmtstr;
va_dcl
{
	EXEC    SQL BEGIN   DECLARE SECTION;
		char    comm[1000];
	EXEC    SQL END     DECLARE SECTION;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	sprintf ( comm ," SELECT rowid,gl_prdt_dyn_hst.* FROM gl_prdt_dyn_hst WHERE  ");
	key_strcat(comm,wherelist);

	vtcp_log("%s,%d,SQLSTR=[%s]\n",__FILE__,__LINE__,comm);
	sqlca.sqlcode=0;
	EXEC SQL PREPARE gl_prdt_dyn_hst_sel FROM :comm;
	EXEC SQL DECLARE sel_gl_prdt_dyn_hst CURSOR FOR gl_prdt_dyn_hst_sel;

	EXEC SQL OPEN sel_gl_prdt_dyn_hst;
	if (sqlca.sqlcode){
		sprintf(acErrMsg,"OPEN gl_prdt_dyn_hst error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D102" );
		return CM_SQLCODE;
	}

	return 0;
}

int Gl_prdt_dyn_hst_Fet_Sel ( struct gl_prdt_dyn_hst_c *gl_prdt_dyn_hst_c , char * reply )
{

	int   ret;

	EXEC SQL FETCH sel_gl_prdt_dyn_hst INTO :gl_prdt_dyn_hst_c;
	if (sqlca.sqlcode&&sqlca.sqlcode!=1403){
		sprintf(acErrMsg,"Fetch gl_prdt_dyn_hst error!!! %d",sqlca.sqlcode);
		WRITEMSG
		strcpy (reply,"D103");
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == 1403 ){
		sprintf(acErrMsg,"Fetch gl_prdt_dyn_hst finished!!! %d",sqlca.sqlcode);
		WRITEMSG
		strcpy (reply,"D104");
		return CM_SQLCODE;
	}
	zip_struct(gl_prdt_dyn_hst_c);

	return 0;
}

int Gl_prdt_dyn_hst_Clo_Sel (){
	EXEC SQL CLOSE sel_gl_prdt_dyn_hst;
	return 0;
}

/*****************************************************************************/
/****                              修改函数部分                           ****/
/*****************************************************************************/
int Gl_prdt_dyn_hst_Dec_Upd( reply , fmtstr , va_alist)
char    *reply;
char    *fmtstr;
va_dcl
{
	EXEC    SQL BEGIN   DECLARE SECTION;
		char    comm[1000];
	EXEC    SQL END     DECLARE SECTION;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	sprintf ( comm , "SELECT rowid,gl_prdt_dyn_hst.* FROM gl_prdt_dyn_hst WHERE  ");
	key_strcat(comm,wherelist);
	strcat(comm," FOR UPDATE WAIT 5 ");
	vtcp_log("%s,%d,SQLSTR=[%s]\n",__FILE__,__LINE__,comm);
	sqlca.sqlcode=0;
	EXEC SQL PREPARE gl_prdt_dyn_hst_upd FROM :comm;

	EXEC SQL DECLARE upd_gl_prdt_dyn_hst CURSOR FOR gl_prdt_dyn_hst_upd;

	EXEC SQL OPEN upd_gl_prdt_dyn_hst;
	if (sqlca.sqlcode){
		sprintf(acErrMsg,"open gl_prdt_dyn_hst error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D102" );
		return CM_SQLCODE;
	}

	return 0;
}

int Gl_prdt_dyn_hst_Fet_Upd( struct gl_prdt_dyn_hst_c *gl_prdt_dyn_hst_c , char * reply ){
	int   ret;

	EXEC SQL FETCH upd_gl_prdt_dyn_hst INTO :gl_prdt_dyn_hst_c;
	if ( sqlca.sqlcode && sqlca.sqlcode!=1403 ){
		sprintf(acErrMsg,"FETCH upd gl_prdt_dyn_hst error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D103" );
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == 1403 ){
		sprintf(acErrMsg,"FETCH gl_prdt_dyn_hst finished %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D104" );
		return CM_SQLCODE;
	}
	zip_struct(gl_prdt_dyn_hst_c);

	return 0;
}

int Gl_prdt_dyn_hst_Upd_Upd( struct gl_prdt_dyn_hst_c gl_prdt_dyn_hst_c , char * reply){
	int ret;

	EXEC SQL UPDATE gl_prdt_dyn_hst SET "date"=:gl_prdt_dyn_hst_c.date,
			prdt_cod=:gl_prdt_dyn_hst_c.prdt_cod,
			br_no=:gl_prdt_dyn_hst_c.br_no,
			cr_bal=:gl_prdt_dyn_hst_c.cr_bal,
			ac_cnt=:gl_prdt_dyn_hst_c.ac_cnt,
			lcd_bal=:gl_prdt_dyn_hst_c.lcd_bal,
			l_ac_cnt=:gl_prdt_dyn_hst_c.l_ac_cnt,
			d_opn_cnt=:gl_prdt_dyn_hst_c.d_opn_cnt,
			d_cls_cnt=:gl_prdt_dyn_hst_c.d_cls_cnt,
			rdd_cnt=:gl_prdt_dyn_hst_c.rdd_cnt,
			rcd_cnt=:gl_prdt_dyn_hst_c.rcd_cnt,
			rdd_amt=:gl_prdt_dyn_hst_c.rdd_amt,
			rcd_amt=:gl_prdt_dyn_hst_c.rcd_amt,
			cdd_cnt=:gl_prdt_dyn_hst_c.cdd_cnt,
			ccd_cnt=:gl_prdt_dyn_hst_c.ccd_cnt,
			cdd_amt=:gl_prdt_dyn_hst_c.cdd_amt,
			ccd_amt=:gl_prdt_dyn_hst_c.ccd_amt,
			spe_ind=:gl_prdt_dyn_hst_c.spe_ind
	WHERE rowid=:gl_prdt_dyn_hst_c.rowid;
	if ( sqlca.sqlcode && sqlca.sqlcode != 1403 ){
		sprintf(acErrMsg,"UPDATE gl_prdt_dyn_hst error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D105" );
		return CM_SQLCODE;
	}

	return 0;
}


int Gl_prdt_dyn_hst_Del_Upd(struct gl_prdt_dyn_hst_c gl_prdt_dyn_hst_c , char * reply  ){

	EXEC SQL DELETE FROM gl_prdt_dyn_hst WHERE rowid=:gl_prdt_dyn_hst_c.rowid;
	if ( sqlca.sqlcode ){
		sprintf(acErrMsg,"DELETE gl_prdt_dyn_hst error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D105" );
		return CM_SQLCODE;
	}

	return 0;
}

int Gl_prdt_dyn_hst_Clo_Upd( ){
	EXEC SQL CLOSE upd_gl_prdt_dyn_hst;
	return 0;
}

/*****************************************************************************/
/****                              增加函数部分                           ****/
/*****************************************************************************/
int Gl_prdt_dyn_hst_Ins( struct gl_prdt_dyn_hst_c gl_prdt_dyn_hst_c , char * reply ){
	int ret;

	EXEC SQL INSERT INTO gl_prdt_dyn_hst VALUES (:gl_prdt_dyn_hst_c.date,
			:gl_prdt_dyn_hst_c.prdt_cod,
			:gl_prdt_dyn_hst_c.br_no,
			:gl_prdt_dyn_hst_c.cr_bal,
			:gl_prdt_dyn_hst_c.ac_cnt,
			:gl_prdt_dyn_hst_c.lcd_bal,
			:gl_prdt_dyn_hst_c.l_ac_cnt,
			:gl_prdt_dyn_hst_c.d_opn_cnt,
			:gl_prdt_dyn_hst_c.d_cls_cnt,
			:gl_prdt_dyn_hst_c.rdd_cnt,
			:gl_prdt_dyn_hst_c.rcd_cnt,
			:gl_prdt_dyn_hst_c.rdd_amt,
			:gl_prdt_dyn_hst_c.rcd_amt,
			:gl_prdt_dyn_hst_c.cdd_cnt,
			:gl_prdt_dyn_hst_c.ccd_cnt,
			:gl_prdt_dyn_hst_c.cdd_amt,
			:gl_prdt_dyn_hst_c.ccd_amt,
			:gl_prdt_dyn_hst_c.spe_ind);
	if ( sqlca.sqlcode && sqlca.sqlcode != -1 )
	{
		sprintf(acErrMsg,"INSERT gl_prdt_dyn_hst error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D107" );
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == -1 )
	{
		sprintf(acErrMsg,"INSERT gl_prdt_dyn_hst error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D108" );
		return CM_SQLCODE;
	}

	return 0;
}
