#include<stdio.h>
#include<varargs.h>

#define EXTERN
#include"global.h"


EXEC SQL INCLUDE SQLCA;
#include"hv_chkmrdtl_c.h"
#define CM_SQLCODE sqlca.sqlcode==1403?100:(sqlca.sqlcode==-1?-239:sqlca.sqlcode)

int hv_chkmrdtl_con ( struct hv_chkmrdtl_c , char *);
int put_mystery( char *, char * );
char *zip_tail(char *s);
static void zip_struct(struct hv_chkmrdtl_c* ps){
	zip_tail(ps->rowid);
	zip_tail(ps->cmtno);
	zip_tail(ps->brf);
}
int Hv_chkmrdtl_Debug(struct hv_chkmrdtl_c *ps){
	vtcp_log("hv_chkmrdtl_c.rowid=[%s]\n",ps->rowid);
	vtcp_log("hv_chkmrdtl_c.tx_date=[%ld]\n",ps->tx_date);
	vtcp_log("hv_chkmrdtl_c.cmtno=[%s]\n",ps->cmtno);
	vtcp_log("hv_chkmrdtl_c.s_cnt=[%ld]\n",ps->s_cnt);
	vtcp_log("hv_chkmrdtl_c.s_amt=[%f]\n",ps->s_amt);
	vtcp_log("hv_chkmrdtl_c.r_cnt=[%ld]\n",ps->r_cnt);
	vtcp_log("hv_chkmrdtl_c.r_amt=[%f]\n",ps->r_amt);
	vtcp_log("hv_chkmrdtl_c.brf=[%s]\n",ps->brf);
	return(0);
}
/*****************************************************************************/
/****                              查询函数部分[]                       ****/
/*****************************************************************************/
int Hv_chkmrdtl_Sel(reply,hv_chkmrdtl_c,fmtstr,va_alist)
char    *reply;
struct  hv_chkmrdtl_c *hv_chkmrdtl_c;
char    *fmtstr;
va_dcl
{
	int   ret;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	ret = Hv_chkmrdtl_Dec_Sel( reply , "%s" , wherelist );
	if (ret){
		WRITEMSG
		return ret;
	}
	ret = Hv_chkmrdtl_Fet_Sel( hv_chkmrdtl_c , reply );
	if (ret){
		WRITEMSG
		return ret;
	}

	Hv_chkmrdtl_Clo_Sel();

	return 0;
}



char *key_strcat(char *,char *);
int Hv_chkmrdtl_Dec_Sel ( reply , fmtstr , va_alist )
char    *reply;
char    *fmtstr;
va_dcl
{
	EXEC    SQL BEGIN   DECLARE SECTION;
		char    comm[1000];
	EXEC    SQL END     DECLARE SECTION;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	sprintf ( comm ," SELECT rowid,hv_chkmrdtl.* FROM hv_chkmrdtl WHERE  ");
	key_strcat(comm,wherelist);

	vtcp_log("%s,%d,SQLSTR=[%s]\n",__FILE__,__LINE__,comm);
	sqlca.sqlcode=0;
	EXEC SQL PREPARE hv_chkmrdtl_sel FROM :comm;
	EXEC SQL DECLARE sel_hv_chkmrdtl CURSOR FOR hv_chkmrdtl_sel;

	EXEC SQL OPEN sel_hv_chkmrdtl;
	if (sqlca.sqlcode){
		sprintf(acErrMsg,"OPEN hv_chkmrdtl error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D102" );
		return CM_SQLCODE;
	}

	return 0;
}

int Hv_chkmrdtl_Fet_Sel ( struct hv_chkmrdtl_c *hv_chkmrdtl_c , char * reply )
{

	int   ret;

	EXEC SQL FETCH sel_hv_chkmrdtl INTO :hv_chkmrdtl_c;
	if (sqlca.sqlcode&&sqlca.sqlcode!=1403){
		sprintf(acErrMsg,"Fetch hv_chkmrdtl error!!! %d",sqlca.sqlcode);
		WRITEMSG
		strcpy (reply,"D103");
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == 1403 ){
		sprintf(acErrMsg,"Fetch hv_chkmrdtl finished!!! %d",sqlca.sqlcode);
		WRITEMSG
		strcpy (reply,"D104");
		return CM_SQLCODE;
	}
	zip_struct(hv_chkmrdtl_c);

	return 0;
}

int Hv_chkmrdtl_Clo_Sel (){
	EXEC SQL CLOSE sel_hv_chkmrdtl;
	return 0;
}

/*****************************************************************************/
/****                              修改函数部分                           ****/
/*****************************************************************************/
int Hv_chkmrdtl_Dec_Upd( reply , fmtstr , va_alist)
char    *reply;
char    *fmtstr;
va_dcl
{
	EXEC    SQL BEGIN   DECLARE SECTION;
		char    comm[1000];
	EXEC    SQL END     DECLARE SECTION;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	sprintf ( comm , "SELECT rowid,hv_chkmrdtl.* FROM hv_chkmrdtl WHERE  ");
	key_strcat(comm,wherelist);
	strcat(comm," FOR UPDATE WAIT 5 ");
	vtcp_log("%s,%d,SQLSTR=[%s]\n",__FILE__,__LINE__,comm);
	sqlca.sqlcode=0;
	EXEC SQL PREPARE hv_chkmrdtl_upd FROM :comm;

	EXEC SQL DECLARE upd_hv_chkmrdtl CURSOR FOR hv_chkmrdtl_upd;

	EXEC SQL OPEN upd_hv_chkmrdtl;
	if (sqlca.sqlcode){
		sprintf(acErrMsg,"open hv_chkmrdtl error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D102" );
		return CM_SQLCODE;
	}

	return 0;
}

int Hv_chkmrdtl_Fet_Upd( struct hv_chkmrdtl_c *hv_chkmrdtl_c , char * reply ){
	int   ret;

	EXEC SQL FETCH upd_hv_chkmrdtl INTO :hv_chkmrdtl_c;
	if ( sqlca.sqlcode && sqlca.sqlcode!=1403 ){
		sprintf(acErrMsg,"FETCH upd hv_chkmrdtl error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D103" );
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == 1403 ){
		sprintf(acErrMsg,"FETCH hv_chkmrdtl finished %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D104" );
		return CM_SQLCODE;
	}
	zip_struct(hv_chkmrdtl_c);

	return 0;
}

int Hv_chkmrdtl_Upd_Upd( struct hv_chkmrdtl_c hv_chkmrdtl_c , char * reply){
	int ret;

	EXEC SQL UPDATE hv_chkmrdtl SET tx_date=:hv_chkmrdtl_c.tx_date,
			cmtno=:hv_chkmrdtl_c.cmtno,
			s_cnt=:hv_chkmrdtl_c.s_cnt,
			s_amt=:hv_chkmrdtl_c.s_amt,
			r_cnt=:hv_chkmrdtl_c.r_cnt,
			r_amt=:hv_chkmrdtl_c.r_amt,
			brf=:hv_chkmrdtl_c.brf
	WHERE rowid=:hv_chkmrdtl_c.rowid;
	if ( sqlca.sqlcode && sqlca.sqlcode != 1403 ){
		sprintf(acErrMsg,"UPDATE hv_chkmrdtl error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D105" );
		return CM_SQLCODE;
	}

	return 0;
}


int Hv_chkmrdtl_Del_Upd(struct hv_chkmrdtl_c hv_chkmrdtl_c , char * reply  ){

	EXEC SQL DELETE FROM hv_chkmrdtl WHERE rowid=:hv_chkmrdtl_c.rowid;
	if ( sqlca.sqlcode ){
		sprintf(acErrMsg,"DELETE hv_chkmrdtl error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D105" );
		return CM_SQLCODE;
	}

	return 0;
}

int Hv_chkmrdtl_Clo_Upd( ){
	EXEC SQL CLOSE upd_hv_chkmrdtl;
	return 0;
}

/*****************************************************************************/
/****                              增加函数部分                           ****/
/*****************************************************************************/
int Hv_chkmrdtl_Ins( struct hv_chkmrdtl_c hv_chkmrdtl_c , char * reply ){
	int ret;

	EXEC SQL INSERT INTO hv_chkmrdtl VALUES (:hv_chkmrdtl_c.tx_date,
			:hv_chkmrdtl_c.cmtno,
			:hv_chkmrdtl_c.s_cnt,
			:hv_chkmrdtl_c.s_amt,
			:hv_chkmrdtl_c.r_cnt,
			:hv_chkmrdtl_c.r_amt,
			:hv_chkmrdtl_c.brf);
	if ( sqlca.sqlcode && sqlca.sqlcode != -1 )
	{
		sprintf(acErrMsg,"INSERT hv_chkmrdtl error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D107" );
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == -1 )
	{
		sprintf(acErrMsg,"INSERT hv_chkmrdtl error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D108" );
		return CM_SQLCODE;
	}

	return 0;
}
