#include<stdio.h>
#include<varargs.h>

#define EXTERN
#include"global.h"


EXEC SQL INCLUDE SQLCA;
#include"cif_ass_answer_score_c.h"
#define CM_SQLCODE sqlca.sqlcode==1403?100:(sqlca.sqlcode==-1?-239:sqlca.sqlcode)

int cif_ass_answer_score_con ( struct cif_ass_answer_score_c , char *);
int put_mystery( char *, char * );
char *zip_tail(char *s);
static void zip_struct(struct cif_ass_answer_score_c* ps){
	zip_tail(ps->rowid);
	zip_tail(ps->qt_code);
	zip_tail(ps->answer_num);
}
int Cif_ass_answer_score_Debug(struct cif_ass_answer_score_c *ps){
	vtcp_log("cif_ass_answer_score_c.rowid=[%s]\n",ps->rowid);
	vtcp_log("cif_ass_answer_score_c.qt_code=[%s]\n",ps->qt_code);
	vtcp_log("cif_ass_answer_score_c.qt_count=[%ld]\n",ps->qt_count);
	vtcp_log("cif_ass_answer_score_c.qt_num=[%ld]\n",ps->qt_num);
	vtcp_log("cif_ass_answer_score_c.answer_num=[%s]\n",ps->answer_num);
	vtcp_log("cif_ass_answer_score_c.score=[%ld]\n",ps->score);
	return(0);
}
/*****************************************************************************/
/****                              查询函数部分[]                       ****/
/*****************************************************************************/
int Cif_ass_answer_score_Sel(reply,cif_ass_answer_score_c,fmtstr,va_alist)
char    *reply;
struct  cif_ass_answer_score_c *cif_ass_answer_score_c;
char    *fmtstr;
va_dcl
{
	int   ret;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	ret = Cif_ass_answer_score_Dec_Sel( reply , "%s" , wherelist );
	if (ret){
		WRITEMSG
		return ret;
	}
	ret = Cif_ass_answer_score_Fet_Sel( cif_ass_answer_score_c , reply );
	if (ret){
		WRITEMSG
		return ret;
	}

	Cif_ass_answer_score_Clo_Sel();

	return 0;
}



char *key_strcat(char *,char *);
int Cif_ass_answer_score_Dec_Sel ( reply , fmtstr , va_alist )
char    *reply;
char    *fmtstr;
va_dcl
{
	EXEC    SQL BEGIN   DECLARE SECTION;
		char    comm[1000];
	EXEC    SQL END     DECLARE SECTION;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	sprintf ( comm ," SELECT rowid,cif_ass_answer_score.* FROM cif_ass_answer_score WHERE  ");
	key_strcat(comm,wherelist);

	vtcp_log("%s,%d,SQLSTR=[%s]\n",__FILE__,__LINE__,comm);
	sqlca.sqlcode=0;
	EXEC SQL PREPARE cif_ass_answer_score_sel FROM :comm;
	EXEC SQL DECLARE sel_cif_ass_answer_score CURSOR FOR cif_ass_answer_score_sel;

	EXEC SQL OPEN sel_cif_ass_answer_score;
	if (sqlca.sqlcode){
		sprintf(acErrMsg,"OPEN cif_ass_answer_score error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D102" );
		return CM_SQLCODE;
	}

	return 0;
}

int Cif_ass_answer_score_Fet_Sel ( struct cif_ass_answer_score_c *cif_ass_answer_score_c , char * reply )
{

	int   ret;

	EXEC SQL FETCH sel_cif_ass_answer_score INTO :cif_ass_answer_score_c;
	if (sqlca.sqlcode&&sqlca.sqlcode!=1403){
		sprintf(acErrMsg,"Fetch cif_ass_answer_score error!!! %d",sqlca.sqlcode);
		WRITEMSG
		strcpy (reply,"D103");
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == 1403 ){
		sprintf(acErrMsg,"Fetch cif_ass_answer_score finished!!! %d",sqlca.sqlcode);
		WRITEMSG
		strcpy (reply,"D104");
		return CM_SQLCODE;
	}
	zip_struct(cif_ass_answer_score_c);

	return 0;
}

int Cif_ass_answer_score_Clo_Sel (){
	EXEC SQL CLOSE sel_cif_ass_answer_score;
	return 0;
}

/*****************************************************************************/
/****                              修改函数部分                           ****/
/*****************************************************************************/
int Cif_ass_answer_score_Dec_Upd( reply , fmtstr , va_alist)
char    *reply;
char    *fmtstr;
va_dcl
{
	EXEC    SQL BEGIN   DECLARE SECTION;
		char    comm[1000];
	EXEC    SQL END     DECLARE SECTION;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	sprintf ( comm , "SELECT rowid,cif_ass_answer_score.* FROM cif_ass_answer_score WHERE  ");
	key_strcat(comm,wherelist);
	strcat(comm," FOR UPDATE WAIT 5 ");
	vtcp_log("%s,%d,SQLSTR=[%s]\n",__FILE__,__LINE__,comm);
	sqlca.sqlcode=0;
	EXEC SQL PREPARE cif_ass_answer_score_upd FROM :comm;

	EXEC SQL DECLARE upd_cif_ass_answer_score CURSOR FOR cif_ass_answer_score_upd;

	EXEC SQL OPEN upd_cif_ass_answer_score;
	if (sqlca.sqlcode){
		sprintf(acErrMsg,"open cif_ass_answer_score error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D102" );
		return CM_SQLCODE;
	}

	return 0;
}

int Cif_ass_answer_score_Fet_Upd( struct cif_ass_answer_score_c *cif_ass_answer_score_c , char * reply ){
	int   ret;

	EXEC SQL FETCH upd_cif_ass_answer_score INTO :cif_ass_answer_score_c;
	if ( sqlca.sqlcode && sqlca.sqlcode!=1403 ){
		sprintf(acErrMsg,"FETCH upd cif_ass_answer_score error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D103" );
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == 1403 ){
		sprintf(acErrMsg,"FETCH cif_ass_answer_score finished %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D104" );
		return CM_SQLCODE;
	}
	zip_struct(cif_ass_answer_score_c);

	return 0;
}

int Cif_ass_answer_score_Upd_Upd( struct cif_ass_answer_score_c cif_ass_answer_score_c , char * reply){
	int ret;

	EXEC SQL UPDATE cif_ass_answer_score SET qt_code=:cif_ass_answer_score_c.qt_code,
			qt_count=:cif_ass_answer_score_c.qt_count,
			qt_num=:cif_ass_answer_score_c.qt_num,
			answer_num=:cif_ass_answer_score_c.answer_num,
			score=:cif_ass_answer_score_c.score
	WHERE rowid=:cif_ass_answer_score_c.rowid;
	if ( sqlca.sqlcode && sqlca.sqlcode != 1403 ){
		sprintf(acErrMsg,"UPDATE cif_ass_answer_score error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D105" );
		return CM_SQLCODE;
	}

	return 0;
}


int Cif_ass_answer_score_Del_Upd(struct cif_ass_answer_score_c cif_ass_answer_score_c , char * reply  ){

	EXEC SQL DELETE FROM cif_ass_answer_score WHERE rowid=:cif_ass_answer_score_c.rowid;
	if ( sqlca.sqlcode ){
		sprintf(acErrMsg,"DELETE cif_ass_answer_score error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D105" );
		return CM_SQLCODE;
	}

	return 0;
}

int Cif_ass_answer_score_Clo_Upd( ){
	EXEC SQL CLOSE upd_cif_ass_answer_score;
	return 0;
}

/*****************************************************************************/
/****                              增加函数部分                           ****/
/*****************************************************************************/
int Cif_ass_answer_score_Ins( struct cif_ass_answer_score_c cif_ass_answer_score_c , char * reply ){
	int ret;

	EXEC SQL INSERT INTO cif_ass_answer_score VALUES (:cif_ass_answer_score_c.qt_code,
			:cif_ass_answer_score_c.qt_count,
			:cif_ass_answer_score_c.qt_num,
			:cif_ass_answer_score_c.answer_num,
			:cif_ass_answer_score_c.score);
	if ( sqlca.sqlcode && sqlca.sqlcode != -1 )
	{
		sprintf(acErrMsg,"INSERT cif_ass_answer_score error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D107" );
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == -1 )
	{
		sprintf(acErrMsg,"INSERT cif_ass_answer_score error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D108" );
		return CM_SQLCODE;
	}

	return 0;
}
