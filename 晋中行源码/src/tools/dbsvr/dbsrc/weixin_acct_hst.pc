#include<stdio.h>
#include<varargs.h>

#define EXTERN
#include"global.h"


EXEC SQL INCLUDE SQLCA;
#include"weixin_acct_hst_c.h"
#define CM_SQLCODE sqlca.sqlcode==1403?100:(sqlca.sqlcode==-1?-239:sqlca.sqlcode)

int weixin_acct_hst_con ( struct weixin_acct_hst_c , char *);
int put_mystery( char *, char * );
char *zip_tail(char *s);
static void zip_struct(struct weixin_acct_hst_c* ps){
	zip_tail(ps->rowid);
	zip_tail(ps->bussi_name);
	zip_tail(ps->bussi_ac_no);
	zip_tail(ps->opn_br_no);
	zip_tail(ps->br_name);
	zip_tail(ps->tx_type);
	zip_tail(ps->sts);
	zip_tail(ps->filename);
	zip_tail(ps->filler1);
	zip_tail(ps->filler2);
	zip_tail(ps->key1);
	zip_tail(ps->key2);
}
int Weixin_acct_hst_Debug(struct weixin_acct_hst_c *ps){
	vtcp_log("weixin_acct_hst_c.rowid=[%s]\n",ps->rowid);
	vtcp_log("weixin_acct_hst_c.pt_trace_no=[%ld]\n",ps->pt_trace_no);
	vtcp_log("weixin_acct_hst_c.acct_date=[%ld]\n",ps->acct_date);
	vtcp_log("weixin_acct_hst_c.bussi_name=[%s]\n",ps->bussi_name);
	vtcp_log("weixin_acct_hst_c.bussi_ac_no=[%s]\n",ps->bussi_ac_no);
	vtcp_log("weixin_acct_hst_c.opn_br_no=[%s]\n",ps->opn_br_no);
	vtcp_log("weixin_acct_hst_c.br_name=[%s]\n",ps->br_name);
	vtcp_log("weixin_acct_hst_c.tx_type=[%s]\n",ps->tx_type);
	vtcp_log("weixin_acct_hst_c.tx_cnt=[%ld]\n",ps->tx_cnt);
	vtcp_log("weixin_acct_hst_c.tx_amt=[%f]\n",ps->tx_amt);
	vtcp_log("weixin_acct_hst_c.refud_cnt=[%ld]\n",ps->refud_cnt);
	vtcp_log("weixin_acct_hst_c.refud_amt=[%f]\n",ps->refud_amt);
	vtcp_log("weixin_acct_hst_c.retan_amt=[%f]\n",ps->retan_amt);
	vtcp_log("weixin_acct_hst_c.bussi_rate=[%f]\n",ps->bussi_rate);
	vtcp_log("weixin_acct_hst_c.bussi_chrg=[%f]\n",ps->bussi_chrg);
	vtcp_log("weixin_acct_hst_c.wx_chrg=[%f]\n",ps->wx_chrg);
	vtcp_log("weixin_acct_hst_c.bk_amt=[%f]\n",ps->bk_amt);
	vtcp_log("weixin_acct_hst_c.wft_chrg=[%f]\n",ps->wft_chrg);
	vtcp_log("weixin_acct_hst_c.tx_bk_chrg=[%f]\n",ps->tx_bk_chrg);
	vtcp_log("weixin_acct_hst_c.bussi_amt=[%f]\n",ps->bussi_amt);
	vtcp_log("weixin_acct_hst_c.hx_trace_no=[%ld]\n",ps->hx_trace_no);
	vtcp_log("weixin_acct_hst_c.sts=[%s]\n",ps->sts);
	vtcp_log("weixin_acct_hst_c.filename=[%s]\n",ps->filename);
	vtcp_log("weixin_acct_hst_c.filler1=[%s]\n",ps->filler1);
	vtcp_log("weixin_acct_hst_c.filler2=[%s]\n",ps->filler2);
	vtcp_log("weixin_acct_hst_c.key1=[%s]\n",ps->key1);
	vtcp_log("weixin_acct_hst_c.key2=[%s]\n",ps->key2);
	return(0);
}
/*****************************************************************************/
/****                              查询函数部分[]                       ****/
/*****************************************************************************/
int Weixin_acct_hst_Sel(reply,weixin_acct_hst_c,fmtstr,va_alist)
char    *reply;
struct  weixin_acct_hst_c *weixin_acct_hst_c;
char    *fmtstr;
va_dcl
{
	int   ret;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	ret = Weixin_acct_hst_Dec_Sel( reply , "%s" , wherelist );
	if (ret){
		WRITEMSG
		return ret;
	}
	ret = Weixin_acct_hst_Fet_Sel( weixin_acct_hst_c , reply );
	if (ret){
		WRITEMSG
		return ret;
	}

	Weixin_acct_hst_Clo_Sel();

	return 0;
}



char *key_strcat(char *,char *);
int Weixin_acct_hst_Dec_Sel ( reply , fmtstr , va_alist )
char    *reply;
char    *fmtstr;
va_dcl
{
	EXEC    SQL BEGIN   DECLARE SECTION;
		char    comm[1000];
	EXEC    SQL END     DECLARE SECTION;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	sprintf ( comm ," SELECT rowid,weixin_acct_hst.* FROM weixin_acct_hst WHERE  ");
	key_strcat(comm,wherelist);

	vtcp_log("%s,%d,SQLSTR=[%s]\n",__FILE__,__LINE__,comm);
	sqlca.sqlcode=0;
	EXEC SQL PREPARE weixin_acct_hst_sel FROM :comm;
	EXEC SQL DECLARE sel_weixin_acct_hst CURSOR FOR weixin_acct_hst_sel;

	EXEC SQL OPEN sel_weixin_acct_hst;
	if (sqlca.sqlcode){
		sprintf(acErrMsg,"OPEN weixin_acct_hst error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D102" );
		return CM_SQLCODE;
	}

	return 0;
}

int Weixin_acct_hst_Fet_Sel ( struct weixin_acct_hst_c *weixin_acct_hst_c , char * reply )
{

	int   ret;

	EXEC SQL FETCH sel_weixin_acct_hst INTO :weixin_acct_hst_c;
	if (sqlca.sqlcode&&sqlca.sqlcode!=1403){
		sprintf(acErrMsg,"Fetch weixin_acct_hst error!!! %d",sqlca.sqlcode);
		WRITEMSG
		strcpy (reply,"D103");
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == 1403 ){
		sprintf(acErrMsg,"Fetch weixin_acct_hst finished!!! %d",sqlca.sqlcode);
		WRITEMSG
		strcpy (reply,"D104");
		return CM_SQLCODE;
	}
	zip_struct(weixin_acct_hst_c);

	return 0;
}

int Weixin_acct_hst_Clo_Sel (){
	EXEC SQL CLOSE sel_weixin_acct_hst;
	return 0;
}

/*****************************************************************************/
/****                              修改函数部分                           ****/
/*****************************************************************************/
int Weixin_acct_hst_Dec_Upd( reply , fmtstr , va_alist)
char    *reply;
char    *fmtstr;
va_dcl
{
	EXEC    SQL BEGIN   DECLARE SECTION;
		char    comm[1000];
	EXEC    SQL END     DECLARE SECTION;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	sprintf ( comm , "SELECT rowid,weixin_acct_hst.* FROM weixin_acct_hst WHERE  ");
	key_strcat(comm,wherelist);
	strcat(comm," FOR UPDATE WAIT 5 ");
	vtcp_log("%s,%d,SQLSTR=[%s]\n",__FILE__,__LINE__,comm);
	sqlca.sqlcode=0;
	EXEC SQL PREPARE weixin_acct_hst_upd FROM :comm;

	EXEC SQL DECLARE upd_weixin_acct_hst CURSOR FOR weixin_acct_hst_upd;

	EXEC SQL OPEN upd_weixin_acct_hst;
	if (sqlca.sqlcode){
		sprintf(acErrMsg,"open weixin_acct_hst error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D102" );
		return CM_SQLCODE;
	}

	return 0;
}

int Weixin_acct_hst_Fet_Upd( struct weixin_acct_hst_c *weixin_acct_hst_c , char * reply ){
	int   ret;

	EXEC SQL FETCH upd_weixin_acct_hst INTO :weixin_acct_hst_c;
	if ( sqlca.sqlcode && sqlca.sqlcode!=1403 ){
		sprintf(acErrMsg,"FETCH upd weixin_acct_hst error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D103" );
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == 1403 ){
		sprintf(acErrMsg,"FETCH weixin_acct_hst finished %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D104" );
		return CM_SQLCODE;
	}
	zip_struct(weixin_acct_hst_c);

	return 0;
}

int Weixin_acct_hst_Upd_Upd( struct weixin_acct_hst_c weixin_acct_hst_c , char * reply){
	int ret;

	EXEC SQL UPDATE weixin_acct_hst SET pt_trace_no=:weixin_acct_hst_c.pt_trace_no,
			acct_date=:weixin_acct_hst_c.acct_date,
			bussi_name=:weixin_acct_hst_c.bussi_name,
			bussi_ac_no=:weixin_acct_hst_c.bussi_ac_no,
			opn_br_no=:weixin_acct_hst_c.opn_br_no,
			br_name=:weixin_acct_hst_c.br_name,
			tx_type=:weixin_acct_hst_c.tx_type,
			tx_cnt=:weixin_acct_hst_c.tx_cnt,
			tx_amt=:weixin_acct_hst_c.tx_amt,
			refud_cnt=:weixin_acct_hst_c.refud_cnt,
			refud_amt=:weixin_acct_hst_c.refud_amt,
			retan_amt=:weixin_acct_hst_c.retan_amt,
			bussi_rate=:weixin_acct_hst_c.bussi_rate,
			bussi_chrg=:weixin_acct_hst_c.bussi_chrg,
			wx_chrg=:weixin_acct_hst_c.wx_chrg,
			bk_amt=:weixin_acct_hst_c.bk_amt,
			wft_chrg=:weixin_acct_hst_c.wft_chrg,
			tx_bk_chrg=:weixin_acct_hst_c.tx_bk_chrg,
			bussi_amt=:weixin_acct_hst_c.bussi_amt,
			hx_trace_no=:weixin_acct_hst_c.hx_trace_no,
			sts=:weixin_acct_hst_c.sts,
			filename=:weixin_acct_hst_c.filename,
			filler1=:weixin_acct_hst_c.filler1,
			filler2=:weixin_acct_hst_c.filler2,
			key1=:weixin_acct_hst_c.key1,
			key2=:weixin_acct_hst_c.key2
	WHERE rowid=:weixin_acct_hst_c.rowid;
	if ( sqlca.sqlcode && sqlca.sqlcode != 1403 ){
		sprintf(acErrMsg,"UPDATE weixin_acct_hst error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D105" );
		return CM_SQLCODE;
	}

	return 0;
}


int Weixin_acct_hst_Del_Upd(struct weixin_acct_hst_c weixin_acct_hst_c , char * reply  ){

	EXEC SQL DELETE FROM weixin_acct_hst WHERE rowid=:weixin_acct_hst_c.rowid;
	if ( sqlca.sqlcode ){
		sprintf(acErrMsg,"DELETE weixin_acct_hst error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D105" );
		return CM_SQLCODE;
	}

	return 0;
}

int Weixin_acct_hst_Clo_Upd( ){
	EXEC SQL CLOSE upd_weixin_acct_hst;
	return 0;
}

/*****************************************************************************/
/****                              增加函数部分                           ****/
/*****************************************************************************/
int Weixin_acct_hst_Ins( struct weixin_acct_hst_c weixin_acct_hst_c , char * reply ){
	int ret;

	EXEC SQL INSERT INTO weixin_acct_hst VALUES (:weixin_acct_hst_c.pt_trace_no,
			:weixin_acct_hst_c.acct_date,
			:weixin_acct_hst_c.bussi_name,
			:weixin_acct_hst_c.bussi_ac_no,
			:weixin_acct_hst_c.opn_br_no,
			:weixin_acct_hst_c.br_name,
			:weixin_acct_hst_c.tx_type,
			:weixin_acct_hst_c.tx_cnt,
			:weixin_acct_hst_c.tx_amt,
			:weixin_acct_hst_c.refud_cnt,
			:weixin_acct_hst_c.refud_amt,
			:weixin_acct_hst_c.retan_amt,
			:weixin_acct_hst_c.bussi_rate,
			:weixin_acct_hst_c.bussi_chrg,
			:weixin_acct_hst_c.wx_chrg,
			:weixin_acct_hst_c.bk_amt,
			:weixin_acct_hst_c.wft_chrg,
			:weixin_acct_hst_c.tx_bk_chrg,
			:weixin_acct_hst_c.bussi_amt,
			:weixin_acct_hst_c.hx_trace_no,
			:weixin_acct_hst_c.sts,
			:weixin_acct_hst_c.filename,
			:weixin_acct_hst_c.filler1,
			:weixin_acct_hst_c.filler2,
			:weixin_acct_hst_c.key1,
			:weixin_acct_hst_c.key2);
	if ( sqlca.sqlcode && sqlca.sqlcode != -1 )
	{
		sprintf(acErrMsg,"INSERT weixin_acct_hst error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D107" );
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == -1 )
	{
		sprintf(acErrMsg,"INSERT weixin_acct_hst error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D108" );
		return CM_SQLCODE;
	}

	return 0;
}
