#include<stdio.h>
#include<varargs.h>

#define EXTERN
#include"global.h"


EXEC SQL INCLUDE SQLCA;
#include"lv_c503r_c.h"
#define CM_SQLCODE sqlca.sqlcode==1403?100:(sqlca.sqlcode==-1?-239:sqlca.sqlcode)

int lv_c503r_con ( struct lv_c503r_c , char *);
int put_mystery( char *, char * );
char *zip_tail(char *s);
static void zip_struct(struct lv_c503r_c* ps){
	zip_tail(ps->rowid);
	zip_tail(ps->bakcode);
	zip_tail(ps->sendgrant);
	zip_tail(ps->recvgrant);
	zip_tail(ps->upd_date);
	zip_tail(ps->upd_node);
}
int Lv_c503r_Debug(struct lv_c503r_c *ps){
	vtcp_log("lv_c503r_c.rowid=[%s]\n",ps->rowid);
	vtcp_log("lv_c503r_c.bakcode=[%s]\n",ps->bakcode);
	vtcp_log("lv_c503r_c.sendcnt=[%ld]\n",ps->sendcnt);
	vtcp_log("lv_c503r_c.sendgrant=[%s]\n",ps->sendgrant);
	vtcp_log("lv_c503r_c.recvcnt=[%ld]\n",ps->recvcnt);
	vtcp_log("lv_c503r_c.recvgrant=[%s]\n",ps->recvgrant);
	vtcp_log("lv_c503r_c.upd_date=[%s]\n",ps->upd_date);
	vtcp_log("lv_c503r_c.upd_node=[%s]\n",ps->upd_node);
	return(0);
}
/*****************************************************************************/
/****                              查询函数部分[]                       ****/
/*****************************************************************************/
int Lv_c503r_Sel(reply,lv_c503r_c,fmtstr,va_alist)
char    *reply;
struct  lv_c503r_c *lv_c503r_c;
char    *fmtstr;
va_dcl
{
	int   ret;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	ret = Lv_c503r_Dec_Sel( reply , "%s" , wherelist );
	if (ret){
		WRITEMSG
		return ret;
	}
	ret = Lv_c503r_Fet_Sel( lv_c503r_c , reply );
	if (ret){
		WRITEMSG
		return ret;
	}

	Lv_c503r_Clo_Sel();

	return 0;
}



char *key_strcat(char *,char *);
int Lv_c503r_Dec_Sel ( reply , fmtstr , va_alist )
char    *reply;
char    *fmtstr;
va_dcl
{
	EXEC    SQL BEGIN   DECLARE SECTION;
		char    comm[1000];
	EXEC    SQL END     DECLARE SECTION;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	sprintf ( comm ," SELECT rowid,lv_c503r.* FROM lv_c503r WHERE  ");
	key_strcat(comm,wherelist);

	vtcp_log("%s,%d,SQLSTR=[%s]\n",__FILE__,__LINE__,comm);
	sqlca.sqlcode=0;
	EXEC SQL PREPARE lv_c503r_sel FROM :comm;
	EXEC SQL DECLARE sel_lv_c503r CURSOR FOR lv_c503r_sel;

	EXEC SQL OPEN sel_lv_c503r;
	if (sqlca.sqlcode){
		sprintf(acErrMsg,"OPEN lv_c503r error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D102" );
		return CM_SQLCODE;
	}

	return 0;
}

int Lv_c503r_Fet_Sel ( struct lv_c503r_c *lv_c503r_c , char * reply )
{

	int   ret;

	EXEC SQL FETCH sel_lv_c503r INTO :lv_c503r_c;
	if (sqlca.sqlcode&&sqlca.sqlcode!=1403){
		sprintf(acErrMsg,"Fetch lv_c503r error!!! %d",sqlca.sqlcode);
		WRITEMSG
		strcpy (reply,"D103");
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == 1403 ){
		sprintf(acErrMsg,"Fetch lv_c503r finished!!! %d",sqlca.sqlcode);
		WRITEMSG
		strcpy (reply,"D104");
		return CM_SQLCODE;
	}
	zip_struct(lv_c503r_c);

	return 0;
}

int Lv_c503r_Clo_Sel (){
	EXEC SQL CLOSE sel_lv_c503r;
	return 0;
}

/*****************************************************************************/
/****                              修改函数部分                           ****/
/*****************************************************************************/
int Lv_c503r_Dec_Upd( reply , fmtstr , va_alist)
char    *reply;
char    *fmtstr;
va_dcl
{
	EXEC    SQL BEGIN   DECLARE SECTION;
		char    comm[1000];
	EXEC    SQL END     DECLARE SECTION;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	sprintf ( comm , "SELECT rowid,lv_c503r.* FROM lv_c503r WHERE  ");
	key_strcat(comm,wherelist);
	strcat(comm," FOR UPDATE WAIT 5 ");
	vtcp_log("%s,%d,SQLSTR=[%s]\n",__FILE__,__LINE__,comm);
	sqlca.sqlcode=0;
	EXEC SQL PREPARE lv_c503r_upd FROM :comm;

	EXEC SQL DECLARE upd_lv_c503r CURSOR FOR lv_c503r_upd;

	EXEC SQL OPEN upd_lv_c503r;
	if (sqlca.sqlcode){
		sprintf(acErrMsg,"open lv_c503r error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D102" );
		return CM_SQLCODE;
	}

	return 0;
}

int Lv_c503r_Fet_Upd( struct lv_c503r_c *lv_c503r_c , char * reply ){
	int   ret;

	EXEC SQL FETCH upd_lv_c503r INTO :lv_c503r_c;
	if ( sqlca.sqlcode && sqlca.sqlcode!=1403 ){
		sprintf(acErrMsg,"FETCH upd lv_c503r error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D103" );
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == 1403 ){
		sprintf(acErrMsg,"FETCH lv_c503r finished %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D104" );
		return CM_SQLCODE;
	}
	zip_struct(lv_c503r_c);

	return 0;
}

int Lv_c503r_Upd_Upd( struct lv_c503r_c lv_c503r_c , char * reply){
	int ret;

	EXEC SQL UPDATE lv_c503r SET bakcode=:lv_c503r_c.bakcode,
			sendcnt=:lv_c503r_c.sendcnt,
			sendgrant=:lv_c503r_c.sendgrant,
			recvcnt=:lv_c503r_c.recvcnt,
			recvgrant=:lv_c503r_c.recvgrant,
			upd_date=:lv_c503r_c.upd_date,
			upd_node=:lv_c503r_c.upd_node
	WHERE rowid=:lv_c503r_c.rowid;
	if ( sqlca.sqlcode && sqlca.sqlcode != 1403 ){
		sprintf(acErrMsg,"UPDATE lv_c503r error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D105" );
		return CM_SQLCODE;
	}

	return 0;
}


int Lv_c503r_Del_Upd(struct lv_c503r_c lv_c503r_c , char * reply  ){

	EXEC SQL DELETE FROM lv_c503r WHERE rowid=:lv_c503r_c.rowid;
	if ( sqlca.sqlcode ){
		sprintf(acErrMsg,"DELETE lv_c503r error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D105" );
		return CM_SQLCODE;
	}

	return 0;
}

int Lv_c503r_Clo_Upd( ){
	EXEC SQL CLOSE upd_lv_c503r;
	return 0;
}

/*****************************************************************************/
/****                              增加函数部分                           ****/
/*****************************************************************************/
int Lv_c503r_Ins( struct lv_c503r_c lv_c503r_c , char * reply ){
	int ret;

	EXEC SQL INSERT INTO lv_c503r VALUES (:lv_c503r_c.bakcode,
			:lv_c503r_c.sendcnt,
			:lv_c503r_c.sendgrant,
			:lv_c503r_c.recvcnt,
			:lv_c503r_c.recvgrant,
			:lv_c503r_c.upd_date,
			:lv_c503r_c.upd_node);
	if ( sqlca.sqlcode && sqlca.sqlcode != -1 )
	{
		sprintf(acErrMsg,"INSERT lv_c503r error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D107" );
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == -1 )
	{
		sprintf(acErrMsg,"INSERT lv_c503r error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D108" );
		return CM_SQLCODE;
	}

	return 0;
}
