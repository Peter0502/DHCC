#include<stdio.h>
#include<varargs.h>

#define EXTERN
#include"global.h"


EXEC SQL INCLUDE SQLCA;
#include"pos_mobile_pay_c.h"
#define CM_SQLCODE sqlca.sqlcode==1403?100:(sqlca.sqlcode==-1?-239:sqlca.sqlcode)

int pos_mobile_pay_con ( struct pos_mobile_pay_c , char *);
int put_mystery( char *, char * );
char *zip_tail(char *s);
static void zip_struct(struct pos_mobile_pay_c* ps){
	zip_tail(ps->rowid);
	zip_tail(ps->march_no);
	zip_tail(ps->tty_no);
	zip_tail(ps->remark);
}
int Pos_mobile_pay_Debug(struct pos_mobile_pay_c *ps){
	vtcp_log("pos_mobile_pay_c.rowid=[%s]\n",ps->rowid);
	vtcp_log("pos_mobile_pay_c.march_no=[%s]\n",ps->march_no);
	vtcp_log("pos_mobile_pay_c.tty_no=[%s]\n",ps->tty_no);
	vtcp_log("pos_mobile_pay_c.remark=[%s]\n",ps->remark);
	return(0);
}
/*****************************************************************************/
/****                              查询函数部分[]                       ****/
/*****************************************************************************/
int Pos_mobile_pay_Sel(reply,pos_mobile_pay_c,fmtstr,va_alist)
char    *reply;
struct  pos_mobile_pay_c *pos_mobile_pay_c;
char    *fmtstr;
va_dcl
{
	int   ret;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	ret = Pos_mobile_pay_Dec_Sel( reply , "%s" , wherelist );
	if (ret){
		WRITEMSG
		return ret;
	}
	ret = Pos_mobile_pay_Fet_Sel( pos_mobile_pay_c , reply );
	if (ret){
		WRITEMSG
		return ret;
	}

	Pos_mobile_pay_Clo_Sel();

	return 0;
}



char *key_strcat(char *,char *);
int Pos_mobile_pay_Dec_Sel ( reply , fmtstr , va_alist )
char    *reply;
char    *fmtstr;
va_dcl
{
	EXEC    SQL BEGIN   DECLARE SECTION;
		char    comm[1000];
	EXEC    SQL END     DECLARE SECTION;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	sprintf ( comm ," SELECT rowid,pos_mobile_pay.* FROM pos_mobile_pay WHERE  ");
	key_strcat(comm,wherelist);

	vtcp_log("%s,%d,SQLSTR=[%s]\n",__FILE__,__LINE__,comm);
	sqlca.sqlcode=0;
	EXEC SQL PREPARE pos_mobile_pay_sel FROM :comm;
	EXEC SQL DECLARE sel_pos_mobile_pay CURSOR FOR pos_mobile_pay_sel;

	EXEC SQL OPEN sel_pos_mobile_pay;
	if (sqlca.sqlcode){
		sprintf(acErrMsg,"OPEN pos_mobile_pay error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D102" );
		return CM_SQLCODE;
	}

	return 0;
}

int Pos_mobile_pay_Fet_Sel ( struct pos_mobile_pay_c *pos_mobile_pay_c , char * reply )
{

	int   ret;

	EXEC SQL FETCH sel_pos_mobile_pay INTO :pos_mobile_pay_c;
	if (sqlca.sqlcode&&sqlca.sqlcode!=1403){
		sprintf(acErrMsg,"Fetch pos_mobile_pay error!!! %d",sqlca.sqlcode);
		WRITEMSG
		strcpy (reply,"D103");
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == 1403 ){
		sprintf(acErrMsg,"Fetch pos_mobile_pay finished!!! %d",sqlca.sqlcode);
		WRITEMSG
		strcpy (reply,"D104");
		return CM_SQLCODE;
	}
	zip_struct(pos_mobile_pay_c);

	return 0;
}

int Pos_mobile_pay_Clo_Sel (){
	EXEC SQL CLOSE sel_pos_mobile_pay;
	return 0;
}

/*****************************************************************************/
/****                              修改函数部分                           ****/
/*****************************************************************************/
int Pos_mobile_pay_Dec_Upd( reply , fmtstr , va_alist)
char    *reply;
char    *fmtstr;
va_dcl
{
	EXEC    SQL BEGIN   DECLARE SECTION;
		char    comm[1000];
	EXEC    SQL END     DECLARE SECTION;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	sprintf ( comm , "SELECT rowid,pos_mobile_pay.* FROM pos_mobile_pay WHERE  ");
	key_strcat(comm,wherelist);
	strcat(comm," FOR UPDATE WAIT 5 ");
	vtcp_log("%s,%d,SQLSTR=[%s]\n",__FILE__,__LINE__,comm);
	sqlca.sqlcode=0;
	EXEC SQL PREPARE pos_mobile_pay_upd FROM :comm;

	EXEC SQL DECLARE upd_pos_mobile_pay CURSOR FOR pos_mobile_pay_upd;

	EXEC SQL OPEN upd_pos_mobile_pay;
	if (sqlca.sqlcode){
		sprintf(acErrMsg,"open pos_mobile_pay error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D102" );
		return CM_SQLCODE;
	}

	return 0;
}

int Pos_mobile_pay_Fet_Upd( struct pos_mobile_pay_c *pos_mobile_pay_c , char * reply ){
	int   ret;

	EXEC SQL FETCH upd_pos_mobile_pay INTO :pos_mobile_pay_c;
	if ( sqlca.sqlcode && sqlca.sqlcode!=1403 ){
		sprintf(acErrMsg,"FETCH upd pos_mobile_pay error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D103" );
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == 1403 ){
		sprintf(acErrMsg,"FETCH pos_mobile_pay finished %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D104" );
		return CM_SQLCODE;
	}
	zip_struct(pos_mobile_pay_c);

	return 0;
}

int Pos_mobile_pay_Upd_Upd( struct pos_mobile_pay_c pos_mobile_pay_c , char * reply){
	int ret;

	EXEC SQL UPDATE pos_mobile_pay SET march_no=:pos_mobile_pay_c.march_no,
			tty_no=:pos_mobile_pay_c.tty_no,
			remark=:pos_mobile_pay_c.remark
	WHERE rowid=:pos_mobile_pay_c.rowid;
	if ( sqlca.sqlcode && sqlca.sqlcode != 1403 ){
		sprintf(acErrMsg,"UPDATE pos_mobile_pay error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D105" );
		return CM_SQLCODE;
	}

	return 0;
}


int Pos_mobile_pay_Del_Upd(struct pos_mobile_pay_c pos_mobile_pay_c , char * reply  ){

	EXEC SQL DELETE FROM pos_mobile_pay WHERE rowid=:pos_mobile_pay_c.rowid;
	if ( sqlca.sqlcode ){
		sprintf(acErrMsg,"DELETE pos_mobile_pay error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D105" );
		return CM_SQLCODE;
	}

	return 0;
}

int Pos_mobile_pay_Clo_Upd( ){
	EXEC SQL CLOSE upd_pos_mobile_pay;
	return 0;
}

/*****************************************************************************/
/****                              增加函数部分                           ****/
/*****************************************************************************/
int Pos_mobile_pay_Ins( struct pos_mobile_pay_c pos_mobile_pay_c , char * reply ){
	int ret;

	EXEC SQL INSERT INTO pos_mobile_pay VALUES (:pos_mobile_pay_c.march_no,
			:pos_mobile_pay_c.tty_no,
			:pos_mobile_pay_c.remark);
	if ( sqlca.sqlcode && sqlca.sqlcode != -1 )
	{
		sprintf(acErrMsg,"INSERT pos_mobile_pay error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D107" );
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == -1 )
	{
		sprintf(acErrMsg,"INSERT pos_mobile_pay error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D108" );
		return CM_SQLCODE;
	}

	return 0;
}
