#include<stdio.h>
#include<varargs.h>

#define EXTERN
#include"global.h"


EXEC SQL INCLUDE SQLCA;
#include"six_dz_log_c.h"
#define CM_SQLCODE sqlca.sqlcode==1403?100:(sqlca.sqlcode==-1?-239:sqlca.sqlcode)

int six_dz_log_con ( struct six_dz_log_c , char *);
int put_mystery( char *, char * );
char *zip_tail(char *s);
static void zip_struct(struct six_dz_log_c* ps){
	zip_tail(ps->rowid);
	zip_tail(ps->inf_source);
	zip_tail(ps->tx_code);
	zip_tail(ps->ac_no);
	zip_tail(ps->sl_bank);
	zip_tail(ps->mb_bank);
	zip_tail(ps->sl_trace_no);
	zip_tail(ps->center_trace_no);
	zip_tail(ps->opn_trace_no);
}
int Six_dz_log_Debug(struct six_dz_log_c *ps){
	vtcp_log("six_dz_log_c.rowid=[%s]\n",ps->rowid);
	vtcp_log("six_dz_log_c.inf_source=[%s]\n",ps->inf_source);
	vtcp_log("six_dz_log_c.tx_date=[%ld]\n",ps->tx_date);
	vtcp_log("six_dz_log_c.tx_code=[%s]\n",ps->tx_code);
	vtcp_log("six_dz_log_c.ac_no=[%s]\n",ps->ac_no);
	vtcp_log("six_dz_log_c.sl_bank=[%s]\n",ps->sl_bank);
	vtcp_log("six_dz_log_c.mb_bank=[%s]\n",ps->mb_bank);
	vtcp_log("six_dz_log_c.tx_amt=[%f]\n",ps->tx_amt);
	vtcp_log("six_dz_log_c.sl_trace_no=[%s]\n",ps->sl_trace_no);
	vtcp_log("six_dz_log_c.center_trace_no=[%s]\n",ps->center_trace_no);
	vtcp_log("six_dz_log_c.opn_trace_no=[%s]\n",ps->opn_trace_no);
	return(0);
}
/*****************************************************************************/
/****                              查询函数部分[]                       ****/
/*****************************************************************************/
int Six_dz_log_Sel(reply,six_dz_log_c,fmtstr,va_alist)
char    *reply;
struct  six_dz_log_c *six_dz_log_c;
char    *fmtstr;
va_dcl
{
	int   ret;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	ret = Six_dz_log_Dec_Sel( reply , "%s" , wherelist );
	if (ret){
		WRITEMSG
		return ret;
	}
	ret = Six_dz_log_Fet_Sel( six_dz_log_c , reply );
	if (ret){
		WRITEMSG
		return ret;
	}

	Six_dz_log_Clo_Sel();

	return 0;
}



char *key_strcat(char *,char *);
int Six_dz_log_Dec_Sel ( reply , fmtstr , va_alist )
char    *reply;
char    *fmtstr;
va_dcl
{
	EXEC    SQL BEGIN   DECLARE SECTION;
		char    comm[1000];
	EXEC    SQL END     DECLARE SECTION;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	sprintf ( comm ," SELECT rowid,six_dz_log.* FROM six_dz_log WHERE  ");
	key_strcat(comm,wherelist);

	vtcp_log("%s,%d,SQLSTR=[%s]\n",__FILE__,__LINE__,comm);
	sqlca.sqlcode=0;
	EXEC SQL PREPARE six_dz_log_sel FROM :comm;
	EXEC SQL DECLARE sel_six_dz_log CURSOR FOR six_dz_log_sel;

	EXEC SQL OPEN sel_six_dz_log;
	if (sqlca.sqlcode){
		sprintf(acErrMsg,"OPEN six_dz_log error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D102" );
		return CM_SQLCODE;
	}

	return 0;
}

int Six_dz_log_Fet_Sel ( struct six_dz_log_c *six_dz_log_c , char * reply )
{

	int   ret;

	EXEC SQL FETCH sel_six_dz_log INTO :six_dz_log_c;
	if (sqlca.sqlcode&&sqlca.sqlcode!=1403){
		sprintf(acErrMsg,"Fetch six_dz_log error!!! %d",sqlca.sqlcode);
		WRITEMSG
		strcpy (reply,"D103");
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == 1403 ){
		sprintf(acErrMsg,"Fetch six_dz_log finished!!! %d",sqlca.sqlcode);
		WRITEMSG
		strcpy (reply,"D104");
		return CM_SQLCODE;
	}
	zip_struct(six_dz_log_c);

	return 0;
}

int Six_dz_log_Clo_Sel (){
	EXEC SQL CLOSE sel_six_dz_log;
	return 0;
}

/*****************************************************************************/
/****                              修改函数部分                           ****/
/*****************************************************************************/
int Six_dz_log_Dec_Upd( reply , fmtstr , va_alist)
char    *reply;
char    *fmtstr;
va_dcl
{
	EXEC    SQL BEGIN   DECLARE SECTION;
		char    comm[1000];
	EXEC    SQL END     DECLARE SECTION;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	sprintf ( comm , "SELECT rowid,six_dz_log.* FROM six_dz_log WHERE  ");
	key_strcat(comm,wherelist);
	strcat(comm," FOR UPDATE WAIT 5 ");
	vtcp_log("%s,%d,SQLSTR=[%s]\n",__FILE__,__LINE__,comm);
	sqlca.sqlcode=0;
	EXEC SQL PREPARE six_dz_log_upd FROM :comm;

	EXEC SQL DECLARE upd_six_dz_log CURSOR FOR six_dz_log_upd;

	EXEC SQL OPEN upd_six_dz_log;
	if (sqlca.sqlcode){
		sprintf(acErrMsg,"open six_dz_log error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D102" );
		return CM_SQLCODE;
	}

	return 0;
}

int Six_dz_log_Fet_Upd( struct six_dz_log_c *six_dz_log_c , char * reply ){
	int   ret;

	EXEC SQL FETCH upd_six_dz_log INTO :six_dz_log_c;
	if ( sqlca.sqlcode && sqlca.sqlcode!=1403 ){
		sprintf(acErrMsg,"FETCH upd six_dz_log error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D103" );
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == 1403 ){
		sprintf(acErrMsg,"FETCH six_dz_log finished %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D104" );
		return CM_SQLCODE;
	}
	zip_struct(six_dz_log_c);

	return 0;
}

int Six_dz_log_Upd_Upd( struct six_dz_log_c six_dz_log_c , char * reply){
	int ret;

	EXEC SQL UPDATE six_dz_log SET inf_source=:six_dz_log_c.inf_source,
			tx_date=:six_dz_log_c.tx_date,
			tx_code=:six_dz_log_c.tx_code,
			ac_no=:six_dz_log_c.ac_no,
			sl_bank=:six_dz_log_c.sl_bank,
			mb_bank=:six_dz_log_c.mb_bank,
			tx_amt=:six_dz_log_c.tx_amt,
			sl_trace_no=:six_dz_log_c.sl_trace_no,
			center_trace_no=:six_dz_log_c.center_trace_no,
			opn_trace_no=:six_dz_log_c.opn_trace_no
	WHERE rowid=:six_dz_log_c.rowid;
	if ( sqlca.sqlcode && sqlca.sqlcode != 1403 ){
		sprintf(acErrMsg,"UPDATE six_dz_log error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D105" );
		return CM_SQLCODE;
	}

	return 0;
}


int Six_dz_log_Del_Upd(struct six_dz_log_c six_dz_log_c , char * reply  ){

	EXEC SQL DELETE FROM six_dz_log WHERE rowid=:six_dz_log_c.rowid;
	if ( sqlca.sqlcode ){
		sprintf(acErrMsg,"DELETE six_dz_log error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D105" );
		return CM_SQLCODE;
	}

	return 0;
}

int Six_dz_log_Clo_Upd( ){
	EXEC SQL CLOSE upd_six_dz_log;
	return 0;
}

/*****************************************************************************/
/****                              增加函数部分                           ****/
/*****************************************************************************/
int Six_dz_log_Ins( struct six_dz_log_c six_dz_log_c , char * reply ){
	int ret;

	EXEC SQL INSERT INTO six_dz_log VALUES (:six_dz_log_c.inf_source,
			:six_dz_log_c.tx_date,
			:six_dz_log_c.tx_code,
			:six_dz_log_c.ac_no,
			:six_dz_log_c.sl_bank,
			:six_dz_log_c.mb_bank,
			:six_dz_log_c.tx_amt,
			:six_dz_log_c.sl_trace_no,
			:six_dz_log_c.center_trace_no,
			:six_dz_log_c.opn_trace_no);
	if ( sqlca.sqlcode && sqlca.sqlcode != -1 )
	{
		sprintf(acErrMsg,"INSERT six_dz_log error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D107" );
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == -1 )
	{
		sprintf(acErrMsg,"INSERT six_dz_log error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D108" );
		return CM_SQLCODE;
	}

	return 0;
}
