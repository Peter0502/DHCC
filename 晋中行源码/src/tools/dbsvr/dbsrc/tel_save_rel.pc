#include<stdio.h>
#include<varargs.h>

#define EXTERN
#include"global.h"


EXEC SQL INCLUDE SQLCA;
#include"tel_save_rel_c.h"
#define CM_SQLCODE sqlca.sqlcode==1403?100:(sqlca.sqlcode==-1?-239:sqlca.sqlcode)

int tel_save_rel_con ( struct tel_save_rel_c , char *);
int put_mystery( char *, char * );
char *zip_tail(char *s);
static void zip_struct(struct tel_save_rel_c* ps){
	zip_tail(ps->rowid);
	zip_tail(ps->tel);
	zip_tail(ps->ac_no);
	zip_tail(ps->tx_type);
	zip_tail(ps->sts);
	zip_tail(ps->tx_tel);
	zip_tail(ps->br_no);
	zip_tail(ps->brf);
}
int Tel_save_rel_Debug(struct tel_save_rel_c *ps){
	vtcp_log("tel_save_rel_c.rowid=[%s]\n",ps->rowid);
	vtcp_log("tel_save_rel_c.tel=[%s]\n",ps->tel);
	vtcp_log("tel_save_rel_c.ac_no=[%s]\n",ps->ac_no);
	vtcp_log("tel_save_rel_c.ac_seqn=[%ld]\n",ps->ac_seqn);
	vtcp_log("tel_save_rel_c.cif_no=[%ld]\n",ps->cif_no);
	vtcp_log("tel_save_rel_c.tx_type=[%s]\n",ps->tx_type);
	vtcp_log("tel_save_rel_c.sts=[%s]\n",ps->sts);
	vtcp_log("tel_save_rel_c.tx_date=[%ld]\n",ps->tx_date);
	vtcp_log("tel_save_rel_c.tx_time=[%ld]\n",ps->tx_time);
	vtcp_log("tel_save_rel_c.tx_tel=[%s]\n",ps->tx_tel);
	vtcp_log("tel_save_rel_c.br_no=[%s]\n",ps->br_no);
	vtcp_log("tel_save_rel_c.trace_no=[%ld]\n",ps->trace_no);
	vtcp_log("tel_save_rel_c.brf=[%s]\n",ps->brf);
	return(0);
}
/*****************************************************************************/
/****                              查询函数部分[]                       ****/
/*****************************************************************************/
int Tel_save_rel_Sel(reply,tel_save_rel_c,fmtstr,va_alist)
char    *reply;
struct  tel_save_rel_c *tel_save_rel_c;
char    *fmtstr;
va_dcl
{
	int   ret;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	ret = Tel_save_rel_Dec_Sel( reply , "%s" , wherelist );
	if (ret){
		WRITEMSG
		return ret;
	}
	ret = Tel_save_rel_Fet_Sel( tel_save_rel_c , reply );
	if (ret){
		WRITEMSG
		return ret;
	}

	Tel_save_rel_Clo_Sel();

	return 0;
}



char *key_strcat(char *,char *);
int Tel_save_rel_Dec_Sel ( reply , fmtstr , va_alist )
char    *reply;
char    *fmtstr;
va_dcl
{
	EXEC    SQL BEGIN   DECLARE SECTION;
		char    comm[1000];
	EXEC    SQL END     DECLARE SECTION;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	sprintf ( comm ," SELECT rowid,tel_save_rel.* FROM tel_save_rel WHERE  ");
	key_strcat(comm,wherelist);

	vtcp_log("%s,%d,SQLSTR=[%s]\n",__FILE__,__LINE__,comm);
	sqlca.sqlcode=0;
	EXEC SQL PREPARE tel_save_rel_sel FROM :comm;
	EXEC SQL DECLARE sel_tel_save_rel CURSOR FOR tel_save_rel_sel;

	EXEC SQL OPEN sel_tel_save_rel;
	if (sqlca.sqlcode){
		sprintf(acErrMsg,"OPEN tel_save_rel error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D102" );
		return CM_SQLCODE;
	}

	return 0;
}

int Tel_save_rel_Fet_Sel ( struct tel_save_rel_c *tel_save_rel_c , char * reply )
{

	int   ret;

	EXEC SQL FETCH sel_tel_save_rel INTO :tel_save_rel_c;
	if (sqlca.sqlcode&&sqlca.sqlcode!=1403){
		sprintf(acErrMsg,"Fetch tel_save_rel error!!! %d",sqlca.sqlcode);
		WRITEMSG
		strcpy (reply,"D103");
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == 1403 ){
		sprintf(acErrMsg,"Fetch tel_save_rel finished!!! %d",sqlca.sqlcode);
		WRITEMSG
		strcpy (reply,"D104");
		return CM_SQLCODE;
	}
	zip_struct(tel_save_rel_c);

	return 0;
}

int Tel_save_rel_Clo_Sel (){
	EXEC SQL CLOSE sel_tel_save_rel;
	return 0;
}

/*****************************************************************************/
/****                              修改函数部分                           ****/
/*****************************************************************************/
int Tel_save_rel_Dec_Upd( reply , fmtstr , va_alist)
char    *reply;
char    *fmtstr;
va_dcl
{
	EXEC    SQL BEGIN   DECLARE SECTION;
		char    comm[1000];
	EXEC    SQL END     DECLARE SECTION;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	sprintf ( comm , "SELECT rowid,tel_save_rel.* FROM tel_save_rel WHERE  ");
	key_strcat(comm,wherelist);
	strcat(comm," FOR UPDATE WAIT 5 ");
	vtcp_log("%s,%d,SQLSTR=[%s]\n",__FILE__,__LINE__,comm);
	sqlca.sqlcode=0;
	EXEC SQL PREPARE tel_save_rel_upd FROM :comm;

	EXEC SQL DECLARE upd_tel_save_rel CURSOR FOR tel_save_rel_upd;

	EXEC SQL OPEN upd_tel_save_rel;
	if (sqlca.sqlcode){
		sprintf(acErrMsg,"open tel_save_rel error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D102" );
		return CM_SQLCODE;
	}

	return 0;
}

int Tel_save_rel_Fet_Upd( struct tel_save_rel_c *tel_save_rel_c , char * reply ){
	int   ret;

	EXEC SQL FETCH upd_tel_save_rel INTO :tel_save_rel_c;
	if ( sqlca.sqlcode && sqlca.sqlcode!=1403 ){
		sprintf(acErrMsg,"FETCH upd tel_save_rel error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D103" );
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == 1403 ){
		sprintf(acErrMsg,"FETCH tel_save_rel finished %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D104" );
		return CM_SQLCODE;
	}
	zip_struct(tel_save_rel_c);

	return 0;
}

int Tel_save_rel_Upd_Upd( struct tel_save_rel_c tel_save_rel_c , char * reply){
	int ret;

	EXEC SQL UPDATE tel_save_rel SET tel=:tel_save_rel_c.tel,
			ac_no=:tel_save_rel_c.ac_no,
			ac_seqn=:tel_save_rel_c.ac_seqn,
			cif_no=:tel_save_rel_c.cif_no,
			tx_type=:tel_save_rel_c.tx_type,
			sts=:tel_save_rel_c.sts,
			tx_date=:tel_save_rel_c.tx_date,
			tx_time=:tel_save_rel_c.tx_time,
			tx_tel=:tel_save_rel_c.tx_tel,
			br_no=:tel_save_rel_c.br_no,
			trace_no=:tel_save_rel_c.trace_no,
			brf=:tel_save_rel_c.brf
	WHERE rowid=:tel_save_rel_c.rowid;
	if ( sqlca.sqlcode && sqlca.sqlcode != 1403 ){
		sprintf(acErrMsg,"UPDATE tel_save_rel error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D105" );
		return CM_SQLCODE;
	}

	return 0;
}


int Tel_save_rel_Del_Upd(struct tel_save_rel_c tel_save_rel_c , char * reply  ){

	EXEC SQL DELETE FROM tel_save_rel WHERE rowid=:tel_save_rel_c.rowid;
	if ( sqlca.sqlcode ){
		sprintf(acErrMsg,"DELETE tel_save_rel error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D105" );
		return CM_SQLCODE;
	}

	return 0;
}

int Tel_save_rel_Clo_Upd( ){
	EXEC SQL CLOSE upd_tel_save_rel;
	return 0;
}

/*****************************************************************************/
/****                              增加函数部分                           ****/
/*****************************************************************************/
int Tel_save_rel_Ins( struct tel_save_rel_c tel_save_rel_c , char * reply ){
	int ret;

	EXEC SQL INSERT INTO tel_save_rel VALUES (:tel_save_rel_c.tel,
			:tel_save_rel_c.ac_no,
			:tel_save_rel_c.ac_seqn,
			:tel_save_rel_c.cif_no,
			:tel_save_rel_c.tx_type,
			:tel_save_rel_c.sts,
			:tel_save_rel_c.tx_date,
			:tel_save_rel_c.tx_time,
			:tel_save_rel_c.tx_tel,
			:tel_save_rel_c.br_no,
			:tel_save_rel_c.trace_no,
			:tel_save_rel_c.brf);
	if ( sqlca.sqlcode && sqlca.sqlcode != -1 )
	{
		sprintf(acErrMsg,"INSERT tel_save_rel error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D107" );
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == -1 )
	{
		sprintf(acErrMsg,"INSERT tel_save_rel error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D108" );
		return CM_SQLCODE;
	}

	return 0;
}
