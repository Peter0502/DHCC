#include<stdio.h>
#include<varargs.h>

#define EXTERN
#include"global.h"


EXEC SQL INCLUDE SQLCA;
#include"mo_righ_invest_c.h"
#define CM_SQLCODE sqlca.sqlcode==1403?100:(sqlca.sqlcode==-1?-239:sqlca.sqlcode)

int mo_righ_invest_con ( struct mo_righ_invest_c , char *);
int put_mystery( char *, char * );
char *zip_tail(char *s);
static void zip_struct(struct mo_righ_invest_c* ps){
	zip_tail(ps->rowid);
	zip_tail(ps->br_no);
	zip_tail(ps->bkrl_code);
	zip_tail(ps->pact_no);
	zip_tail(ps->invst_type);
	zip_tail(ps->cif_code);
	zip_tail(ps->name);
	zip_tail(ps->sts);
}
int Mo_righ_invest_Debug(struct mo_righ_invest_c *ps){
	vtcp_log("mo_righ_invest_c.rowid=[%s]\n",ps->rowid);
	vtcp_log("mo_righ_invest_c.ac_id=[%ld]\n",ps->ac_id);
	vtcp_log("mo_righ_invest_c.br_no=[%s]\n",ps->br_no);
	vtcp_log("mo_righ_invest_c.bkrl_code=[%s]\n",ps->bkrl_code);
	vtcp_log("mo_righ_invest_c.pact_no=[%s]\n",ps->pact_no);
	vtcp_log("mo_righ_invest_c.invst_type=[%s]\n",ps->invst_type);
	vtcp_log("mo_righ_invest_c.num=[%ld]\n",ps->num);
	vtcp_log("mo_righ_invest_c.amt=[%f]\n",ps->amt);
	vtcp_log("mo_righ_invest_c.incm_bal=[%f]\n",ps->incm_bal);
	vtcp_log("mo_righ_invest_c.cif_code=[%s]\n",ps->cif_code);
	vtcp_log("mo_righ_invest_c.name=[%s]\n",ps->name);
	vtcp_log("mo_righ_invest_c.wrk_date=[%ld]\n",ps->wrk_date);
	vtcp_log("mo_righ_invest_c.trace_no=[%ld]\n",ps->trace_no);
	vtcp_log("mo_righ_invest_c.sts=[%s]\n",ps->sts);
	return(0);
}
/*****************************************************************************/
/****                              查询函数部分[]                       ****/
/*****************************************************************************/
int Mo_righ_invest_Sel(reply,mo_righ_invest_c,fmtstr,va_alist)
char    *reply;
struct  mo_righ_invest_c *mo_righ_invest_c;
char    *fmtstr;
va_dcl
{
	int   ret;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	ret = Mo_righ_invest_Dec_Sel( reply , "%s" , wherelist );
	if (ret){
		WRITEMSG
		return ret;
	}
	ret = Mo_righ_invest_Fet_Sel( mo_righ_invest_c , reply );
	if (ret){
		WRITEMSG
		return ret;
	}

	Mo_righ_invest_Clo_Sel();

	return 0;
}



char *key_strcat(char *,char *);
int Mo_righ_invest_Dec_Sel ( reply , fmtstr , va_alist )
char    *reply;
char    *fmtstr;
va_dcl
{
	EXEC    SQL BEGIN   DECLARE SECTION;
		char    comm[1000];
	EXEC    SQL END     DECLARE SECTION;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	sprintf ( comm ," SELECT rowid,mo_righ_invest.* FROM mo_righ_invest WHERE  ");
	key_strcat(comm,wherelist);

	vtcp_log("%s,%d,SQLSTR=[%s]\n",__FILE__,__LINE__,comm);
	sqlca.sqlcode=0;
	EXEC SQL PREPARE mo_righ_invest_sel FROM :comm;
	EXEC SQL DECLARE sel_mo_righ_invest CURSOR FOR mo_righ_invest_sel;

	EXEC SQL OPEN sel_mo_righ_invest;
	if (sqlca.sqlcode){
		sprintf(acErrMsg,"OPEN mo_righ_invest error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D102" );
		return CM_SQLCODE;
	}

	return 0;
}

int Mo_righ_invest_Fet_Sel ( struct mo_righ_invest_c *mo_righ_invest_c , char * reply )
{

	int   ret;

	EXEC SQL FETCH sel_mo_righ_invest INTO :mo_righ_invest_c;
	if (sqlca.sqlcode&&sqlca.sqlcode!=1403){
		sprintf(acErrMsg,"Fetch mo_righ_invest error!!! %d",sqlca.sqlcode);
		WRITEMSG
		strcpy (reply,"D103");
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == 1403 ){
		sprintf(acErrMsg,"Fetch mo_righ_invest finished!!! %d",sqlca.sqlcode);
		WRITEMSG
		strcpy (reply,"D104");
		return CM_SQLCODE;
	}
	zip_struct(mo_righ_invest_c);

	return 0;
}

int Mo_righ_invest_Clo_Sel (){
	EXEC SQL CLOSE sel_mo_righ_invest;
	return 0;
}

/*****************************************************************************/
/****                              修改函数部分                           ****/
/*****************************************************************************/
int Mo_righ_invest_Dec_Upd( reply , fmtstr , va_alist)
char    *reply;
char    *fmtstr;
va_dcl
{
	EXEC    SQL BEGIN   DECLARE SECTION;
		char    comm[1000];
	EXEC    SQL END     DECLARE SECTION;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	sprintf ( comm , "SELECT rowid,mo_righ_invest.* FROM mo_righ_invest WHERE  ");
	key_strcat(comm,wherelist);
	strcat(comm," FOR UPDATE WAIT 5 ");
	vtcp_log("%s,%d,SQLSTR=[%s]\n",__FILE__,__LINE__,comm);
	sqlca.sqlcode=0;
	EXEC SQL PREPARE mo_righ_invest_upd FROM :comm;

	EXEC SQL DECLARE upd_mo_righ_invest CURSOR FOR mo_righ_invest_upd;

	EXEC SQL OPEN upd_mo_righ_invest;
	if (sqlca.sqlcode){
		sprintf(acErrMsg,"open mo_righ_invest error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D102" );
		return CM_SQLCODE;
	}

	return 0;
}

int Mo_righ_invest_Fet_Upd( struct mo_righ_invest_c *mo_righ_invest_c , char * reply ){
	int   ret;

	EXEC SQL FETCH upd_mo_righ_invest INTO :mo_righ_invest_c;
	if ( sqlca.sqlcode && sqlca.sqlcode!=1403 ){
		sprintf(acErrMsg,"FETCH upd mo_righ_invest error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D103" );
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == 1403 ){
		sprintf(acErrMsg,"FETCH mo_righ_invest finished %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D104" );
		return CM_SQLCODE;
	}
	zip_struct(mo_righ_invest_c);

	return 0;
}

int Mo_righ_invest_Upd_Upd( struct mo_righ_invest_c mo_righ_invest_c , char * reply){
	int ret;

	EXEC SQL UPDATE mo_righ_invest SET ac_id=:mo_righ_invest_c.ac_id,
			br_no=:mo_righ_invest_c.br_no,
			bkrl_code=:mo_righ_invest_c.bkrl_code,
			pact_no=:mo_righ_invest_c.pact_no,
			invst_type=:mo_righ_invest_c.invst_type,
			num=:mo_righ_invest_c.num,
			amt=:mo_righ_invest_c.amt,
			incm_bal=:mo_righ_invest_c.incm_bal,
			cif_code=:mo_righ_invest_c.cif_code,
			name=:mo_righ_invest_c.name,
			wrk_date=:mo_righ_invest_c.wrk_date,
			trace_no=:mo_righ_invest_c.trace_no,
			sts=:mo_righ_invest_c.sts
	WHERE rowid=:mo_righ_invest_c.rowid;
	if ( sqlca.sqlcode && sqlca.sqlcode != 1403 ){
		sprintf(acErrMsg,"UPDATE mo_righ_invest error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D105" );
		return CM_SQLCODE;
	}

	return 0;
}


int Mo_righ_invest_Del_Upd(struct mo_righ_invest_c mo_righ_invest_c , char * reply  ){

	EXEC SQL DELETE FROM mo_righ_invest WHERE rowid=:mo_righ_invest_c.rowid;
	if ( sqlca.sqlcode ){
		sprintf(acErrMsg,"DELETE mo_righ_invest error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D105" );
		return CM_SQLCODE;
	}

	return 0;
}

int Mo_righ_invest_Clo_Upd( ){
	EXEC SQL CLOSE upd_mo_righ_invest;
	return 0;
}

/*****************************************************************************/
/****                              增加函数部分                           ****/
/*****************************************************************************/
int Mo_righ_invest_Ins( struct mo_righ_invest_c mo_righ_invest_c , char * reply ){
	int ret;

	EXEC SQL INSERT INTO mo_righ_invest VALUES (:mo_righ_invest_c.ac_id,
			:mo_righ_invest_c.br_no,
			:mo_righ_invest_c.bkrl_code,
			:mo_righ_invest_c.pact_no,
			:mo_righ_invest_c.invst_type,
			:mo_righ_invest_c.num,
			:mo_righ_invest_c.amt,
			:mo_righ_invest_c.incm_bal,
			:mo_righ_invest_c.cif_code,
			:mo_righ_invest_c.name,
			:mo_righ_invest_c.wrk_date,
			:mo_righ_invest_c.trace_no,
			:mo_righ_invest_c.sts);
	if ( sqlca.sqlcode && sqlca.sqlcode != -1 )
	{
		sprintf(acErrMsg,"INSERT mo_righ_invest error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D107" );
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == -1 )
	{
		sprintf(acErrMsg,"INSERT mo_righ_invest error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D108" );
		return CM_SQLCODE;
	}

	return 0;
}
