#include<stdio.h>
#include<varargs.h>

#define EXTERN
#include"global.h"


EXEC SQL INCLUDE SQLCA;
#include"netbank_cif_ukey_rel_c.h"
#define CM_SQLCODE sqlca.sqlcode==1403?100:(sqlca.sqlcode==-1?-239:sqlca.sqlcode)

int netbank_cif_ukey_rel_con ( struct netbank_cif_ukey_rel_c , char *);
int put_mystery( char *, char * );
char *zip_tail(char *s);
static void zip_struct(struct netbank_cif_ukey_rel_c* ps){
	zip_tail(ps->rowid);
	zip_tail(ps->ukey);
	zip_tail(ps->sts);
}
int Netbank_cif_ukey_rel_Debug(struct netbank_cif_ukey_rel_c *ps){
	vtcp_log("netbank_cif_ukey_rel_c.rowid=[%s]\n",ps->rowid);
	vtcp_log("netbank_cif_ukey_rel_c.cif_no=[%ld]\n",ps->cif_no);
	vtcp_log("netbank_cif_ukey_rel_c.ukey=[%s]\n",ps->ukey);
	vtcp_log("netbank_cif_ukey_rel_c.sts=[%s]\n",ps->sts);
	vtcp_log("netbank_cif_ukey_rel_c.sign_date=[%ld]\n",ps->sign_date);
	vtcp_log("netbank_cif_ukey_rel_c.cancel_date=[%ld]\n",ps->cancel_date);
	return(0);
}
/*****************************************************************************/
/****                              查询函数部分[]                       ****/
/*****************************************************************************/
int Netbank_cif_ukey_rel_Sel(reply,netbank_cif_ukey_rel_c,fmtstr,va_alist)
char    *reply;
struct  netbank_cif_ukey_rel_c *netbank_cif_ukey_rel_c;
char    *fmtstr;
va_dcl
{
	int   ret;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	ret = Netbank_cif_ukey_rel_Dec_Sel( reply , "%s" , wherelist );
	if (ret){
		WRITEMSG
		return ret;
	}
	ret = Netbank_cif_ukey_rel_Fet_Sel( netbank_cif_ukey_rel_c , reply );
	if (ret){
		WRITEMSG
		return ret;
	}

	Netbank_cif_ukey_rel_Clo_Sel();

	return 0;
}



char *key_strcat(char *,char *);
int Netbank_cif_ukey_rel_Dec_Sel ( reply , fmtstr , va_alist )
char    *reply;
char    *fmtstr;
va_dcl
{
	EXEC    SQL BEGIN   DECLARE SECTION;
		char    comm[1000];
	EXEC    SQL END     DECLARE SECTION;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	sprintf ( comm ," SELECT rowid,netbank_cif_ukey_rel.* FROM netbank_cif_ukey_rel WHERE  ");
	key_strcat(comm,wherelist);

	vtcp_log("%s,%d,SQLSTR=[%s]\n",__FILE__,__LINE__,comm);
	sqlca.sqlcode=0;
	EXEC SQL PREPARE netbank_cif_ukey_rel_sel FROM :comm;
	EXEC SQL DECLARE sel_netbank_cif_ukey_rel CURSOR FOR netbank_cif_ukey_rel_sel;

	EXEC SQL OPEN sel_netbank_cif_ukey_rel;
	if (sqlca.sqlcode){
		sprintf(acErrMsg,"OPEN netbank_cif_ukey_rel error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D102" );
		return CM_SQLCODE;
	}

	return 0;
}

int Netbank_cif_ukey_rel_Fet_Sel ( struct netbank_cif_ukey_rel_c *netbank_cif_ukey_rel_c , char * reply )
{

	int   ret;

	EXEC SQL FETCH sel_netbank_cif_ukey_rel INTO :netbank_cif_ukey_rel_c;
	if (sqlca.sqlcode&&sqlca.sqlcode!=1403){
		sprintf(acErrMsg,"Fetch netbank_cif_ukey_rel error!!! %d",sqlca.sqlcode);
		WRITEMSG
		strcpy (reply,"D103");
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == 1403 ){
		sprintf(acErrMsg,"Fetch netbank_cif_ukey_rel finished!!! %d",sqlca.sqlcode);
		WRITEMSG
		strcpy (reply,"D104");
		return CM_SQLCODE;
	}
	zip_struct(netbank_cif_ukey_rel_c);

	return 0;
}

int Netbank_cif_ukey_rel_Clo_Sel (){
	EXEC SQL CLOSE sel_netbank_cif_ukey_rel;
	return 0;
}

/*****************************************************************************/
/****                              修改函数部分                           ****/
/*****************************************************************************/
int Netbank_cif_ukey_rel_Dec_Upd( reply , fmtstr , va_alist)
char    *reply;
char    *fmtstr;
va_dcl
{
	EXEC    SQL BEGIN   DECLARE SECTION;
		char    comm[1000];
	EXEC    SQL END     DECLARE SECTION;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	sprintf ( comm , "SELECT rowid,netbank_cif_ukey_rel.* FROM netbank_cif_ukey_rel WHERE  ");
	key_strcat(comm,wherelist);
	strcat(comm," FOR UPDATE WAIT 5 ");
	vtcp_log("%s,%d,SQLSTR=[%s]\n",__FILE__,__LINE__,comm);
	sqlca.sqlcode=0;
	EXEC SQL PREPARE netbank_cif_ukey_rel_upd FROM :comm;

	EXEC SQL DECLARE upd_netbank_cif_ukey_rel CURSOR FOR netbank_cif_ukey_rel_upd;

	EXEC SQL OPEN upd_netbank_cif_ukey_rel;
	if (sqlca.sqlcode){
		sprintf(acErrMsg,"open netbank_cif_ukey_rel error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D102" );
		return CM_SQLCODE;
	}

	return 0;
}

int Netbank_cif_ukey_rel_Fet_Upd( struct netbank_cif_ukey_rel_c *netbank_cif_ukey_rel_c , char * reply ){
	int   ret;

	EXEC SQL FETCH upd_netbank_cif_ukey_rel INTO :netbank_cif_ukey_rel_c;
	if ( sqlca.sqlcode && sqlca.sqlcode!=1403 ){
		sprintf(acErrMsg,"FETCH upd netbank_cif_ukey_rel error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D103" );
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == 1403 ){
		sprintf(acErrMsg,"FETCH netbank_cif_ukey_rel finished %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D104" );
		return CM_SQLCODE;
	}
	zip_struct(netbank_cif_ukey_rel_c);

	return 0;
}

int Netbank_cif_ukey_rel_Upd_Upd( struct netbank_cif_ukey_rel_c netbank_cif_ukey_rel_c , char * reply){
	int ret;

	EXEC SQL UPDATE netbank_cif_ukey_rel SET cif_no=:netbank_cif_ukey_rel_c.cif_no,
			ukey=:netbank_cif_ukey_rel_c.ukey,
			sts=:netbank_cif_ukey_rel_c.sts,
			sign_date=:netbank_cif_ukey_rel_c.sign_date,
			cancel_date=:netbank_cif_ukey_rel_c.cancel_date
	WHERE rowid=:netbank_cif_ukey_rel_c.rowid;
	if ( sqlca.sqlcode && sqlca.sqlcode != 1403 ){
		sprintf(acErrMsg,"UPDATE netbank_cif_ukey_rel error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D105" );
		return CM_SQLCODE;
	}

	return 0;
}


int Netbank_cif_ukey_rel_Del_Upd(struct netbank_cif_ukey_rel_c netbank_cif_ukey_rel_c , char * reply  ){

	EXEC SQL DELETE FROM netbank_cif_ukey_rel WHERE rowid=:netbank_cif_ukey_rel_c.rowid;
	if ( sqlca.sqlcode ){
		sprintf(acErrMsg,"DELETE netbank_cif_ukey_rel error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D105" );
		return CM_SQLCODE;
	}

	return 0;
}

int Netbank_cif_ukey_rel_Clo_Upd( ){
	EXEC SQL CLOSE upd_netbank_cif_ukey_rel;
	return 0;
}

/*****************************************************************************/
/****                              增加函数部分                           ****/
/*****************************************************************************/
int Netbank_cif_ukey_rel_Ins( struct netbank_cif_ukey_rel_c netbank_cif_ukey_rel_c , char * reply ){
	int ret;

	EXEC SQL INSERT INTO netbank_cif_ukey_rel VALUES (:netbank_cif_ukey_rel_c.cif_no,
			:netbank_cif_ukey_rel_c.ukey,
			:netbank_cif_ukey_rel_c.sts,
			:netbank_cif_ukey_rel_c.sign_date,
			:netbank_cif_ukey_rel_c.cancel_date);
	if ( sqlca.sqlcode && sqlca.sqlcode != -1 )
	{
		sprintf(acErrMsg,"INSERT netbank_cif_ukey_rel error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D107" );
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == -1 )
	{
		sprintf(acErrMsg,"INSERT netbank_cif_ukey_rel error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D108" );
		return CM_SQLCODE;
	}

	return 0;
}
