#include<stdio.h>
#include<varargs.h>

#define EXTERN
#include"global.h"


EXEC SQL INCLUDE SQLCA;
#include"mis_iosreportdatatmp_c.h"
#define CM_SQLCODE sqlca.sqlcode==1403?100:(sqlca.sqlcode==-1?-239:sqlca.sqlcode)

int mis_iosreportdatatmp_con ( struct mis_iosreportdatatmp_c , char *);
int put_mystery( char *, char * );
char *zip_tail(char *s);
static void zip_struct(struct mis_iosreportdatatmp_c* ps){
	zip_tail(ps->rowid);
	zip_tail(ps->brno);
	zip_tail(ps->pigday);
	zip_tail(ps->name);
	zip_tail(ps->tdbal);
	zip_tail(ps->ydbal);
	zip_tail(ps->fillter);
}
int Mis_iosreportdatatmp_Debug(struct mis_iosreportdatatmp_c *ps){
	vtcp_log("mis_iosreportdatatmp_c.rowid=[%s]\n",ps->rowid);
	vtcp_log("mis_iosreportdatatmp_c.brno=[%s]\n",ps->brno);
	vtcp_log("mis_iosreportdatatmp_c.pigday=[%s]\n",ps->pigday);
	vtcp_log("mis_iosreportdatatmp_c.flag=[%ld]\n",ps->flag);
	vtcp_log("mis_iosreportdatatmp_c.reprownum=[%ld]\n",ps->reprownum);
	vtcp_log("mis_iosreportdatatmp_c.name=[%s]\n",ps->name);
	vtcp_log("mis_iosreportdatatmp_c.tdbal=[%s]\n",ps->tdbal);
	vtcp_log("mis_iosreportdatatmp_c.ydbal=[%s]\n",ps->ydbal);
	vtcp_log("mis_iosreportdatatmp_c.tmbal=[%f]\n",ps->tmbal);
	vtcp_log("mis_iosreportdatatmp_c.tdmbal=[%f]\n",ps->tdmbal);
	vtcp_log("mis_iosreportdatatmp_c.tcmbal=[%f]\n",ps->tcmbal);
	vtcp_log("mis_iosreportdatatmp_c.cdcnt=[%ld]\n",ps->cdcnt);
	vtcp_log("mis_iosreportdatatmp_c.cdamt=[%f]\n",ps->cdamt);
	vtcp_log("mis_iosreportdatatmp_c.cccnt=[%ld]\n",ps->cccnt);
	vtcp_log("mis_iosreportdatatmp_c.ccamt=[%f]\n",ps->ccamt);
	vtcp_log("mis_iosreportdatatmp_c.mdcnt=[%ld]\n",ps->mdcnt);
	vtcp_log("mis_iosreportdatatmp_c.mdamt=[%f]\n",ps->mdamt);
	vtcp_log("mis_iosreportdatatmp_c.mccnt=[%ld]\n",ps->mccnt);
	vtcp_log("mis_iosreportdatatmp_c.mcamt=[%f]\n",ps->mcamt);
	vtcp_log("mis_iosreportdatatmp_c.fillter=[%s]\n",ps->fillter);
	return(0);
}
/*****************************************************************************/
/****                              查询函数部分[]                       ****/
/*****************************************************************************/
int Mis_iosreportdatatmp_Sel(reply,mis_iosreportdatatmp_c,fmtstr,va_alist)
char    *reply;
struct  mis_iosreportdatatmp_c *mis_iosreportdatatmp_c;
char    *fmtstr;
va_dcl
{
	int   ret;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	ret = Mis_iosreportdatatmp_Dec_Sel( reply , "%s" , wherelist );
	if (ret){
		WRITEMSG
		return ret;
	}
	ret = Mis_iosreportdatatmp_Fet_Sel( mis_iosreportdatatmp_c , reply );
	if (ret){
		WRITEMSG
		return ret;
	}

	Mis_iosreportdatatmp_Clo_Sel();

	return 0;
}



char *key_strcat(char *,char *);
int Mis_iosreportdatatmp_Dec_Sel ( reply , fmtstr , va_alist )
char    *reply;
char    *fmtstr;
va_dcl
{
	EXEC    SQL BEGIN   DECLARE SECTION;
		char    comm[1000];
	EXEC    SQL END     DECLARE SECTION;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	sprintf ( comm ," SELECT rowid,mis_iosreportdatatmp.* FROM mis_iosreportdatatmp WHERE  ");
	key_strcat(comm,wherelist);

	vtcp_log("%s,%d,SQLSTR=[%s]\n",__FILE__,__LINE__,comm);
	sqlca.sqlcode=0;
	EXEC SQL PREPARE mis_iosreportdatatmp_sel FROM :comm;
	EXEC SQL DECLARE sel_mis_iosreportdatatmp CURSOR FOR mis_iosreportdatatmp_sel;

	EXEC SQL OPEN sel_mis_iosreportdatatmp;
	if (sqlca.sqlcode){
		sprintf(acErrMsg,"OPEN mis_iosreportdatatmp error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D102" );
		return CM_SQLCODE;
	}

	return 0;
}

int Mis_iosreportdatatmp_Fet_Sel ( struct mis_iosreportdatatmp_c *mis_iosreportdatatmp_c , char * reply )
{

	int   ret;

	EXEC SQL FETCH sel_mis_iosreportdatatmp INTO :mis_iosreportdatatmp_c;
	if (sqlca.sqlcode&&sqlca.sqlcode!=1403){
		sprintf(acErrMsg,"Fetch mis_iosreportdatatmp error!!! %d",sqlca.sqlcode);
		WRITEMSG
		strcpy (reply,"D103");
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == 1403 ){
		sprintf(acErrMsg,"Fetch mis_iosreportdatatmp finished!!! %d",sqlca.sqlcode);
		WRITEMSG
		strcpy (reply,"D104");
		return CM_SQLCODE;
	}
	zip_struct(mis_iosreportdatatmp_c);

	return 0;
}

int Mis_iosreportdatatmp_Clo_Sel (){
	EXEC SQL CLOSE sel_mis_iosreportdatatmp;
	return 0;
}

/*****************************************************************************/
/****                              修改函数部分                           ****/
/*****************************************************************************/
int Mis_iosreportdatatmp_Dec_Upd( reply , fmtstr , va_alist)
char    *reply;
char    *fmtstr;
va_dcl
{
	EXEC    SQL BEGIN   DECLARE SECTION;
		char    comm[1000];
	EXEC    SQL END     DECLARE SECTION;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	sprintf ( comm , "SELECT rowid,mis_iosreportdatatmp.* FROM mis_iosreportdatatmp WHERE  ");
	key_strcat(comm,wherelist);
	strcat(comm," FOR UPDATE WAIT 5 ");
	vtcp_log("%s,%d,SQLSTR=[%s]\n",__FILE__,__LINE__,comm);
	sqlca.sqlcode=0;
	EXEC SQL PREPARE mis_iosreportdatatmp_upd FROM :comm;

	EXEC SQL DECLARE upd_mis_iosreportdatatmp CURSOR FOR mis_iosreportdatatmp_upd;

	EXEC SQL OPEN upd_mis_iosreportdatatmp;
	if (sqlca.sqlcode){
		sprintf(acErrMsg,"open mis_iosreportdatatmp error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D102" );
		return CM_SQLCODE;
	}

	return 0;
}

int Mis_iosreportdatatmp_Fet_Upd( struct mis_iosreportdatatmp_c *mis_iosreportdatatmp_c , char * reply ){
	int   ret;

	EXEC SQL FETCH upd_mis_iosreportdatatmp INTO :mis_iosreportdatatmp_c;
	if ( sqlca.sqlcode && sqlca.sqlcode!=1403 ){
		sprintf(acErrMsg,"FETCH upd mis_iosreportdatatmp error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D103" );
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == 1403 ){
		sprintf(acErrMsg,"FETCH mis_iosreportdatatmp finished %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D104" );
		return CM_SQLCODE;
	}
	zip_struct(mis_iosreportdatatmp_c);

	return 0;
}

int Mis_iosreportdatatmp_Upd_Upd( struct mis_iosreportdatatmp_c mis_iosreportdatatmp_c , char * reply){
	int ret;

	EXEC SQL UPDATE mis_iosreportdatatmp SET brno=:mis_iosreportdatatmp_c.brno,
			pigday=:mis_iosreportdatatmp_c.pigday,
			flag=:mis_iosreportdatatmp_c.flag,
			reprownum=:mis_iosreportdatatmp_c.reprownum,
			name=:mis_iosreportdatatmp_c.name,
			tdbal=:mis_iosreportdatatmp_c.tdbal,
			ydbal=:mis_iosreportdatatmp_c.ydbal,
			tmbal=:mis_iosreportdatatmp_c.tmbal,
			tdmbal=:mis_iosreportdatatmp_c.tdmbal,
			tcmbal=:mis_iosreportdatatmp_c.tcmbal,
			cdcnt=:mis_iosreportdatatmp_c.cdcnt,
			cdamt=:mis_iosreportdatatmp_c.cdamt,
			cccnt=:mis_iosreportdatatmp_c.cccnt,
			ccamt=:mis_iosreportdatatmp_c.ccamt,
			mdcnt=:mis_iosreportdatatmp_c.mdcnt,
			mdamt=:mis_iosreportdatatmp_c.mdamt,
			mccnt=:mis_iosreportdatatmp_c.mccnt,
			mcamt=:mis_iosreportdatatmp_c.mcamt,
			fillter=:mis_iosreportdatatmp_c.fillter
	WHERE rowid=:mis_iosreportdatatmp_c.rowid;
	if ( sqlca.sqlcode && sqlca.sqlcode != 1403 ){
		sprintf(acErrMsg,"UPDATE mis_iosreportdatatmp error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D105" );
		return CM_SQLCODE;
	}

	return 0;
}


int Mis_iosreportdatatmp_Del_Upd(struct mis_iosreportdatatmp_c mis_iosreportdatatmp_c , char * reply  ){

	EXEC SQL DELETE FROM mis_iosreportdatatmp WHERE rowid=:mis_iosreportdatatmp_c.rowid;
	if ( sqlca.sqlcode ){
		sprintf(acErrMsg,"DELETE mis_iosreportdatatmp error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D105" );
		return CM_SQLCODE;
	}

	return 0;
}

int Mis_iosreportdatatmp_Clo_Upd( ){
	EXEC SQL CLOSE upd_mis_iosreportdatatmp;
	return 0;
}

/*****************************************************************************/
/****                              增加函数部分                           ****/
/*****************************************************************************/
int Mis_iosreportdatatmp_Ins( struct mis_iosreportdatatmp_c mis_iosreportdatatmp_c , char * reply ){
	int ret;

	EXEC SQL INSERT INTO mis_iosreportdatatmp VALUES (:mis_iosreportdatatmp_c.brno,
			:mis_iosreportdatatmp_c.pigday,
			:mis_iosreportdatatmp_c.flag,
			:mis_iosreportdatatmp_c.reprownum,
			:mis_iosreportdatatmp_c.name,
			:mis_iosreportdatatmp_c.tdbal,
			:mis_iosreportdatatmp_c.ydbal,
			:mis_iosreportdatatmp_c.tmbal,
			:mis_iosreportdatatmp_c.tdmbal,
			:mis_iosreportdatatmp_c.tcmbal,
			:mis_iosreportdatatmp_c.cdcnt,
			:mis_iosreportdatatmp_c.cdamt,
			:mis_iosreportdatatmp_c.cccnt,
			:mis_iosreportdatatmp_c.ccamt,
			:mis_iosreportdatatmp_c.mdcnt,
			:mis_iosreportdatatmp_c.mdamt,
			:mis_iosreportdatatmp_c.mccnt,
			:mis_iosreportdatatmp_c.mcamt,
			:mis_iosreportdatatmp_c.fillter);
	if ( sqlca.sqlcode && sqlca.sqlcode != -1 )
	{
		sprintf(acErrMsg,"INSERT mis_iosreportdatatmp error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D107" );
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == -1 )
	{
		sprintf(acErrMsg,"INSERT mis_iosreportdatatmp error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D108" );
		return CM_SQLCODE;
	}

	return 0;
}
