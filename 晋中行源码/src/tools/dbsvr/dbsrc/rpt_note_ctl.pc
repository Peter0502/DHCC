#include<stdio.h>
#include<varargs.h>

#define EXTERN
#include"global.h"


EXEC SQL INCLUDE SQLCA;
#include"rpt_note_ctl_c.h"
#define CM_SQLCODE sqlca.sqlcode==1403?100:(sqlca.sqlcode==-1?-239:sqlca.sqlcode)

int rpt_note_ctl_con ( struct rpt_note_ctl_c , char *);
int put_mystery( char *, char * );
char *zip_tail(char *s);
static void zip_struct(struct rpt_note_ctl_c* ps){
	zip_tail(ps->rowid);
	zip_tail(ps->txname);
	zip_tail(ps->wherelist);
	zip_tail(ps->chk_code);
	zip_tail(ps->grouplist);
	zip_tail(ps->tw_acchrt);
	zip_tail(ps->summary);
	zip_tail(ps->flag);
}
int Rpt_note_ctl_Debug(struct rpt_note_ctl_c *ps){
	vtcp_log("rpt_note_ctl_c.rowid=[%s]\n",ps->rowid);
	vtcp_log("rpt_note_ctl_c.no=[%ld]\n",ps->no);
	vtcp_log("rpt_note_ctl_c.txname=[%s]\n",ps->txname);
	vtcp_log("rpt_note_ctl_c.wherelist=[%s]\n",ps->wherelist);
	vtcp_log("rpt_note_ctl_c.chk_code=[%s]\n",ps->chk_code);
	vtcp_log("rpt_note_ctl_c.txbalmd=[%ld]\n",ps->txbalmd);
	vtcp_log("rpt_note_ctl_c.grouplist=[%s]\n",ps->grouplist);
	vtcp_log("rpt_note_ctl_c.tw_acchrt=[%s]\n",ps->tw_acchrt);
	vtcp_log("rpt_note_ctl_c.summary=[%s]\n",ps->summary);
	vtcp_log("rpt_note_ctl_c.flag=[%s]\n",ps->flag);
	return(0);
}
/*****************************************************************************/
/****                              查询函数部分[]                       ****/
/*****************************************************************************/
int Rpt_note_ctl_Sel(reply,rpt_note_ctl_c,fmtstr,va_alist)
char    *reply;
struct  rpt_note_ctl_c *rpt_note_ctl_c;
char    *fmtstr;
va_dcl
{
	int   ret;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	ret = Rpt_note_ctl_Dec_Sel( reply , "%s" , wherelist );
	if (ret){
		WRITEMSG
		return ret;
	}
	ret = Rpt_note_ctl_Fet_Sel( rpt_note_ctl_c , reply );
	if (ret){
		WRITEMSG
		return ret;
	}

	Rpt_note_ctl_Clo_Sel();

	return 0;
}



char *key_strcat(char *,char *);
int Rpt_note_ctl_Dec_Sel ( reply , fmtstr , va_alist )
char    *reply;
char    *fmtstr;
va_dcl
{
	EXEC    SQL BEGIN   DECLARE SECTION;
		char    comm[1000];
	EXEC    SQL END     DECLARE SECTION;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	sprintf ( comm ," SELECT rowid,rpt_note_ctl.* FROM rpt_note_ctl WHERE  ");
	key_strcat(comm,wherelist);

	vtcp_log("%s,%d,SQLSTR=[%s]\n",__FILE__,__LINE__,comm);
	sqlca.sqlcode=0;
	EXEC SQL PREPARE rpt_note_ctl_sel FROM :comm;
	EXEC SQL DECLARE sel_rpt_note_ctl CURSOR FOR rpt_note_ctl_sel;

	EXEC SQL OPEN sel_rpt_note_ctl;
	if (sqlca.sqlcode){
		sprintf(acErrMsg,"OPEN rpt_note_ctl error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D102" );
		return CM_SQLCODE;
	}

	return 0;
}

int Rpt_note_ctl_Fet_Sel ( struct rpt_note_ctl_c *rpt_note_ctl_c , char * reply )
{

	int   ret;

	EXEC SQL FETCH sel_rpt_note_ctl INTO :rpt_note_ctl_c;
	if (sqlca.sqlcode&&sqlca.sqlcode!=1403){
		sprintf(acErrMsg,"Fetch rpt_note_ctl error!!! %d",sqlca.sqlcode);
		WRITEMSG
		strcpy (reply,"D103");
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == 1403 ){
		sprintf(acErrMsg,"Fetch rpt_note_ctl finished!!! %d",sqlca.sqlcode);
		WRITEMSG
		strcpy (reply,"D104");
		return CM_SQLCODE;
	}
	zip_struct(rpt_note_ctl_c);

	return 0;
}

int Rpt_note_ctl_Clo_Sel (){
	EXEC SQL CLOSE sel_rpt_note_ctl;
	return 0;
}

/*****************************************************************************/
/****                              修改函数部分                           ****/
/*****************************************************************************/
int Rpt_note_ctl_Dec_Upd( reply , fmtstr , va_alist)
char    *reply;
char    *fmtstr;
va_dcl
{
	EXEC    SQL BEGIN   DECLARE SECTION;
		char    comm[1000];
	EXEC    SQL END     DECLARE SECTION;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	sprintf ( comm , "SELECT rowid,rpt_note_ctl.* FROM rpt_note_ctl WHERE  ");
	key_strcat(comm,wherelist);
	strcat(comm," FOR UPDATE WAIT 5 ");
	vtcp_log("%s,%d,SQLSTR=[%s]\n",__FILE__,__LINE__,comm);
	sqlca.sqlcode=0;
	EXEC SQL PREPARE rpt_note_ctl_upd FROM :comm;

	EXEC SQL DECLARE upd_rpt_note_ctl CURSOR FOR rpt_note_ctl_upd;

	EXEC SQL OPEN upd_rpt_note_ctl;
	if (sqlca.sqlcode){
		sprintf(acErrMsg,"open rpt_note_ctl error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D102" );
		return CM_SQLCODE;
	}

	return 0;
}

int Rpt_note_ctl_Fet_Upd( struct rpt_note_ctl_c *rpt_note_ctl_c , char * reply ){
	int   ret;

	EXEC SQL FETCH upd_rpt_note_ctl INTO :rpt_note_ctl_c;
	if ( sqlca.sqlcode && sqlca.sqlcode!=1403 ){
		sprintf(acErrMsg,"FETCH upd rpt_note_ctl error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D103" );
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == 1403 ){
		sprintf(acErrMsg,"FETCH rpt_note_ctl finished %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D104" );
		return CM_SQLCODE;
	}
	zip_struct(rpt_note_ctl_c);

	return 0;
}

int Rpt_note_ctl_Upd_Upd( struct rpt_note_ctl_c rpt_note_ctl_c , char * reply){
	int ret;

	EXEC SQL UPDATE rpt_note_ctl SET no=:rpt_note_ctl_c.no,
			txname=:rpt_note_ctl_c.txname,
			wherelist=:rpt_note_ctl_c.wherelist,
			chk_code=:rpt_note_ctl_c.chk_code,
			txbalmd=:rpt_note_ctl_c.txbalmd,
			grouplist=:rpt_note_ctl_c.grouplist,
			tw_acchrt=:rpt_note_ctl_c.tw_acchrt,
			summary=:rpt_note_ctl_c.summary,
			flag=:rpt_note_ctl_c.flag
	WHERE rowid=:rpt_note_ctl_c.rowid;
	if ( sqlca.sqlcode && sqlca.sqlcode != 1403 ){
		sprintf(acErrMsg,"UPDATE rpt_note_ctl error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D105" );
		return CM_SQLCODE;
	}

	return 0;
}


int Rpt_note_ctl_Del_Upd(struct rpt_note_ctl_c rpt_note_ctl_c , char * reply  ){

	EXEC SQL DELETE FROM rpt_note_ctl WHERE rowid=:rpt_note_ctl_c.rowid;
	if ( sqlca.sqlcode ){
		sprintf(acErrMsg,"DELETE rpt_note_ctl error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D105" );
		return CM_SQLCODE;
	}

	return 0;
}

int Rpt_note_ctl_Clo_Upd( ){
	EXEC SQL CLOSE upd_rpt_note_ctl;
	return 0;
}

/*****************************************************************************/
/****                              增加函数部分                           ****/
/*****************************************************************************/
int Rpt_note_ctl_Ins( struct rpt_note_ctl_c rpt_note_ctl_c , char * reply ){
	int ret;

	EXEC SQL INSERT INTO rpt_note_ctl VALUES (:rpt_note_ctl_c.no,
			:rpt_note_ctl_c.txname,
			:rpt_note_ctl_c.wherelist,
			:rpt_note_ctl_c.chk_code,
			:rpt_note_ctl_c.txbalmd,
			:rpt_note_ctl_c.grouplist,
			:rpt_note_ctl_c.tw_acchrt,
			:rpt_note_ctl_c.summary,
			:rpt_note_ctl_c.flag);
	if ( sqlca.sqlcode && sqlca.sqlcode != -1 )
	{
		sprintf(acErrMsg,"INSERT rpt_note_ctl error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D107" );
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == -1 )
	{
		sprintf(acErrMsg,"INSERT rpt_note_ctl error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D108" );
		return CM_SQLCODE;
	}

	return 0;
}
