#include<stdio.h>
#include<varargs.h>

#define EXTERN
#include"global.h"


EXEC SQL INCLUDE SQLCA;
#include"hv_uniontab_c.h"
#define CM_SQLCODE sqlca.sqlcode==1403?100:(sqlca.sqlcode==-1?-239:sqlca.sqlcode)

int hv_uniontab_con ( struct hv_uniontab_c , char *);
int put_mystery( char *, char * );
char *zip_tail(char *s);
static void zip_struct(struct hv_uniontab_c* ps){
	zip_tail(ps->rowid);
	zip_tail(ps->or_br_no);
	zip_tail(ps->br_sts);
	zip_tail(ps->br_categ);
	zip_tail(ps->br_code);
	zip_tail(ps->sendco);
	zip_tail(ps->dir_br_code);
	zip_tail(ps->node_code);
	zip_tail(ps->superior);
	zip_tail(ps->pb_code);
	zip_tail(ps->city_code);
	zip_tail(ps->acct_sts);
	zip_tail(ps->acctsts_chg_dt);
	zip_tail(ps->acctsts_chg_tm);
	zip_tail(ps->br_name_f);
	zip_tail(ps->br_name_s);
	zip_tail(ps->addr);
	zip_tail(ps->phone);
	zip_tail(ps->email);
	zip_tail(ps->postcode);
	zip_tail(ps->start_date);
	zip_tail(ps->end_date);
	zip_tail(ps->chg_date);
	zip_tail(ps->fax);
	zip_tail(ps->telegraph);
	zip_tail(ps->qs_no);
	zip_tail(ps->acct_lvl);
	zip_tail(ps->obr_no_attr);
	zip_tail(ps->upd_type);
	zip_tail(ps->rec_upd_no);
	zip_tail(ps->km_actno);
}
int Hv_uniontab_Debug(struct hv_uniontab_c *ps){
	vtcp_log("hv_uniontab_c.rowid=[%s]\n",ps->rowid);
	vtcp_log("hv_uniontab_c.or_br_no=[%s]\n",ps->or_br_no);
	vtcp_log("hv_uniontab_c.br_sts=[%s]\n",ps->br_sts);
	vtcp_log("hv_uniontab_c.br_categ=[%s]\n",ps->br_categ);
	vtcp_log("hv_uniontab_c.br_code=[%s]\n",ps->br_code);
	vtcp_log("hv_uniontab_c.sendco=[%s]\n",ps->sendco);
	vtcp_log("hv_uniontab_c.dir_br_code=[%s]\n",ps->dir_br_code);
	vtcp_log("hv_uniontab_c.node_code=[%s]\n",ps->node_code);
	vtcp_log("hv_uniontab_c.superior=[%s]\n",ps->superior);
	vtcp_log("hv_uniontab_c.pb_code=[%s]\n",ps->pb_code);
	vtcp_log("hv_uniontab_c.city_code=[%s]\n",ps->city_code);
	vtcp_log("hv_uniontab_c.acct_sts=[%s]\n",ps->acct_sts);
	vtcp_log("hv_uniontab_c.acctsts_chg_dt=[%s]\n",ps->acctsts_chg_dt);
	vtcp_log("hv_uniontab_c.acctsts_chg_tm=[%s]\n",ps->acctsts_chg_tm);
	vtcp_log("hv_uniontab_c.br_name_f=[%s]\n",ps->br_name_f);
	vtcp_log("hv_uniontab_c.br_name_s=[%s]\n",ps->br_name_s);
	vtcp_log("hv_uniontab_c.addr=[%s]\n",ps->addr);
	vtcp_log("hv_uniontab_c.phone=[%s]\n",ps->phone);
	vtcp_log("hv_uniontab_c.email=[%s]\n",ps->email);
	vtcp_log("hv_uniontab_c.postcode=[%s]\n",ps->postcode);
	vtcp_log("hv_uniontab_c.start_date=[%s]\n",ps->start_date);
	vtcp_log("hv_uniontab_c.end_date=[%s]\n",ps->end_date);
	vtcp_log("hv_uniontab_c.chg_date=[%s]\n",ps->chg_date);
	vtcp_log("hv_uniontab_c.fax=[%s]\n",ps->fax);
	vtcp_log("hv_uniontab_c.telegraph=[%s]\n",ps->telegraph);
	vtcp_log("hv_uniontab_c.qs_no=[%s]\n",ps->qs_no);
	vtcp_log("hv_uniontab_c.acct_lvl=[%s]\n",ps->acct_lvl);
	vtcp_log("hv_uniontab_c.obr_no_attr=[%s]\n",ps->obr_no_attr);
	vtcp_log("hv_uniontab_c.upd_type=[%s]\n",ps->upd_type);
	vtcp_log("hv_uniontab_c.rec_upd_no=[%s]\n",ps->rec_upd_no);
	vtcp_log("hv_uniontab_c.km_actno=[%s]\n",ps->km_actno);
	return(0);
}
/*****************************************************************************/
/****                              查询函数部分[]                       ****/
/*****************************************************************************/
int Hv_uniontab_Sel(reply,hv_uniontab_c,fmtstr,va_alist)
char    *reply;
struct  hv_uniontab_c *hv_uniontab_c;
char    *fmtstr;
va_dcl
{
	int   ret;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	ret = Hv_uniontab_Dec_Sel( reply , "%s" , wherelist );
	if (ret){
		WRITEMSG
		return ret;
	}
	ret = Hv_uniontab_Fet_Sel( hv_uniontab_c , reply );
	if (ret){
		WRITEMSG
		return ret;
	}

	Hv_uniontab_Clo_Sel();

	return 0;
}



char *key_strcat(char *,char *);
int Hv_uniontab_Dec_Sel ( reply , fmtstr , va_alist )
char    *reply;
char    *fmtstr;
va_dcl
{
	EXEC    SQL BEGIN   DECLARE SECTION;
		char    comm[1000];
	EXEC    SQL END     DECLARE SECTION;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	sprintf ( comm ," SELECT rowid,hv_uniontab.* FROM hv_uniontab WHERE  ");
	key_strcat(comm,wherelist);

	vtcp_log("%s,%d,SQLSTR=[%s]\n",__FILE__,__LINE__,comm);
	sqlca.sqlcode=0;
	EXEC SQL PREPARE hv_uniontab_sel FROM :comm;
	EXEC SQL DECLARE sel_hv_uniontab CURSOR FOR hv_uniontab_sel;

	EXEC SQL OPEN sel_hv_uniontab;
	if (sqlca.sqlcode){
		sprintf(acErrMsg,"OPEN hv_uniontab error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D102" );
		return CM_SQLCODE;
	}

	return 0;
}

int Hv_uniontab_Fet_Sel ( struct hv_uniontab_c *hv_uniontab_c , char * reply )
{

	int   ret;

	EXEC SQL FETCH sel_hv_uniontab INTO :hv_uniontab_c;
	if (sqlca.sqlcode&&sqlca.sqlcode!=1403){
		sprintf(acErrMsg,"Fetch hv_uniontab error!!! %d",sqlca.sqlcode);
		WRITEMSG
		strcpy (reply,"D103");
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == 1403 ){
		sprintf(acErrMsg,"Fetch hv_uniontab finished!!! %d",sqlca.sqlcode);
		WRITEMSG
		strcpy (reply,"D104");
		return CM_SQLCODE;
	}
	zip_struct(hv_uniontab_c);

	return 0;
}

int Hv_uniontab_Clo_Sel (){
	EXEC SQL CLOSE sel_hv_uniontab;
	return 0;
}

/*****************************************************************************/
/****                              修改函数部分                           ****/
/*****************************************************************************/
int Hv_uniontab_Dec_Upd( reply , fmtstr , va_alist)
char    *reply;
char    *fmtstr;
va_dcl
{
	EXEC    SQL BEGIN   DECLARE SECTION;
		char    comm[1000];
	EXEC    SQL END     DECLARE SECTION;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	sprintf ( comm , "SELECT rowid,hv_uniontab.* FROM hv_uniontab WHERE  ");
	key_strcat(comm,wherelist);
	strcat(comm," FOR UPDATE WAIT 5 ");
	vtcp_log("%s,%d,SQLSTR=[%s]\n",__FILE__,__LINE__,comm);
	sqlca.sqlcode=0;
	EXEC SQL PREPARE hv_uniontab_upd FROM :comm;

	EXEC SQL DECLARE upd_hv_uniontab CURSOR FOR hv_uniontab_upd;

	EXEC SQL OPEN upd_hv_uniontab;
	if (sqlca.sqlcode){
		sprintf(acErrMsg,"open hv_uniontab error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D102" );
		return CM_SQLCODE;
	}

	return 0;
}

int Hv_uniontab_Fet_Upd( struct hv_uniontab_c *hv_uniontab_c , char * reply ){
	int   ret;

	EXEC SQL FETCH upd_hv_uniontab INTO :hv_uniontab_c;
	if ( sqlca.sqlcode && sqlca.sqlcode!=1403 ){
		sprintf(acErrMsg,"FETCH upd hv_uniontab error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D103" );
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == 1403 ){
		sprintf(acErrMsg,"FETCH hv_uniontab finished %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D104" );
		return CM_SQLCODE;
	}
	zip_struct(hv_uniontab_c);

	return 0;
}

int Hv_uniontab_Upd_Upd( struct hv_uniontab_c hv_uniontab_c , char * reply){
	int ret;

	EXEC SQL UPDATE hv_uniontab SET or_br_no=:hv_uniontab_c.or_br_no,
			br_sts=:hv_uniontab_c.br_sts,
			br_categ=:hv_uniontab_c.br_categ,
			br_code=:hv_uniontab_c.br_code,
			sendco=:hv_uniontab_c.sendco,
			dir_br_code=:hv_uniontab_c.dir_br_code,
			node_code=:hv_uniontab_c.node_code,
			superior=:hv_uniontab_c.superior,
			pb_code=:hv_uniontab_c.pb_code,
			city_code=:hv_uniontab_c.city_code,
			acct_sts=:hv_uniontab_c.acct_sts,
			acctsts_chg_dt=:hv_uniontab_c.acctsts_chg_dt,
			acctsts_chg_tm=:hv_uniontab_c.acctsts_chg_tm,
			br_name_f=:hv_uniontab_c.br_name_f,
			br_name_s=:hv_uniontab_c.br_name_s,
			addr=:hv_uniontab_c.addr,
			phone=:hv_uniontab_c.phone,
			email=:hv_uniontab_c.email,
			postcode=:hv_uniontab_c.postcode,
			start_date=:hv_uniontab_c.start_date,
			end_date=:hv_uniontab_c.end_date,
			chg_date=:hv_uniontab_c.chg_date,
			fax=:hv_uniontab_c.fax,
			telegraph=:hv_uniontab_c.telegraph,
			qs_no=:hv_uniontab_c.qs_no,
			acct_lvl=:hv_uniontab_c.acct_lvl,
			obr_no_attr=:hv_uniontab_c.obr_no_attr,
			upd_type=:hv_uniontab_c.upd_type,
			rec_upd_no=:hv_uniontab_c.rec_upd_no,
			km_actno=:hv_uniontab_c.km_actno
	WHERE rowid=:hv_uniontab_c.rowid;
	if ( sqlca.sqlcode && sqlca.sqlcode != 1403 ){
		sprintf(acErrMsg,"UPDATE hv_uniontab error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D105" );
		return CM_SQLCODE;
	}

	return 0;
}


int Hv_uniontab_Del_Upd(struct hv_uniontab_c hv_uniontab_c , char * reply  ){

	EXEC SQL DELETE FROM hv_uniontab WHERE rowid=:hv_uniontab_c.rowid;
	if ( sqlca.sqlcode ){
		sprintf(acErrMsg,"DELETE hv_uniontab error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D105" );
		return CM_SQLCODE;
	}

	return 0;
}

int Hv_uniontab_Clo_Upd( ){
	EXEC SQL CLOSE upd_hv_uniontab;
	return 0;
}

/*****************************************************************************/
/****                              增加函数部分                           ****/
/*****************************************************************************/
int Hv_uniontab_Ins( struct hv_uniontab_c hv_uniontab_c , char * reply ){
	int ret;

	EXEC SQL INSERT INTO hv_uniontab VALUES (:hv_uniontab_c.or_br_no,
			:hv_uniontab_c.br_sts,
			:hv_uniontab_c.br_categ,
			:hv_uniontab_c.br_code,
			:hv_uniontab_c.sendco,
			:hv_uniontab_c.dir_br_code,
			:hv_uniontab_c.node_code,
			:hv_uniontab_c.superior,
			:hv_uniontab_c.pb_code,
			:hv_uniontab_c.city_code,
			:hv_uniontab_c.acct_sts,
			:hv_uniontab_c.acctsts_chg_dt,
			:hv_uniontab_c.acctsts_chg_tm,
			:hv_uniontab_c.br_name_f,
			:hv_uniontab_c.br_name_s,
			:hv_uniontab_c.addr,
			:hv_uniontab_c.phone,
			:hv_uniontab_c.email,
			:hv_uniontab_c.postcode,
			:hv_uniontab_c.start_date,
			:hv_uniontab_c.end_date,
			:hv_uniontab_c.chg_date,
			:hv_uniontab_c.fax,
			:hv_uniontab_c.telegraph,
			:hv_uniontab_c.qs_no,
			:hv_uniontab_c.acct_lvl,
			:hv_uniontab_c.obr_no_attr,
			:hv_uniontab_c.upd_type,
			:hv_uniontab_c.rec_upd_no,
			:hv_uniontab_c.km_actno);
	if ( sqlca.sqlcode && sqlca.sqlcode != -1 )
	{
		sprintf(acErrMsg,"INSERT hv_uniontab error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D107" );
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == -1 )
	{
		sprintf(acErrMsg,"INSERT hv_uniontab error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D108" );
		return CM_SQLCODE;
	}

	return 0;
}
