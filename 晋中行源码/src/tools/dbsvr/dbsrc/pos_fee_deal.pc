#include<stdio.h>
#include<varargs.h>

#define EXTERN
#include"global.h"


EXEC SQL INCLUDE SQLCA;
#include"pos_fee_deal_c.h"
#define CM_SQLCODE sqlca.sqlcode==1403?100:(sqlca.sqlcode==-1?-239:sqlca.sqlcode)

int pos_fee_deal_con ( struct pos_fee_deal_c , char *);
int put_mystery( char *, char * );
char *zip_tail(char *s);
static void zip_struct(struct pos_fee_deal_c* ps){
	zip_tail(ps->rowid);
	zip_tail(ps->fname);
	zip_tail(ps->deal_flag);
}
int Pos_fee_deal_Debug(struct pos_fee_deal_c *ps){
	vtcp_log("pos_fee_deal_c.rowid=[%s]\n",ps->rowid);
	vtcp_log("pos_fee_deal_c.fname=[%s]\n",ps->fname);
	vtcp_log("pos_fee_deal_c.pos_date=[%ld]\n",ps->pos_date);
	vtcp_log("pos_fee_deal_c.deal_flag=[%s]\n",ps->deal_flag);
	vtcp_log("pos_fee_deal_c.req_cnt=[%ld]\n",ps->req_cnt);
	return(0);
}
/*****************************************************************************/
/****                              查询函数部分[]                       ****/
/*****************************************************************************/
int Pos_fee_deal_Sel(reply,pos_fee_deal_c,fmtstr,va_alist)
char    *reply;
struct  pos_fee_deal_c *pos_fee_deal_c;
char    *fmtstr;
va_dcl
{
	int   ret;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	ret = Pos_fee_deal_Dec_Sel( reply , "%s" , wherelist );
	if (ret){
		WRITEMSG
		return ret;
	}
	ret = Pos_fee_deal_Fet_Sel( pos_fee_deal_c , reply );
	if (ret){
		WRITEMSG
		return ret;
	}

	Pos_fee_deal_Clo_Sel();

	return 0;
}



char *key_strcat(char *,char *);
int Pos_fee_deal_Dec_Sel ( reply , fmtstr , va_alist )
char    *reply;
char    *fmtstr;
va_dcl
{
	EXEC    SQL BEGIN   DECLARE SECTION;
		char    comm[1000];
	EXEC    SQL END     DECLARE SECTION;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	sprintf ( comm ," SELECT rowid,pos_fee_deal.* FROM pos_fee_deal WHERE  ");
	key_strcat(comm,wherelist);

	vtcp_log("%s,%d,SQLSTR=[%s]\n",__FILE__,__LINE__,comm);
	sqlca.sqlcode=0;
	EXEC SQL PREPARE pos_fee_deal_sel FROM :comm;
	EXEC SQL DECLARE sel_pos_fee_deal CURSOR FOR pos_fee_deal_sel;

	EXEC SQL OPEN sel_pos_fee_deal;
	if (sqlca.sqlcode){
		sprintf(acErrMsg,"OPEN pos_fee_deal error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D102" );
		return CM_SQLCODE;
	}

	return 0;
}

int Pos_fee_deal_Fet_Sel ( struct pos_fee_deal_c *pos_fee_deal_c , char * reply )
{

	int   ret;

	EXEC SQL FETCH sel_pos_fee_deal INTO :pos_fee_deal_c;
	if (sqlca.sqlcode&&sqlca.sqlcode!=1403){
		sprintf(acErrMsg,"Fetch pos_fee_deal error!!! %d",sqlca.sqlcode);
		WRITEMSG
		strcpy (reply,"D103");
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == 1403 ){
		sprintf(acErrMsg,"Fetch pos_fee_deal finished!!! %d",sqlca.sqlcode);
		WRITEMSG
		strcpy (reply,"D104");
		return CM_SQLCODE;
	}
	zip_struct(pos_fee_deal_c);

	return 0;
}

int Pos_fee_deal_Clo_Sel (){
	EXEC SQL CLOSE sel_pos_fee_deal;
	return 0;
}

/*****************************************************************************/
/****                              修改函数部分                           ****/
/*****************************************************************************/
int Pos_fee_deal_Dec_Upd( reply , fmtstr , va_alist)
char    *reply;
char    *fmtstr;
va_dcl
{
	EXEC    SQL BEGIN   DECLARE SECTION;
		char    comm[1000];
	EXEC    SQL END     DECLARE SECTION;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	sprintf ( comm , "SELECT rowid,pos_fee_deal.* FROM pos_fee_deal WHERE  ");
	key_strcat(comm,wherelist);
	strcat(comm," FOR UPDATE WAIT 5 ");
	vtcp_log("%s,%d,SQLSTR=[%s]\n",__FILE__,__LINE__,comm);
	sqlca.sqlcode=0;
	EXEC SQL PREPARE pos_fee_deal_upd FROM :comm;

	EXEC SQL DECLARE upd_pos_fee_deal CURSOR FOR pos_fee_deal_upd;

	EXEC SQL OPEN upd_pos_fee_deal;
	if (sqlca.sqlcode){
		sprintf(acErrMsg,"open pos_fee_deal error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D102" );
		return CM_SQLCODE;
	}

	return 0;
}

int Pos_fee_deal_Fet_Upd( struct pos_fee_deal_c *pos_fee_deal_c , char * reply ){
	int   ret;

	EXEC SQL FETCH upd_pos_fee_deal INTO :pos_fee_deal_c;
	if ( sqlca.sqlcode && sqlca.sqlcode!=1403 ){
		sprintf(acErrMsg,"FETCH upd pos_fee_deal error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D103" );
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == 1403 ){
		sprintf(acErrMsg,"FETCH pos_fee_deal finished %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D104" );
		return CM_SQLCODE;
	}
	zip_struct(pos_fee_deal_c);

	return 0;
}

int Pos_fee_deal_Upd_Upd( struct pos_fee_deal_c pos_fee_deal_c , char * reply){
	int ret;

	EXEC SQL UPDATE pos_fee_deal SET fname=:pos_fee_deal_c.fname,
			pos_date=:pos_fee_deal_c.pos_date,
			deal_flag=:pos_fee_deal_c.deal_flag,
			req_cnt=:pos_fee_deal_c.req_cnt
	WHERE rowid=:pos_fee_deal_c.rowid;
	if ( sqlca.sqlcode && sqlca.sqlcode != 1403 ){
		sprintf(acErrMsg,"UPDATE pos_fee_deal error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D105" );
		return CM_SQLCODE;
	}

	return 0;
}


int Pos_fee_deal_Del_Upd(struct pos_fee_deal_c pos_fee_deal_c , char * reply  ){

	EXEC SQL DELETE FROM pos_fee_deal WHERE rowid=:pos_fee_deal_c.rowid;
	if ( sqlca.sqlcode ){
		sprintf(acErrMsg,"DELETE pos_fee_deal error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D105" );
		return CM_SQLCODE;
	}

	return 0;
}

int Pos_fee_deal_Clo_Upd( ){
	EXEC SQL CLOSE upd_pos_fee_deal;
	return 0;
}

/*****************************************************************************/
/****                              增加函数部分                           ****/
/*****************************************************************************/
int Pos_fee_deal_Ins( struct pos_fee_deal_c pos_fee_deal_c , char * reply ){
	int ret;

	EXEC SQL INSERT INTO pos_fee_deal VALUES (:pos_fee_deal_c.fname,
			:pos_fee_deal_c.pos_date,
			:pos_fee_deal_c.deal_flag,
			:pos_fee_deal_c.req_cnt);
	if ( sqlca.sqlcode && sqlca.sqlcode != -1 )
	{
		sprintf(acErrMsg,"INSERT pos_fee_deal error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D107" );
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == -1 )
	{
		sprintf(acErrMsg,"INSERT pos_fee_deal error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D108" );
		return CM_SQLCODE;
	}

	return 0;
}
