#include<stdio.h>
#include<varargs.h>

#define EXTERN
#include"global.h"


EXEC SQL INCLUDE SQLCA;
#include"mbfebrbkno_c.h"
#define CM_SQLCODE sqlca.sqlcode==1403?100:(sqlca.sqlcode==-1?-239:sqlca.sqlcode)

int mbfebrbkno_con ( struct mbfebrbkno_c , char *);
int put_mystery( char *, char * );
char *zip_tail(char *s);
static void zip_struct(struct mbfebrbkno_c* ps){
	zip_tail(ps->rowid);
	zip_tail(ps->seq_no);
	zip_tail(ps->brno);
	zip_tail(ps->bkno);
}
int Mbfebrbkno_Debug(struct mbfebrbkno_c *ps){
	vtcp_log("mbfebrbkno_c.rowid=[%s]\n",ps->rowid);
	vtcp_log("mbfebrbkno_c.seq_no=[%s]\n",ps->seq_no);
	vtcp_log("mbfebrbkno_c.brno=[%s]\n",ps->brno);
	vtcp_log("mbfebrbkno_c.bkno=[%s]\n",ps->bkno);
	return(0);
}
/*****************************************************************************/
/****                              查询函数部分[]                       ****/
/*****************************************************************************/
int Mbfebrbkno_Sel(reply,mbfebrbkno_c,fmtstr,va_alist)
char    *reply;
struct  mbfebrbkno_c *mbfebrbkno_c;
char    *fmtstr;
va_dcl
{
	int   ret;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	ret = Mbfebrbkno_Dec_Sel( reply , "%s" , wherelist );
	if (ret){
		WRITEMSG
		return ret;
	}
	ret = Mbfebrbkno_Fet_Sel( mbfebrbkno_c , reply );
	if (ret){
		WRITEMSG
		return ret;
	}

	Mbfebrbkno_Clo_Sel();

	return 0;
}



char *key_strcat(char *,char *);
int Mbfebrbkno_Dec_Sel ( reply , fmtstr , va_alist )
char    *reply;
char    *fmtstr;
va_dcl
{
	EXEC    SQL BEGIN   DECLARE SECTION;
		char    comm[1000];
	EXEC    SQL END     DECLARE SECTION;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	sprintf ( comm ," SELECT rowid,mbfebrbkno.* FROM mbfebrbkno WHERE  ");
	key_strcat(comm,wherelist);

	vtcp_log("%s,%d,SQLSTR=[%s]\n",__FILE__,__LINE__,comm);
	sqlca.sqlcode=0;
	EXEC SQL PREPARE mbfebrbkno_sel FROM :comm;
	EXEC SQL DECLARE sel_mbfebrbkno CURSOR FOR mbfebrbkno_sel;

	EXEC SQL OPEN sel_mbfebrbkno;
	if (sqlca.sqlcode){
		sprintf(acErrMsg,"OPEN mbfebrbkno error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D102" );
		return CM_SQLCODE;
	}

	return 0;
}

int Mbfebrbkno_Fet_Sel ( struct mbfebrbkno_c *mbfebrbkno_c , char * reply )
{

	int   ret;

	EXEC SQL FETCH sel_mbfebrbkno INTO :mbfebrbkno_c;
	if (sqlca.sqlcode&&sqlca.sqlcode!=1403){
		sprintf(acErrMsg,"Fetch mbfebrbkno error!!! %d",sqlca.sqlcode);
		WRITEMSG
		strcpy (reply,"D103");
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == 1403 ){
		sprintf(acErrMsg,"Fetch mbfebrbkno finished!!! %d",sqlca.sqlcode);
		WRITEMSG
		strcpy (reply,"D104");
		return CM_SQLCODE;
	}
	zip_struct(mbfebrbkno_c);

	return 0;
}

int Mbfebrbkno_Clo_Sel (){
	EXEC SQL CLOSE sel_mbfebrbkno;
	return 0;
}

/*****************************************************************************/
/****                              修改函数部分                           ****/
/*****************************************************************************/
int Mbfebrbkno_Dec_Upd( reply , fmtstr , va_alist)
char    *reply;
char    *fmtstr;
va_dcl
{
	EXEC    SQL BEGIN   DECLARE SECTION;
		char    comm[1000];
	EXEC    SQL END     DECLARE SECTION;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	sprintf ( comm , "SELECT rowid,mbfebrbkno.* FROM mbfebrbkno WHERE  ");
	key_strcat(comm,wherelist);
	strcat(comm," FOR UPDATE WAIT 5 ");
	vtcp_log("%s,%d,SQLSTR=[%s]\n",__FILE__,__LINE__,comm);
	sqlca.sqlcode=0;
	EXEC SQL PREPARE mbfebrbkno_upd FROM :comm;

	EXEC SQL DECLARE upd_mbfebrbkno CURSOR FOR mbfebrbkno_upd;

	EXEC SQL OPEN upd_mbfebrbkno;
	if (sqlca.sqlcode){
		sprintf(acErrMsg,"open mbfebrbkno error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D102" );
		return CM_SQLCODE;
	}

	return 0;
}

int Mbfebrbkno_Fet_Upd( struct mbfebrbkno_c *mbfebrbkno_c , char * reply ){
	int   ret;

	EXEC SQL FETCH upd_mbfebrbkno INTO :mbfebrbkno_c;
	if ( sqlca.sqlcode && sqlca.sqlcode!=1403 ){
		sprintf(acErrMsg,"FETCH upd mbfebrbkno error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D103" );
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == 1403 ){
		sprintf(acErrMsg,"FETCH mbfebrbkno finished %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D104" );
		return CM_SQLCODE;
	}
	zip_struct(mbfebrbkno_c);

	return 0;
}

int Mbfebrbkno_Upd_Upd( struct mbfebrbkno_c mbfebrbkno_c , char * reply){
	int ret;

	EXEC SQL UPDATE mbfebrbkno SET seq_no=:mbfebrbkno_c.seq_no,
			brno=:mbfebrbkno_c.brno,
			bkno=:mbfebrbkno_c.bkno
	WHERE rowid=:mbfebrbkno_c.rowid;
	if ( sqlca.sqlcode && sqlca.sqlcode != 1403 ){
		sprintf(acErrMsg,"UPDATE mbfebrbkno error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D105" );
		return CM_SQLCODE;
	}

	return 0;
}


int Mbfebrbkno_Del_Upd(struct mbfebrbkno_c mbfebrbkno_c , char * reply  ){

	EXEC SQL DELETE FROM mbfebrbkno WHERE rowid=:mbfebrbkno_c.rowid;
	if ( sqlca.sqlcode ){
		sprintf(acErrMsg,"DELETE mbfebrbkno error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D105" );
		return CM_SQLCODE;
	}

	return 0;
}

int Mbfebrbkno_Clo_Upd( ){
	EXEC SQL CLOSE upd_mbfebrbkno;
	return 0;
}

/*****************************************************************************/
/****                              增加函数部分                           ****/
/*****************************************************************************/
int Mbfebrbkno_Ins( struct mbfebrbkno_c mbfebrbkno_c , char * reply ){
	int ret;

	EXEC SQL INSERT INTO mbfebrbkno VALUES (:mbfebrbkno_c.seq_no,
			:mbfebrbkno_c.brno,
			:mbfebrbkno_c.bkno);
	if ( sqlca.sqlcode && sqlca.sqlcode != -1 )
	{
		sprintf(acErrMsg,"INSERT mbfebrbkno error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D107" );
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == -1 )
	{
		sprintf(acErrMsg,"INSERT mbfebrbkno error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D108" );
		return CM_SQLCODE;
	}

	return 0;
}
