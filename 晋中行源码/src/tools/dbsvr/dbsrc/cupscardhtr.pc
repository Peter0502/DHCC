#include<stdio.h>
#include<varargs.h>

#define EXTERN
#include"global.h"


EXEC SQL INCLUDE SQLCA;
#include"cupscardhtr_c.h"
#define CM_SQLCODE sqlca.sqlcode==1403?100:(sqlca.sqlcode==-1?-239:sqlca.sqlcode)

int cupscardhtr_con ( struct cupscardhtr_c , char *);
int put_mystery( char *, char * );
char *zip_tail(char *s);
static void zip_struct(struct cupscardhtr_c* ps){
	zip_tail(ps->rowid);
	zip_tail(ps->brtype);
	zip_tail(ps->filename);
	zip_tail(ps->txday);
	zip_tail(ps->brno);
	zip_tail(ps->dlbrno);
	zip_tail(ps->fsbrno);
	zip_tail(ps->trseq);
	zip_tail(ps->txtime);
	zip_tail(ps->cardno);
	zip_tail(ps->msgtype);
	zip_tail(ps->txcode);
	zip_tail(ps->mertype);
	zip_tail(ps->atmno);
	zip_tail(ps->acbkflg);
	zip_tail(ps->acbkaddr);
	zip_tail(ps->wssrno);
	zip_tail(ps->inputcd);
	zip_tail(ps->authcd);
	zip_tail(ps->isbkno);
	zip_tail(ps->otrseq);
	zip_tail(ps->respcd);
	zip_tail(ps->inputmd);
	zip_tail(ps->dsflag);
	zip_tail(ps->cardseq);
	zip_tail(ps->tmreadfg);
	zip_tail(ps->iccardfg);
	zip_tail(ps->otxtime);
	zip_tail(ps->opnbrno);
	zip_tail(ps->outtxfg);
	zip_tail(ps->jyqd);
	zip_tail(ps->eciflag);
	zip_tail(ps->curcd);
	zip_tail(ps->dltxday);
	zip_tail(ps->dltxtime);
	zip_tail(ps->qsday);
	zip_tail(ps->sqresn);
	zip_tail(ps->certtype);
	zip_tail(ps->certnum);
	zip_tail(ps->dldsflg);
	zip_tail(ps->clzxseq);
	zip_tail(ps->opncdbk);
	zip_tail(ps->feeflg);
	zip_tail(ps->tzxeflg);
	zip_tail(ps->djyobj);
	zip_tail(ps->outbrno);
	zip_tail(ps->outcardno);
	zip_tail(ps->inbrno);
	zip_tail(ps->incardno);
	zip_tail(ps->cityfg);
	zip_tail(ps->tmp);
}
int Cupscardhtr_Debug(struct cupscardhtr_c *ps){
	vtcp_log("cupscardhtr_c.rowid=[%s]\n",ps->rowid);
	vtcp_log("cupscardhtr_c.brtype=[%s]\n",ps->brtype);
	vtcp_log("cupscardhtr_c.filename=[%s]\n",ps->filename);
	vtcp_log("cupscardhtr_c.txday=[%s]\n",ps->txday);
	vtcp_log("cupscardhtr_c.brno=[%s]\n",ps->brno);
	vtcp_log("cupscardhtr_c.dlbrno=[%s]\n",ps->dlbrno);
	vtcp_log("cupscardhtr_c.fsbrno=[%s]\n",ps->fsbrno);
	vtcp_log("cupscardhtr_c.trseq=[%s]\n",ps->trseq);
	vtcp_log("cupscardhtr_c.txtime=[%s]\n",ps->txtime);
	vtcp_log("cupscardhtr_c.cardno=[%s]\n",ps->cardno);
	vtcp_log("cupscardhtr_c.txamt=[%f]\n",ps->txamt);
	vtcp_log("cupscardhtr_c.dsamt=[%f]\n",ps->dsamt);
	vtcp_log("cupscardhtr_c.fee=[%f]\n",ps->fee);
	vtcp_log("cupscardhtr_c.msgtype=[%s]\n",ps->msgtype);
	vtcp_log("cupscardhtr_c.txcode=[%s]\n",ps->txcode);
	vtcp_log("cupscardhtr_c.mertype=[%s]\n",ps->mertype);
	vtcp_log("cupscardhtr_c.atmno=[%s]\n",ps->atmno);
	vtcp_log("cupscardhtr_c.acbkflg=[%s]\n",ps->acbkflg);
	vtcp_log("cupscardhtr_c.acbkaddr=[%s]\n",ps->acbkaddr);
	vtcp_log("cupscardhtr_c.wssrno=[%s]\n",ps->wssrno);
	vtcp_log("cupscardhtr_c.inputcd=[%s]\n",ps->inputcd);
	vtcp_log("cupscardhtr_c.authcd=[%s]\n",ps->authcd);
	vtcp_log("cupscardhtr_c.isbkno=[%s]\n",ps->isbkno);
	vtcp_log("cupscardhtr_c.otrseq=[%s]\n",ps->otrseq);
	vtcp_log("cupscardhtr_c.respcd=[%s]\n",ps->respcd);
	vtcp_log("cupscardhtr_c.inputmd=[%s]\n",ps->inputmd);
	vtcp_log("cupscardhtr_c.infee=[%f]\n",ps->infee);
	vtcp_log("cupscardhtr_c.outfee=[%f]\n",ps->outfee);
	vtcp_log("cupscardhtr_c.zjfee=[%f]\n",ps->zjfee);
	vtcp_log("cupscardhtr_c.dsflag=[%s]\n",ps->dsflag);
	vtcp_log("cupscardhtr_c.cardseq=[%s]\n",ps->cardseq);
	vtcp_log("cupscardhtr_c.tmreadfg=[%s]\n",ps->tmreadfg);
	vtcp_log("cupscardhtr_c.iccardfg=[%s]\n",ps->iccardfg);
	vtcp_log("cupscardhtr_c.otxtime=[%s]\n",ps->otxtime);
	vtcp_log("cupscardhtr_c.opnbrno=[%s]\n",ps->opnbrno);
	vtcp_log("cupscardhtr_c.outtxfg=[%s]\n",ps->outtxfg);
	vtcp_log("cupscardhtr_c.jyqd=[%s]\n",ps->jyqd);
	vtcp_log("cupscardhtr_c.eciflag=[%s]\n",ps->eciflag);
	vtcp_log("cupscardhtr_c.curcd=[%s]\n",ps->curcd);
	vtcp_log("cupscardhtr_c.dltxday=[%s]\n",ps->dltxday);
	vtcp_log("cupscardhtr_c.dltxtime=[%s]\n",ps->dltxtime);
	vtcp_log("cupscardhtr_c.qsday=[%s]\n",ps->qsday);
	vtcp_log("cupscardhtr_c.sqresn=[%s]\n",ps->sqresn);
	vtcp_log("cupscardhtr_c.certtype=[%s]\n",ps->certtype);
	vtcp_log("cupscardhtr_c.certnum=[%s]\n",ps->certnum);
	vtcp_log("cupscardhtr_c.dldsflg=[%s]\n",ps->dldsflg);
	vtcp_log("cupscardhtr_c.clzxseq=[%s]\n",ps->clzxseq);
	vtcp_log("cupscardhtr_c.opncdbk=[%s]\n",ps->opncdbk);
	vtcp_log("cupscardhtr_c.feeflg=[%s]\n",ps->feeflg);
	vtcp_log("cupscardhtr_c.tzxeflg=[%s]\n",ps->tzxeflg);
	vtcp_log("cupscardhtr_c.djyobj=[%s]\n",ps->djyobj);
	vtcp_log("cupscardhtr_c.dsqfee=[%f]\n",ps->dsqfee);
	vtcp_log("cupscardhtr_c.outbrno=[%s]\n",ps->outbrno);
	vtcp_log("cupscardhtr_c.outcardno=[%s]\n",ps->outcardno);
	vtcp_log("cupscardhtr_c.inbrno=[%s]\n",ps->inbrno);
	vtcp_log("cupscardhtr_c.incardno=[%s]\n",ps->incardno);
	vtcp_log("cupscardhtr_c.cityfg=[%s]\n",ps->cityfg);
	vtcp_log("cupscardhtr_c.tmp=[%s]\n",ps->tmp);
	return(0);
}
/*****************************************************************************/
/****                              查询函数部分[]                       ****/
/*****************************************************************************/
int Cupscardhtr_Sel(reply,cupscardhtr_c,fmtstr,va_alist)
char    *reply;
struct  cupscardhtr_c *cupscardhtr_c;
char    *fmtstr;
va_dcl
{
	int   ret;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	ret = Cupscardhtr_Dec_Sel( reply , "%s" , wherelist );
	if (ret){
		WRITEMSG
		return ret;
	}
	ret = Cupscardhtr_Fet_Sel( cupscardhtr_c , reply );
	if (ret){
		WRITEMSG
		return ret;
	}

	Cupscardhtr_Clo_Sel();

	return 0;
}



char *key_strcat(char *,char *);
int Cupscardhtr_Dec_Sel ( reply , fmtstr , va_alist )
char    *reply;
char    *fmtstr;
va_dcl
{
	EXEC    SQL BEGIN   DECLARE SECTION;
		char    comm[1000];
	EXEC    SQL END     DECLARE SECTION;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	sprintf ( comm ," SELECT rowid,cupscardhtr.* FROM cupscardhtr WHERE  ");
	key_strcat(comm,wherelist);

	vtcp_log("%s,%d,SQLSTR=[%s]\n",__FILE__,__LINE__,comm);
	sqlca.sqlcode=0;
	EXEC SQL PREPARE cupscardhtr_sel FROM :comm;
	EXEC SQL DECLARE sel_cupscardhtr CURSOR FOR cupscardhtr_sel;

	EXEC SQL OPEN sel_cupscardhtr;
	if (sqlca.sqlcode){
		sprintf(acErrMsg,"OPEN cupscardhtr error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D102" );
		return CM_SQLCODE;
	}

	return 0;
}

int Cupscardhtr_Fet_Sel ( struct cupscardhtr_c *cupscardhtr_c , char * reply )
{

	int   ret;

	EXEC SQL FETCH sel_cupscardhtr INTO :cupscardhtr_c;
	if (sqlca.sqlcode&&sqlca.sqlcode!=1403){
		sprintf(acErrMsg,"Fetch cupscardhtr error!!! %d",sqlca.sqlcode);
		WRITEMSG
		strcpy (reply,"D103");
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == 1403 ){
		sprintf(acErrMsg,"Fetch cupscardhtr finished!!! %d",sqlca.sqlcode);
		WRITEMSG
		strcpy (reply,"D104");
		return CM_SQLCODE;
	}
	zip_struct(cupscardhtr_c);

	return 0;
}

int Cupscardhtr_Clo_Sel (){
	EXEC SQL CLOSE sel_cupscardhtr;
	return 0;
}

/*****************************************************************************/
/****                              修改函数部分                           ****/
/*****************************************************************************/
int Cupscardhtr_Dec_Upd( reply , fmtstr , va_alist)
char    *reply;
char    *fmtstr;
va_dcl
{
	EXEC    SQL BEGIN   DECLARE SECTION;
		char    comm[1000];
	EXEC    SQL END     DECLARE SECTION;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	sprintf ( comm , "SELECT rowid,cupscardhtr.* FROM cupscardhtr WHERE  ");
	key_strcat(comm,wherelist);
	strcat(comm," FOR UPDATE WAIT 5 ");
	vtcp_log("%s,%d,SQLSTR=[%s]\n",__FILE__,__LINE__,comm);
	sqlca.sqlcode=0;
	EXEC SQL PREPARE cupscardhtr_upd FROM :comm;

	EXEC SQL DECLARE upd_cupscardhtr CURSOR FOR cupscardhtr_upd;

	EXEC SQL OPEN upd_cupscardhtr;
	if (sqlca.sqlcode){
		sprintf(acErrMsg,"open cupscardhtr error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D102" );
		return CM_SQLCODE;
	}

	return 0;
}

int Cupscardhtr_Fet_Upd( struct cupscardhtr_c *cupscardhtr_c , char * reply ){
	int   ret;

	EXEC SQL FETCH upd_cupscardhtr INTO :cupscardhtr_c;
	if ( sqlca.sqlcode && sqlca.sqlcode!=1403 ){
		sprintf(acErrMsg,"FETCH upd cupscardhtr error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D103" );
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == 1403 ){
		sprintf(acErrMsg,"FETCH cupscardhtr finished %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D104" );
		return CM_SQLCODE;
	}
	zip_struct(cupscardhtr_c);

	return 0;
}

int Cupscardhtr_Upd_Upd( struct cupscardhtr_c cupscardhtr_c , char * reply){
	int ret;

	EXEC SQL UPDATE cupscardhtr SET brtype=:cupscardhtr_c.brtype,
			filename=:cupscardhtr_c.filename,
			txday=:cupscardhtr_c.txday,
			brno=:cupscardhtr_c.brno,
			dlbrno=:cupscardhtr_c.dlbrno,
			fsbrno=:cupscardhtr_c.fsbrno,
			trseq=:cupscardhtr_c.trseq,
			txtime=:cupscardhtr_c.txtime,
			cardno=:cupscardhtr_c.cardno,
			txamt=:cupscardhtr_c.txamt,
			dsamt=:cupscardhtr_c.dsamt,
			fee=:cupscardhtr_c.fee,
			msgtype=:cupscardhtr_c.msgtype,
			txcode=:cupscardhtr_c.txcode,
			mertype=:cupscardhtr_c.mertype,
			atmno=:cupscardhtr_c.atmno,
			acbkflg=:cupscardhtr_c.acbkflg,
			acbkaddr=:cupscardhtr_c.acbkaddr,
			wssrno=:cupscardhtr_c.wssrno,
			inputcd=:cupscardhtr_c.inputcd,
			authcd=:cupscardhtr_c.authcd,
			isbkno=:cupscardhtr_c.isbkno,
			otrseq=:cupscardhtr_c.otrseq,
			respcd=:cupscardhtr_c.respcd,
			inputmd=:cupscardhtr_c.inputmd,
			infee=:cupscardhtr_c.infee,
			outfee=:cupscardhtr_c.outfee,
			zjfee=:cupscardhtr_c.zjfee,
			dsflag=:cupscardhtr_c.dsflag,
			cardseq=:cupscardhtr_c.cardseq,
			tmreadfg=:cupscardhtr_c.tmreadfg,
			iccardfg=:cupscardhtr_c.iccardfg,
			otxtime=:cupscardhtr_c.otxtime,
			opnbrno=:cupscardhtr_c.opnbrno,
			outtxfg=:cupscardhtr_c.outtxfg,
			jyqd=:cupscardhtr_c.jyqd,
			eciflag=:cupscardhtr_c.eciflag,
			curcd=:cupscardhtr_c.curcd,
			dltxday=:cupscardhtr_c.dltxday,
			dltxtime=:cupscardhtr_c.dltxtime,
			qsday=:cupscardhtr_c.qsday,
			sqresn=:cupscardhtr_c.sqresn,
			certtype=:cupscardhtr_c.certtype,
			certnum=:cupscardhtr_c.certnum,
			dldsflg=:cupscardhtr_c.dldsflg,
			clzxseq=:cupscardhtr_c.clzxseq,
			opncdbk=:cupscardhtr_c.opncdbk,
			feeflg=:cupscardhtr_c.feeflg,
			tzxeflg=:cupscardhtr_c.tzxeflg,
			djyobj=:cupscardhtr_c.djyobj,
			dsqfee=:cupscardhtr_c.dsqfee,
			outbrno=:cupscardhtr_c.outbrno,
			outcardno=:cupscardhtr_c.outcardno,
			inbrno=:cupscardhtr_c.inbrno,
			incardno=:cupscardhtr_c.incardno,
			cityfg=:cupscardhtr_c.cityfg,
			tmp=:cupscardhtr_c.tmp
	WHERE rowid=:cupscardhtr_c.rowid;
	if ( sqlca.sqlcode && sqlca.sqlcode != 1403 ){
		sprintf(acErrMsg,"UPDATE cupscardhtr error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D105" );
		return CM_SQLCODE;
	}

	return 0;
}


int Cupscardhtr_Del_Upd(struct cupscardhtr_c cupscardhtr_c , char * reply  ){

	EXEC SQL DELETE FROM cupscardhtr WHERE rowid=:cupscardhtr_c.rowid;
	if ( sqlca.sqlcode ){
		sprintf(acErrMsg,"DELETE cupscardhtr error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D105" );
		return CM_SQLCODE;
	}

	return 0;
}

int Cupscardhtr_Clo_Upd( ){
	EXEC SQL CLOSE upd_cupscardhtr;
	return 0;
}

/*****************************************************************************/
/****                              增加函数部分                           ****/
/*****************************************************************************/
int Cupscardhtr_Ins( struct cupscardhtr_c cupscardhtr_c , char * reply ){
	int ret;

	EXEC SQL INSERT INTO cupscardhtr VALUES (:cupscardhtr_c.brtype,
			:cupscardhtr_c.filename,
			:cupscardhtr_c.txday,
			:cupscardhtr_c.brno,
			:cupscardhtr_c.dlbrno,
			:cupscardhtr_c.fsbrno,
			:cupscardhtr_c.trseq,
			:cupscardhtr_c.txtime,
			:cupscardhtr_c.cardno,
			:cupscardhtr_c.txamt,
			:cupscardhtr_c.dsamt,
			:cupscardhtr_c.fee,
			:cupscardhtr_c.msgtype,
			:cupscardhtr_c.txcode,
			:cupscardhtr_c.mertype,
			:cupscardhtr_c.atmno,
			:cupscardhtr_c.acbkflg,
			:cupscardhtr_c.acbkaddr,
			:cupscardhtr_c.wssrno,
			:cupscardhtr_c.inputcd,
			:cupscardhtr_c.authcd,
			:cupscardhtr_c.isbkno,
			:cupscardhtr_c.otrseq,
			:cupscardhtr_c.respcd,
			:cupscardhtr_c.inputmd,
			:cupscardhtr_c.infee,
			:cupscardhtr_c.outfee,
			:cupscardhtr_c.zjfee,
			:cupscardhtr_c.dsflag,
			:cupscardhtr_c.cardseq,
			:cupscardhtr_c.tmreadfg,
			:cupscardhtr_c.iccardfg,
			:cupscardhtr_c.otxtime,
			:cupscardhtr_c.opnbrno,
			:cupscardhtr_c.outtxfg,
			:cupscardhtr_c.jyqd,
			:cupscardhtr_c.eciflag,
			:cupscardhtr_c.curcd,
			:cupscardhtr_c.dltxday,
			:cupscardhtr_c.dltxtime,
			:cupscardhtr_c.qsday,
			:cupscardhtr_c.sqresn,
			:cupscardhtr_c.certtype,
			:cupscardhtr_c.certnum,
			:cupscardhtr_c.dldsflg,
			:cupscardhtr_c.clzxseq,
			:cupscardhtr_c.opncdbk,
			:cupscardhtr_c.feeflg,
			:cupscardhtr_c.tzxeflg,
			:cupscardhtr_c.djyobj,
			:cupscardhtr_c.dsqfee,
			:cupscardhtr_c.outbrno,
			:cupscardhtr_c.outcardno,
			:cupscardhtr_c.inbrno,
			:cupscardhtr_c.incardno,
			:cupscardhtr_c.cityfg,
			:cupscardhtr_c.tmp);
	if ( sqlca.sqlcode && sqlca.sqlcode != -1 )
	{
		sprintf(acErrMsg,"INSERT cupscardhtr error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D107" );
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == -1 )
	{
		sprintf(acErrMsg,"INSERT cupscardhtr error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D108" );
		return CM_SQLCODE;
	}

	return 0;
}
