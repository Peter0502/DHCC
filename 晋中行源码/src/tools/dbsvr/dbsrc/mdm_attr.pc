#include<stdio.h>
#include<varargs.h>

#define EXTERN
#include"global.h"


EXEC SQL INCLUDE SQLCA;
#include"mdm_attr_c.h"
#define CM_SQLCODE sqlca.sqlcode==1403?100:(sqlca.sqlcode==-1?-239:sqlca.sqlcode)

int mdm_attr_con ( struct mdm_attr_c , char *);
int put_mystery( char *, char * );
char *zip_tail(char *s);
static void zip_struct(struct mdm_attr_c* ps){
	zip_tail(ps->rowid);
	zip_tail(ps->mdm_code);
	zip_tail(ps->mdm_name);
	zip_tail(ps->mdm_type);
	zip_tail(ps->ac_num_ind);
	zip_tail(ps->draw_uncon_yn);
	zip_tail(ps->qry_pwd_yn);
	zip_tail(ps->draw_pwd_yn);
	zip_tail(ps->draw_id_yn);
	zip_tail(ps->draw_seal_yn);
	zip_tail(ps->pwd_mach_yn);
	zip_tail(ps->note_type);
	zip_tail(ps->only_ind);
	zip_tail(ps->no_ind);
	zip_tail(ps->prt_ind);
}
int Mdm_attr_Debug(struct mdm_attr_c *ps){
	vtcp_log("mdm_attr_c.rowid=[%s]\n",ps->rowid);
	vtcp_log("mdm_attr_c.mdm_code=[%s]\n",ps->mdm_code);
	vtcp_log("mdm_attr_c.mdm_name=[%s]\n",ps->mdm_name);
	vtcp_log("mdm_attr_c.mdm_type=[%s]\n",ps->mdm_type);
	vtcp_log("mdm_attr_c.ac_num_ind=[%s]\n",ps->ac_num_ind);
	vtcp_log("mdm_attr_c.draw_uncon_yn=[%s]\n",ps->draw_uncon_yn);
	vtcp_log("mdm_attr_c.qry_pwd_yn=[%s]\n",ps->qry_pwd_yn);
	vtcp_log("mdm_attr_c.draw_pwd_yn=[%s]\n",ps->draw_pwd_yn);
	vtcp_log("mdm_attr_c.draw_id_yn=[%s]\n",ps->draw_id_yn);
	vtcp_log("mdm_attr_c.draw_seal_yn=[%s]\n",ps->draw_seal_yn);
	vtcp_log("mdm_attr_c.pwd_mach_yn=[%s]\n",ps->pwd_mach_yn);
	vtcp_log("mdm_attr_c.note_type=[%s]\n",ps->note_type);
	vtcp_log("mdm_attr_c.only_ind=[%s]\n",ps->only_ind);
	vtcp_log("mdm_attr_c.no_ind=[%s]\n",ps->no_ind);
	vtcp_log("mdm_attr_c.prt_ind=[%s]\n",ps->prt_ind);
	vtcp_log("mdm_attr_c.pg_num=[%ld]\n",ps->pg_num);
	vtcp_log("mdm_attr_c.pg_line=[%ld]\n",ps->pg_line);
	return(0);
}
/*****************************************************************************/
/****                              查询函数部分[]                       ****/
/*****************************************************************************/
int Mdm_attr_Sel(reply,mdm_attr_c,fmtstr,va_alist)
char    *reply;
struct  mdm_attr_c *mdm_attr_c;
char    *fmtstr;
va_dcl
{
	int   ret;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	ret = Mdm_attr_Dec_Sel( reply , "%s" , wherelist );
	if (ret){
		WRITEMSG
		return ret;
	}
	ret = Mdm_attr_Fet_Sel( mdm_attr_c , reply );
	if (ret){
		WRITEMSG
		return ret;
	}

	Mdm_attr_Clo_Sel();

	return 0;
}



char *key_strcat(char *,char *);
int Mdm_attr_Dec_Sel ( reply , fmtstr , va_alist )
char    *reply;
char    *fmtstr;
va_dcl
{
	EXEC    SQL BEGIN   DECLARE SECTION;
		char    comm[1000];
	EXEC    SQL END     DECLARE SECTION;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	sprintf ( comm ," SELECT rowid,mdm_attr.* FROM mdm_attr WHERE  ");
	key_strcat(comm,wherelist);

	vtcp_log("%s,%d,SQLSTR=[%s]\n",__FILE__,__LINE__,comm);
	sqlca.sqlcode=0;
	EXEC SQL PREPARE mdm_attr_sel FROM :comm;
	EXEC SQL DECLARE sel_mdm_attr CURSOR FOR mdm_attr_sel;

	EXEC SQL OPEN sel_mdm_attr;
	if (sqlca.sqlcode){
		sprintf(acErrMsg,"OPEN mdm_attr error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D102" );
		return CM_SQLCODE;
	}

	return 0;
}

int Mdm_attr_Fet_Sel ( struct mdm_attr_c *mdm_attr_c , char * reply )
{

	int   ret;

	EXEC SQL FETCH sel_mdm_attr INTO :mdm_attr_c;
	if (sqlca.sqlcode&&sqlca.sqlcode!=1403){
		sprintf(acErrMsg,"Fetch mdm_attr error!!! %d",sqlca.sqlcode);
		WRITEMSG
		strcpy (reply,"D103");
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == 1403 ){
		sprintf(acErrMsg,"Fetch mdm_attr finished!!! %d",sqlca.sqlcode);
		WRITEMSG
		strcpy (reply,"D104");
		return CM_SQLCODE;
	}
	zip_struct(mdm_attr_c);

	return 0;
}

int Mdm_attr_Clo_Sel (){
	EXEC SQL CLOSE sel_mdm_attr;
	return 0;
}

/*****************************************************************************/
/****                              修改函数部分                           ****/
/*****************************************************************************/
int Mdm_attr_Dec_Upd( reply , fmtstr , va_alist)
char    *reply;
char    *fmtstr;
va_dcl
{
	EXEC    SQL BEGIN   DECLARE SECTION;
		char    comm[1000];
	EXEC    SQL END     DECLARE SECTION;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	sprintf ( comm , "SELECT rowid,mdm_attr.* FROM mdm_attr WHERE  ");
	key_strcat(comm,wherelist);
	strcat(comm," FOR UPDATE WAIT 5 ");
	vtcp_log("%s,%d,SQLSTR=[%s]\n",__FILE__,__LINE__,comm);
	sqlca.sqlcode=0;
	EXEC SQL PREPARE mdm_attr_upd FROM :comm;

	EXEC SQL DECLARE upd_mdm_attr CURSOR FOR mdm_attr_upd;

	EXEC SQL OPEN upd_mdm_attr;
	if (sqlca.sqlcode){
		sprintf(acErrMsg,"open mdm_attr error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D102" );
		return CM_SQLCODE;
	}

	return 0;
}

int Mdm_attr_Fet_Upd( struct mdm_attr_c *mdm_attr_c , char * reply ){
	int   ret;

	EXEC SQL FETCH upd_mdm_attr INTO :mdm_attr_c;
	if ( sqlca.sqlcode && sqlca.sqlcode!=1403 ){
		sprintf(acErrMsg,"FETCH upd mdm_attr error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D103" );
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == 1403 ){
		sprintf(acErrMsg,"FETCH mdm_attr finished %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D104" );
		return CM_SQLCODE;
	}
	zip_struct(mdm_attr_c);

	return 0;
}

int Mdm_attr_Upd_Upd( struct mdm_attr_c mdm_attr_c , char * reply){
	int ret;

	EXEC SQL UPDATE mdm_attr SET mdm_code=:mdm_attr_c.mdm_code,
			mdm_name=:mdm_attr_c.mdm_name,
			mdm_type=:mdm_attr_c.mdm_type,
			ac_num_ind=:mdm_attr_c.ac_num_ind,
			draw_uncon_yn=:mdm_attr_c.draw_uncon_yn,
			qry_pwd_yn=:mdm_attr_c.qry_pwd_yn,
			draw_pwd_yn=:mdm_attr_c.draw_pwd_yn,
			draw_id_yn=:mdm_attr_c.draw_id_yn,
			draw_seal_yn=:mdm_attr_c.draw_seal_yn,
			pwd_mach_yn=:mdm_attr_c.pwd_mach_yn,
			note_type=:mdm_attr_c.note_type,
			only_ind=:mdm_attr_c.only_ind,
			no_ind=:mdm_attr_c.no_ind,
			prt_ind=:mdm_attr_c.prt_ind,
			pg_num=:mdm_attr_c.pg_num,
			pg_line=:mdm_attr_c.pg_line
	WHERE rowid=:mdm_attr_c.rowid;
	if ( sqlca.sqlcode && sqlca.sqlcode != 1403 ){
		sprintf(acErrMsg,"UPDATE mdm_attr error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D105" );
		return CM_SQLCODE;
	}

	return 0;
}


int Mdm_attr_Del_Upd(struct mdm_attr_c mdm_attr_c , char * reply  ){

	EXEC SQL DELETE FROM mdm_attr WHERE rowid=:mdm_attr_c.rowid;
	if ( sqlca.sqlcode ){
		sprintf(acErrMsg,"DELETE mdm_attr error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D105" );
		return CM_SQLCODE;
	}

	return 0;
}

int Mdm_attr_Clo_Upd( ){
	EXEC SQL CLOSE upd_mdm_attr;
	return 0;
}

/*****************************************************************************/
/****                              增加函数部分                           ****/
/*****************************************************************************/
int Mdm_attr_Ins( struct mdm_attr_c mdm_attr_c , char * reply ){
	int ret;

	EXEC SQL INSERT INTO mdm_attr VALUES (:mdm_attr_c.mdm_code,
			:mdm_attr_c.mdm_name,
			:mdm_attr_c.mdm_type,
			:mdm_attr_c.ac_num_ind,
			:mdm_attr_c.draw_uncon_yn,
			:mdm_attr_c.qry_pwd_yn,
			:mdm_attr_c.draw_pwd_yn,
			:mdm_attr_c.draw_id_yn,
			:mdm_attr_c.draw_seal_yn,
			:mdm_attr_c.pwd_mach_yn,
			:mdm_attr_c.note_type,
			:mdm_attr_c.only_ind,
			:mdm_attr_c.no_ind,
			:mdm_attr_c.prt_ind,
			:mdm_attr_c.pg_num,
			:mdm_attr_c.pg_line);
	if ( sqlca.sqlcode && sqlca.sqlcode != -1 )
	{
		sprintf(acErrMsg,"INSERT mdm_attr error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D107" );
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == -1 )
	{
		sprintf(acErrMsg,"INSERT mdm_attr error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D108" );
		return CM_SQLCODE;
	}

	return 0;
}
