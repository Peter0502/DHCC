#include<stdio.h>
#include<varargs.h>

#define EXTERN
#include"global.h"


EXEC SQL INCLUDE SQLCA;
#include"mbfeoverdraftlt_c.h"
#define CM_SQLCODE sqlca.sqlcode==1403?100:(sqlca.sqlcode==-1?-239:sqlca.sqlcode)

int mbfeoverdraftlt_con ( struct mbfeoverdraftlt_c , char *);
int put_mystery( char *, char * );
char *zip_tail(char *s);
static void zip_struct(struct mbfeoverdraftlt_c* ps){
	zip_tail(ps->rowid);
	zip_tail(ps->accrualtime);
}
int Mbfeoverdraftlt_Debug(struct mbfeoverdraftlt_c *ps){
	vtcp_log("mbfeoverdraftlt_c.rowid=[%s]\n",ps->rowid);
	vtcp_log("mbfeoverdraftlt_c.row_id=[%ld]\n",ps->row_id);
	vtcp_log("mbfeoverdraftlt_c.consigndate=[%ld]\n",ps->consigndate);
	vtcp_log("mbfeoverdraftlt_c.accrualtime=[%s]\n",ps->accrualtime);
	vtcp_log("mbfeoverdraftlt_c.overdraftamnt=[%f]\n",ps->overdraftamnt);
	vtcp_log("mbfeoverdraftlt_c.rate=[%f]\n",ps->rate);
	vtcp_log("mbfeoverdraftlt_c.accrualamnt=[%f]\n",ps->accrualamnt);
	return(0);
}
/*****************************************************************************/
/****                              查询函数部分[]                       ****/
/*****************************************************************************/
int Mbfeoverdraftlt_Sel(reply,mbfeoverdraftlt_c,fmtstr,va_alist)
char    *reply;
struct  mbfeoverdraftlt_c *mbfeoverdraftlt_c;
char    *fmtstr;
va_dcl
{
	int   ret;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	ret = Mbfeoverdraftlt_Dec_Sel( reply , "%s" , wherelist );
	if (ret){
		WRITEMSG
		return ret;
	}
	ret = Mbfeoverdraftlt_Fet_Sel( mbfeoverdraftlt_c , reply );
	if (ret){
		WRITEMSG
		return ret;
	}

	Mbfeoverdraftlt_Clo_Sel();

	return 0;
}



char *key_strcat(char *,char *);
int Mbfeoverdraftlt_Dec_Sel ( reply , fmtstr , va_alist )
char    *reply;
char    *fmtstr;
va_dcl
{
	EXEC    SQL BEGIN   DECLARE SECTION;
		char    comm[1000];
	EXEC    SQL END     DECLARE SECTION;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	sprintf ( comm ," SELECT rowid,mbfeoverdraftlt.* FROM mbfeoverdraftlt WHERE  ");
	key_strcat(comm,wherelist);

	vtcp_log("%s,%d,SQLSTR=[%s]\n",__FILE__,__LINE__,comm);
	sqlca.sqlcode=0;
	EXEC SQL PREPARE mbfeoverdraftlt_sel FROM :comm;
	EXEC SQL DECLARE sel_mbfeoverdraftlt CURSOR FOR mbfeoverdraftlt_sel;

	EXEC SQL OPEN sel_mbfeoverdraftlt;
	if (sqlca.sqlcode){
		sprintf(acErrMsg,"OPEN mbfeoverdraftlt error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D102" );
		return CM_SQLCODE;
	}

	return 0;
}

int Mbfeoverdraftlt_Fet_Sel ( struct mbfeoverdraftlt_c *mbfeoverdraftlt_c , char * reply )
{

	int   ret;

	EXEC SQL FETCH sel_mbfeoverdraftlt INTO :mbfeoverdraftlt_c;
	if (sqlca.sqlcode&&sqlca.sqlcode!=1403){
		sprintf(acErrMsg,"Fetch mbfeoverdraftlt error!!! %d",sqlca.sqlcode);
		WRITEMSG
		strcpy (reply,"D103");
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == 1403 ){
		sprintf(acErrMsg,"Fetch mbfeoverdraftlt finished!!! %d",sqlca.sqlcode);
		WRITEMSG
		strcpy (reply,"D104");
		return CM_SQLCODE;
	}
	zip_struct(mbfeoverdraftlt_c);

	return 0;
}

int Mbfeoverdraftlt_Clo_Sel (){
	EXEC SQL CLOSE sel_mbfeoverdraftlt;
	return 0;
}

/*****************************************************************************/
/****                              修改函数部分                           ****/
/*****************************************************************************/
int Mbfeoverdraftlt_Dec_Upd( reply , fmtstr , va_alist)
char    *reply;
char    *fmtstr;
va_dcl
{
	EXEC    SQL BEGIN   DECLARE SECTION;
		char    comm[1000];
	EXEC    SQL END     DECLARE SECTION;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	sprintf ( comm , "SELECT rowid,mbfeoverdraftlt.* FROM mbfeoverdraftlt WHERE  ");
	key_strcat(comm,wherelist);
	strcat(comm," FOR UPDATE WAIT 5 ");
	vtcp_log("%s,%d,SQLSTR=[%s]\n",__FILE__,__LINE__,comm);
	sqlca.sqlcode=0;
	EXEC SQL PREPARE mbfeoverdraftlt_upd FROM :comm;

	EXEC SQL DECLARE upd_mbfeoverdraftlt CURSOR FOR mbfeoverdraftlt_upd;

	EXEC SQL OPEN upd_mbfeoverdraftlt;
	if (sqlca.sqlcode){
		sprintf(acErrMsg,"open mbfeoverdraftlt error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D102" );
		return CM_SQLCODE;
	}

	return 0;
}

int Mbfeoverdraftlt_Fet_Upd( struct mbfeoverdraftlt_c *mbfeoverdraftlt_c , char * reply ){
	int   ret;

	EXEC SQL FETCH upd_mbfeoverdraftlt INTO :mbfeoverdraftlt_c;
	if ( sqlca.sqlcode && sqlca.sqlcode!=1403 ){
		sprintf(acErrMsg,"FETCH upd mbfeoverdraftlt error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D103" );
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == 1403 ){
		sprintf(acErrMsg,"FETCH mbfeoverdraftlt finished %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D104" );
		return CM_SQLCODE;
	}
	zip_struct(mbfeoverdraftlt_c);

	return 0;
}

int Mbfeoverdraftlt_Upd_Upd( struct mbfeoverdraftlt_c mbfeoverdraftlt_c , char * reply){
	int ret;

	EXEC SQL UPDATE mbfeoverdraftlt SET row_id=:mbfeoverdraftlt_c.row_id,
			consigndate=:mbfeoverdraftlt_c.consigndate,
			accrualtime=:mbfeoverdraftlt_c.accrualtime,
			overdraftamnt=:mbfeoverdraftlt_c.overdraftamnt,
			rate=:mbfeoverdraftlt_c.rate,
			accrualamnt=:mbfeoverdraftlt_c.accrualamnt
	WHERE rowid=:mbfeoverdraftlt_c.rowid;
	if ( sqlca.sqlcode && sqlca.sqlcode != 1403 ){
		sprintf(acErrMsg,"UPDATE mbfeoverdraftlt error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D105" );
		return CM_SQLCODE;
	}

	return 0;
}


int Mbfeoverdraftlt_Del_Upd(struct mbfeoverdraftlt_c mbfeoverdraftlt_c , char * reply  ){

	EXEC SQL DELETE FROM mbfeoverdraftlt WHERE rowid=:mbfeoverdraftlt_c.rowid;
	if ( sqlca.sqlcode ){
		sprintf(acErrMsg,"DELETE mbfeoverdraftlt error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D105" );
		return CM_SQLCODE;
	}

	return 0;
}

int Mbfeoverdraftlt_Clo_Upd( ){
	EXEC SQL CLOSE upd_mbfeoverdraftlt;
	return 0;
}

/*****************************************************************************/
/****                              增加函数部分                           ****/
/*****************************************************************************/
int Mbfeoverdraftlt_Ins( struct mbfeoverdraftlt_c mbfeoverdraftlt_c , char * reply ){
	int ret;

	EXEC SQL INSERT INTO mbfeoverdraftlt VALUES (:mbfeoverdraftlt_c.row_id,
			:mbfeoverdraftlt_c.consigndate,
			:mbfeoverdraftlt_c.accrualtime,
			:mbfeoverdraftlt_c.overdraftamnt,
			:mbfeoverdraftlt_c.rate,
			:mbfeoverdraftlt_c.accrualamnt);
	if ( sqlca.sqlcode && sqlca.sqlcode != -1 )
	{
		sprintf(acErrMsg,"INSERT mbfeoverdraftlt error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D107" );
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == -1 )
	{
		sprintf(acErrMsg,"INSERT mbfeoverdraftlt error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D108" );
		return CM_SQLCODE;
	}

	return 0;
}
