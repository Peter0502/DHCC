#include<stdio.h>
#include<varargs.h>

#define EXTERN
#include"global.h"


EXEC SQL INCLUDE SQLCA;
#include"draw_loan_hst_c.h"
#define CM_SQLCODE sqlca.sqlcode==1403?100:(sqlca.sqlcode==-1?-239:sqlca.sqlcode)

int draw_loan_hst_con ( struct draw_loan_hst_c , char *);
int put_mystery( char *, char * );
char *zip_tail(char *s);
static void zip_struct(struct draw_loan_hst_c* ps){
	zip_tail(ps->rowid);
	zip_tail(ps->st_flag);
	zip_tail(ps->pact_no);
	zip_tail(ps->draw_no);
	zip_tail(ps->ac_no);
	zip_tail(ps->approve_tel);
	zip_tail(ps->sts);
	zip_tail(ps->tel);
	zip_tail(ps->trust_ac_no);
	zip_tail(ps->trust_name);
	zip_tail(ps->opn_br_name);
	zip_tail(ps->brf1);
	zip_tail(ps->brf2);
}
int Draw_loan_hst_Debug(struct draw_loan_hst_c *ps){
	vtcp_log("draw_loan_hst_c.rowid=[%s]\n",ps->rowid);
	vtcp_log("draw_loan_hst_c.st_flag=[%s]\n",ps->st_flag);
	vtcp_log("draw_loan_hst_c.pact_no=[%s]\n",ps->pact_no);
	vtcp_log("draw_loan_hst_c.draw_no=[%s]\n",ps->draw_no);
	vtcp_log("draw_loan_hst_c.ac_no=[%s]\n",ps->ac_no);
	vtcp_log("draw_loan_hst_c.ac_id=[%ld]\n",ps->ac_id);
	vtcp_log("draw_loan_hst_c.draw_amt=[%f]\n",ps->draw_amt);
	vtcp_log("draw_loan_hst_c.approve_tel=[%s]\n",ps->approve_tel);
	vtcp_log("draw_loan_hst_c.approve_date=[%ld]\n",ps->approve_date);
	vtcp_log("draw_loan_hst_c.sts=[%s]\n",ps->sts);
	vtcp_log("draw_loan_hst_c.tel=[%s]\n",ps->tel);
	vtcp_log("draw_loan_hst_c.trace_no=[%ld]\n",ps->trace_no);
	vtcp_log("draw_loan_hst_c.tx_date=[%ld]\n",ps->tx_date);
	vtcp_log("draw_loan_hst_c.ejfno=[%ld]\n",ps->ejfno);
	vtcp_log("draw_loan_hst_c.trust_ac_no=[%s]\n",ps->trust_ac_no);
	vtcp_log("draw_loan_hst_c.trust_name=[%s]\n",ps->trust_name);
	vtcp_log("draw_loan_hst_c.opn_br_name=[%s]\n",ps->opn_br_name);
	vtcp_log("draw_loan_hst_c.brf1=[%s]\n",ps->brf1);
	vtcp_log("draw_loan_hst_c.brf2=[%s]\n",ps->brf2);
	return(0);
}
/*****************************************************************************/
/****                              查询函数部分[]                       ****/
/*****************************************************************************/
int Draw_loan_hst_Sel(reply,draw_loan_hst_c,fmtstr,va_alist)
char    *reply;
struct  draw_loan_hst_c *draw_loan_hst_c;
char    *fmtstr;
va_dcl
{
	int   ret;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	ret = Draw_loan_hst_Dec_Sel( reply , "%s" , wherelist );
	if (ret){
		WRITEMSG
		return ret;
	}
	ret = Draw_loan_hst_Fet_Sel( draw_loan_hst_c , reply );
	if (ret){
		WRITEMSG
		return ret;
	}

	Draw_loan_hst_Clo_Sel();

	return 0;
}



char *key_strcat(char *,char *);
int Draw_loan_hst_Dec_Sel ( reply , fmtstr , va_alist )
char    *reply;
char    *fmtstr;
va_dcl
{
	EXEC    SQL BEGIN   DECLARE SECTION;
		char    comm[1000];
	EXEC    SQL END     DECLARE SECTION;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	sprintf ( comm ," SELECT rowid,draw_loan_hst.* FROM draw_loan_hst WHERE  ");
	key_strcat(comm,wherelist);

	vtcp_log("%s,%d,SQLSTR=[%s]\n",__FILE__,__LINE__,comm);
	sqlca.sqlcode=0;
	EXEC SQL PREPARE draw_loan_hst_sel FROM :comm;
	EXEC SQL DECLARE sel_draw_loan_hst CURSOR FOR draw_loan_hst_sel;

	EXEC SQL OPEN sel_draw_loan_hst;
	if (sqlca.sqlcode){
		sprintf(acErrMsg,"OPEN draw_loan_hst error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D102" );
		return CM_SQLCODE;
	}

	return 0;
}

int Draw_loan_hst_Fet_Sel ( struct draw_loan_hst_c *draw_loan_hst_c , char * reply )
{

	int   ret;

	EXEC SQL FETCH sel_draw_loan_hst INTO :draw_loan_hst_c;
	if (sqlca.sqlcode&&sqlca.sqlcode!=1403){
		sprintf(acErrMsg,"Fetch draw_loan_hst error!!! %d",sqlca.sqlcode);
		WRITEMSG
		strcpy (reply,"D103");
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == 1403 ){
		sprintf(acErrMsg,"Fetch draw_loan_hst finished!!! %d",sqlca.sqlcode);
		WRITEMSG
		strcpy (reply,"D104");
		return CM_SQLCODE;
	}
	zip_struct(draw_loan_hst_c);

	return 0;
}

int Draw_loan_hst_Clo_Sel (){
	EXEC SQL CLOSE sel_draw_loan_hst;
	return 0;
}

/*****************************************************************************/
/****                              修改函数部分                           ****/
/*****************************************************************************/
int Draw_loan_hst_Dec_Upd( reply , fmtstr , va_alist)
char    *reply;
char    *fmtstr;
va_dcl
{
	EXEC    SQL BEGIN   DECLARE SECTION;
		char    comm[1000];
	EXEC    SQL END     DECLARE SECTION;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	sprintf ( comm , "SELECT rowid,draw_loan_hst.* FROM draw_loan_hst WHERE  ");
	key_strcat(comm,wherelist);
	strcat(comm," FOR UPDATE WAIT 5 ");
	vtcp_log("%s,%d,SQLSTR=[%s]\n",__FILE__,__LINE__,comm);
	sqlca.sqlcode=0;
	EXEC SQL PREPARE draw_loan_hst_upd FROM :comm;

	EXEC SQL DECLARE upd_draw_loan_hst CURSOR FOR draw_loan_hst_upd;

	EXEC SQL OPEN upd_draw_loan_hst;
	if (sqlca.sqlcode){
		sprintf(acErrMsg,"open draw_loan_hst error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D102" );
		return CM_SQLCODE;
	}

	return 0;
}

int Draw_loan_hst_Fet_Upd( struct draw_loan_hst_c *draw_loan_hst_c , char * reply ){
	int   ret;

	EXEC SQL FETCH upd_draw_loan_hst INTO :draw_loan_hst_c;
	if ( sqlca.sqlcode && sqlca.sqlcode!=1403 ){
		sprintf(acErrMsg,"FETCH upd draw_loan_hst error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D103" );
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == 1403 ){
		sprintf(acErrMsg,"FETCH draw_loan_hst finished %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D104" );
		return CM_SQLCODE;
	}
	zip_struct(draw_loan_hst_c);

	return 0;
}

int Draw_loan_hst_Upd_Upd( struct draw_loan_hst_c draw_loan_hst_c , char * reply){
	int ret;

	EXEC SQL UPDATE draw_loan_hst SET st_flag=:draw_loan_hst_c.st_flag,
			pact_no=:draw_loan_hst_c.pact_no,
			draw_no=:draw_loan_hst_c.draw_no,
			ac_no=:draw_loan_hst_c.ac_no,
			ac_id=:draw_loan_hst_c.ac_id,
			draw_amt=:draw_loan_hst_c.draw_amt,
			approve_tel=:draw_loan_hst_c.approve_tel,
			approve_date=:draw_loan_hst_c.approve_date,
			sts=:draw_loan_hst_c.sts,
			tel=:draw_loan_hst_c.tel,
			trace_no=:draw_loan_hst_c.trace_no,
			tx_date=:draw_loan_hst_c.tx_date,
			ejfno=:draw_loan_hst_c.ejfno,
			trust_ac_no=:draw_loan_hst_c.trust_ac_no,
			trust_name=:draw_loan_hst_c.trust_name,
			opn_br_name=:draw_loan_hst_c.opn_br_name,
			brf1=:draw_loan_hst_c.brf1,
			brf2=:draw_loan_hst_c.brf2
	WHERE rowid=:draw_loan_hst_c.rowid;
	if ( sqlca.sqlcode && sqlca.sqlcode != 1403 ){
		sprintf(acErrMsg,"UPDATE draw_loan_hst error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D105" );
		return CM_SQLCODE;
	}

	return 0;
}


int Draw_loan_hst_Del_Upd(struct draw_loan_hst_c draw_loan_hst_c , char * reply  ){

	EXEC SQL DELETE FROM draw_loan_hst WHERE rowid=:draw_loan_hst_c.rowid;
	if ( sqlca.sqlcode ){
		sprintf(acErrMsg,"DELETE draw_loan_hst error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D105" );
		return CM_SQLCODE;
	}

	return 0;
}

int Draw_loan_hst_Clo_Upd( ){
	EXEC SQL CLOSE upd_draw_loan_hst;
	return 0;
}

/*****************************************************************************/
/****                              增加函数部分                           ****/
/*****************************************************************************/
int Draw_loan_hst_Ins( struct draw_loan_hst_c draw_loan_hst_c , char * reply ){
	int ret;

	EXEC SQL INSERT INTO draw_loan_hst VALUES (:draw_loan_hst_c.st_flag,
			:draw_loan_hst_c.pact_no,
			:draw_loan_hst_c.draw_no,
			:draw_loan_hst_c.ac_no,
			:draw_loan_hst_c.ac_id,
			:draw_loan_hst_c.draw_amt,
			:draw_loan_hst_c.approve_tel,
			:draw_loan_hst_c.approve_date,
			:draw_loan_hst_c.sts,
			:draw_loan_hst_c.tel,
			:draw_loan_hst_c.trace_no,
			:draw_loan_hst_c.tx_date,
			:draw_loan_hst_c.ejfno,
			:draw_loan_hst_c.trust_ac_no,
			:draw_loan_hst_c.trust_name,
			:draw_loan_hst_c.opn_br_name,
			:draw_loan_hst_c.brf1,
			:draw_loan_hst_c.brf2);
	if ( sqlca.sqlcode && sqlca.sqlcode != -1 )
	{
		sprintf(acErrMsg,"INSERT draw_loan_hst error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D107" );
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == -1 )
	{
		sprintf(acErrMsg,"INSERT draw_loan_hst error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D108" );
		return CM_SQLCODE;
	}

	return 0;
}
