#include<stdio.h>
#include<varargs.h>

#define EXTERN
#include"global.h"


EXEC SQL INCLUDE SQLCA;
#include"ag_peritemmap_c.h"
#define CM_SQLCODE sqlca.sqlcode==1403?100:(sqlca.sqlcode==-1?-239:sqlca.sqlcode)

int ag_peritemmap_con ( struct ag_peritemmap_c , char *);
int put_mystery( char *, char * );
char *zip_tail(char *s);
static void zip_struct(struct ag_peritemmap_c* ps){
	zip_tail(ps->rowid);
	zip_tail(ps->unit_no);
	zip_tail(ps->item_no);
	zip_tail(ps->name);
	zip_tail(ps->id_type);
	zip_tail(ps->id_no);
	zip_tail(ps->ac_no);
	zip_tail(ps->remark);
	zip_tail(ps->bat_flag);
	zip_tail(ps->stat);
	zip_tail(ps->opn_tel);
	zip_tail(ps->cls_tel);
}
int Ag_peritemmap_Debug(struct ag_peritemmap_c *ps){
	vtcp_log("ag_peritemmap_c.rowid=[%s]\n",ps->rowid);
	vtcp_log("ag_peritemmap_c.unit_no=[%s]\n",ps->unit_no);
	vtcp_log("ag_peritemmap_c.item_no=[%s]\n",ps->item_no);
	vtcp_log("ag_peritemmap_c.name=[%s]\n",ps->name);
	vtcp_log("ag_peritemmap_c.id_type=[%s]\n",ps->id_type);
	vtcp_log("ag_peritemmap_c.id_no=[%s]\n",ps->id_no);
	vtcp_log("ag_peritemmap_c.ac_no=[%s]\n",ps->ac_no);
	vtcp_log("ag_peritemmap_c.remark=[%s]\n",ps->remark);
	vtcp_log("ag_peritemmap_c.bgn_use_date=[%ld]\n",ps->bgn_use_date);
	vtcp_log("ag_peritemmap_c.bat_flag=[%s]\n",ps->bat_flag);
	vtcp_log("ag_peritemmap_c.stat=[%s]\n",ps->stat);
	vtcp_log("ag_peritemmap_c.opn_date=[%ld]\n",ps->opn_date);
	vtcp_log("ag_peritemmap_c.opn_tel=[%s]\n",ps->opn_tel);
	vtcp_log("ag_peritemmap_c.cls_date=[%ld]\n",ps->cls_date);
	vtcp_log("ag_peritemmap_c.cls_tel=[%s]\n",ps->cls_tel);
	return(0);
}
/*****************************************************************************/
/****                              查询函数部分[]                       ****/
/*****************************************************************************/
int Ag_peritemmap_Sel(reply,ag_peritemmap_c,fmtstr,va_alist)
char    *reply;
struct  ag_peritemmap_c *ag_peritemmap_c;
char    *fmtstr;
va_dcl
{
	int   ret;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	ret = Ag_peritemmap_Dec_Sel( reply , "%s" , wherelist );
	if (ret){
		WRITEMSG
		return ret;
	}
	ret = Ag_peritemmap_Fet_Sel( ag_peritemmap_c , reply );
	if (ret){
		WRITEMSG
		return ret;
	}

	Ag_peritemmap_Clo_Sel();

	return 0;
}



char *key_strcat(char *,char *);
int Ag_peritemmap_Dec_Sel ( reply , fmtstr , va_alist )
char    *reply;
char    *fmtstr;
va_dcl
{
	EXEC    SQL BEGIN   DECLARE SECTION;
		char    comm[1000];
	EXEC    SQL END     DECLARE SECTION;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	sprintf ( comm ," SELECT rowid,ag_peritemmap.* FROM ag_peritemmap WHERE  ");
	key_strcat(comm,wherelist);

	vtcp_log("%s,%d,SQLSTR=[%s]\n",__FILE__,__LINE__,comm);
	sqlca.sqlcode=0;
	EXEC SQL PREPARE ag_peritemmap_sel FROM :comm;
	EXEC SQL DECLARE sel_ag_peritemmap CURSOR FOR ag_peritemmap_sel;

	EXEC SQL OPEN sel_ag_peritemmap;
	if (sqlca.sqlcode){
		sprintf(acErrMsg,"OPEN ag_peritemmap error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D102" );
		return CM_SQLCODE;
	}

	return 0;
}

int Ag_peritemmap_Fet_Sel ( struct ag_peritemmap_c *ag_peritemmap_c , char * reply )
{

	int   ret;

	EXEC SQL FETCH sel_ag_peritemmap INTO :ag_peritemmap_c;
	if (sqlca.sqlcode&&sqlca.sqlcode!=1403){
		sprintf(acErrMsg,"Fetch ag_peritemmap error!!! %d",sqlca.sqlcode);
		WRITEMSG
		strcpy (reply,"D103");
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == 1403 ){
		sprintf(acErrMsg,"Fetch ag_peritemmap finished!!! %d",sqlca.sqlcode);
		WRITEMSG
		strcpy (reply,"D104");
		return CM_SQLCODE;
	}
	zip_struct(ag_peritemmap_c);

	return 0;
}

int Ag_peritemmap_Clo_Sel (){
	EXEC SQL CLOSE sel_ag_peritemmap;
	return 0;
}

/*****************************************************************************/
/****                              修改函数部分                           ****/
/*****************************************************************************/
int Ag_peritemmap_Dec_Upd( reply , fmtstr , va_alist)
char    *reply;
char    *fmtstr;
va_dcl
{
	EXEC    SQL BEGIN   DECLARE SECTION;
		char    comm[1000];
	EXEC    SQL END     DECLARE SECTION;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	sprintf ( comm , "SELECT rowid,ag_peritemmap.* FROM ag_peritemmap WHERE  ");
	key_strcat(comm,wherelist);
	strcat(comm," FOR UPDATE WAIT 5 ");
	vtcp_log("%s,%d,SQLSTR=[%s]\n",__FILE__,__LINE__,comm);
	sqlca.sqlcode=0;
	EXEC SQL PREPARE ag_peritemmap_upd FROM :comm;

	EXEC SQL DECLARE upd_ag_peritemmap CURSOR FOR ag_peritemmap_upd;

	EXEC SQL OPEN upd_ag_peritemmap;
	if (sqlca.sqlcode){
		sprintf(acErrMsg,"open ag_peritemmap error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D102" );
		return CM_SQLCODE;
	}

	return 0;
}

int Ag_peritemmap_Fet_Upd( struct ag_peritemmap_c *ag_peritemmap_c , char * reply ){
	int   ret;

	EXEC SQL FETCH upd_ag_peritemmap INTO :ag_peritemmap_c;
	if ( sqlca.sqlcode && sqlca.sqlcode!=1403 ){
		sprintf(acErrMsg,"FETCH upd ag_peritemmap error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D103" );
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == 1403 ){
		sprintf(acErrMsg,"FETCH ag_peritemmap finished %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D104" );
		return CM_SQLCODE;
	}
	zip_struct(ag_peritemmap_c);

	return 0;
}

int Ag_peritemmap_Upd_Upd( struct ag_peritemmap_c ag_peritemmap_c , char * reply){
	int ret;

	EXEC SQL UPDATE ag_peritemmap SET unit_no=:ag_peritemmap_c.unit_no,
			item_no=:ag_peritemmap_c.item_no,
			name=:ag_peritemmap_c.name,
			id_type=:ag_peritemmap_c.id_type,
			id_no=:ag_peritemmap_c.id_no,
			ac_no=:ag_peritemmap_c.ac_no,
			remark=:ag_peritemmap_c.remark,
			bgn_use_date=:ag_peritemmap_c.bgn_use_date,
			bat_flag=:ag_peritemmap_c.bat_flag,
			stat=:ag_peritemmap_c.stat,
			opn_date=:ag_peritemmap_c.opn_date,
			opn_tel=:ag_peritemmap_c.opn_tel,
			cls_date=:ag_peritemmap_c.cls_date,
			cls_tel=:ag_peritemmap_c.cls_tel
	WHERE rowid=:ag_peritemmap_c.rowid;
	if ( sqlca.sqlcode && sqlca.sqlcode != 1403 ){
		sprintf(acErrMsg,"UPDATE ag_peritemmap error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D105" );
		return CM_SQLCODE;
	}

	return 0;
}


int Ag_peritemmap_Del_Upd(struct ag_peritemmap_c ag_peritemmap_c , char * reply  ){

	EXEC SQL DELETE FROM ag_peritemmap WHERE rowid=:ag_peritemmap_c.rowid;
	if ( sqlca.sqlcode ){
		sprintf(acErrMsg,"DELETE ag_peritemmap error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D105" );
		return CM_SQLCODE;
	}

	return 0;
}

int Ag_peritemmap_Clo_Upd( ){
	EXEC SQL CLOSE upd_ag_peritemmap;
	return 0;
}

/*****************************************************************************/
/****                              增加函数部分                           ****/
/*****************************************************************************/
int Ag_peritemmap_Ins( struct ag_peritemmap_c ag_peritemmap_c , char * reply ){
	int ret;

	EXEC SQL INSERT INTO ag_peritemmap VALUES (:ag_peritemmap_c.unit_no,
			:ag_peritemmap_c.item_no,
			:ag_peritemmap_c.name,
			:ag_peritemmap_c.id_type,
			:ag_peritemmap_c.id_no,
			:ag_peritemmap_c.ac_no,
			:ag_peritemmap_c.remark,
			:ag_peritemmap_c.bgn_use_date,
			:ag_peritemmap_c.bat_flag,
			:ag_peritemmap_c.stat,
			:ag_peritemmap_c.opn_date,
			:ag_peritemmap_c.opn_tel,
			:ag_peritemmap_c.cls_date,
			:ag_peritemmap_c.cls_tel);
	if ( sqlca.sqlcode && sqlca.sqlcode != -1 )
	{
		sprintf(acErrMsg,"INSERT ag_peritemmap error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D107" );
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == -1 )
	{
		sprintf(acErrMsg,"INSERT ag_peritemmap error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D108" );
		return CM_SQLCODE;
	}

	return 0;
}
