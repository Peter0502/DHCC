#include<stdio.h>
#include<varargs.h>

#define EXTERN
#include"global.h"


EXEC SQL INCLUDE SQLCA;
#include"mq_acct_no_c.h"
#define CM_SQLCODE sqlca.sqlcode==1403?100:(sqlca.sqlcode==-1?-239:sqlca.sqlcode)

int mq_acct_no_con ( struct mq_acct_no_c , char *);
int put_mystery( char *, char * );
char *zip_tail(char *s);
static void zip_struct(struct mq_acct_no_c* ps){
	zip_tail(ps->payee_bankno);
	zip_tail(ps->payeeorg_code);
	zip_tail(ps->payee_acct);
	zip_tail(ps->payee_name);
	zip_tail(ps->ac_no);
}
int Mq_acct_no_Debug(struct mq_acct_no_c *ps){
	printf("mq_acct_no_c.payee_bankno=[%s]\n",ps->payee_bankno);
	printf("mq_acct_no_c.payeeorg_code=[%s]\n",ps->payeeorg_code);
	printf("mq_acct_no_c.payee_acct=[%s]\n",ps->payee_acct);
	printf("mq_acct_no_c.payee_name=[%s]\n",ps->payee_name);
	printf("mq_acct_no_c.ac_no=[%s]\n",ps->ac_no);
	return(0);
}
/*****************************************************************************/
/****                              查询函数部分                           ****/
/*****************************************************************************/
int Mq_acct_no_Sel(reply,mq_acct_no_c,fmtstr,va_alist)
char    *reply;
struct  mq_acct_no_c *mq_acct_no_c;
char    *fmtstr;
va_dcl
{
	int   ret;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	ret = Mq_acct_no_Dec_Sel( reply , "%s" , wherelist );
	if (ret){
		WRITEMSG
		return ret;
	}
	ret = Mq_acct_no_Fet_Sel( mq_acct_no_c , reply );
	if (ret){
		WRITEMSG
		return ret;
	}

	Mq_acct_no_Clo_Sel();

	return 0;
}



char *key_strcat(char *,char *);
int Mq_acct_no_Dec_Sel ( reply , fmtstr , va_alist )
char    *reply;
char    *fmtstr;
va_dcl
{
	EXEC    SQL BEGIN   DECLARE SECTION;
		char    comm[1000];
	EXEC    SQL END     DECLARE SECTION;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	sprintf ( comm ," SELECT mq_acct_no.* FROM mq_acct_no WHERE  ");
	key_strcat(comm,wherelist);

	vtcp_log("%s,%d,SQLSTR=[%s]\n",__FILE__,__LINE__,comm);
	sqlca.sqlcode=0;
	EXEC SQL PREPARE mq_acct_no_sel FROM :comm;
	EXEC SQL DECLARE sel_mq_acct_no CURSOR FOR mq_acct_no_sel;

	EXEC SQL OPEN sel_mq_acct_no;
	if (sqlca.sqlcode){
		sprintf(acErrMsg,"OPEN mq_acct_no error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D102" );
		return CM_SQLCODE;
	}

	return 0;
}

int Mq_acct_no_Fet_Sel ( struct mq_acct_no_c *mq_acct_no_c , char * reply )
{

	int   ret;

	EXEC SQL FETCH sel_mq_acct_no INTO :mq_acct_no_c;
	if (sqlca.sqlcode&&sqlca.sqlcode!=1403){
		sprintf(acErrMsg,"Fetch mq_acct_no error!!! %d",sqlca.sqlcode);
		WRITEMSG
		strcpy (reply,"D103");
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == 1403 ){
		sprintf(acErrMsg,"Fetch mq_acct_no finished!!! %d",sqlca.sqlcode);
		WRITEMSG
		strcpy (reply,"D104");
		return CM_SQLCODE;
	}
	zip_struct(mq_acct_no_c);

	return 0;
}

int Mq_acct_no_Clo_Sel (){
	EXEC SQL CLOSE sel_mq_acct_no;
}

/*****************************************************************************/
/****                              修改函数部分                           ****/
/*****************************************************************************/
int Mq_acct_no_Dec_Upd( reply , fmtstr , va_alist)
char    *reply;
char    *fmtstr;
va_dcl
{
	EXEC    SQL BEGIN   DECLARE SECTION;
		char    comm[1000];
	EXEC    SQL END     DECLARE SECTION;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	sprintf ( comm , "SELECT mq_acct_no.* FROM mq_acct_no WHERE  ");
	key_strcat(comm,wherelist);
	strcat(comm," FOR UPDATE WAIT 5 ");
	vtcp_log("%s,%d,SQLSTR=[%s]\n",__FILE__,__LINE__,comm);
	sqlca.sqlcode=0;
	EXEC SQL PREPARE mq_acct_no_upd FROM :comm;

	EXEC SQL DECLARE upd_mq_acct_no CURSOR FOR mq_acct_no_upd;

	EXEC SQL OPEN upd_mq_acct_no;
	if (sqlca.sqlcode){
		sprintf(acErrMsg,"open mq_acct_no error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D102" );
		return CM_SQLCODE;
	}

	return 0;
}

int Mq_acct_no_Fet_Upd( struct mq_acct_no_c *mq_acct_no_c , char * reply ){
	int   ret;

	EXEC SQL FETCH upd_mq_acct_no INTO :mq_acct_no_c;
	if ( sqlca.sqlcode && sqlca.sqlcode!=1403 ){
		sprintf(acErrMsg,"FETCH upd mq_acct_no error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D103" );
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == 1403 ){
		sprintf(acErrMsg,"FETCH mq_acct_no finished %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D104" );
		return CM_SQLCODE;
	}
	zip_struct(mq_acct_no_c);

	return 0;
}

int Mq_acct_no_Upd_Upd( struct mq_acct_no_c mq_acct_no_c , char * reply){
	int ret;

	EXEC SQL UPDATE mq_acct_no SET payee_bankno=:mq_acct_no_c.payee_bankno,
			payeeorg_code=:mq_acct_no_c.payeeorg_code,
			payee_acct=:mq_acct_no_c.payee_acct,
			payee_name=:mq_acct_no_c.payee_name,
			ac_no=:mq_acct_no_c.ac_no
	WHERE 1=0;
	if ( sqlca.sqlcode && sqlca.sqlcode != 1403 ){
		sprintf(acErrMsg,"UPDATE mq_acct_no error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D105" );
		return CM_SQLCODE;
	}
	pub_reg_rec_file(" upd mq_acct_no"); 

	return 0;
}


int Mq_acct_no_Del_Upd(struct mq_acct_no_c mq_acct_no_c , char * reply  ){

	EXEC SQL DELETE FROM mq_acct_no WHERE rowid='0000';
	if ( sqlca.sqlcode ){
		sprintf(acErrMsg,"DELETE mq_acct_no error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D105" );
		return CM_SQLCODE;
	}

	return 0;
}

int Mq_acct_no_Clo_Upd( ){
	EXEC SQL CLOSE upd_mq_acct_no;

	return 0;
}

/*****************************************************************************/
/****                              增加函数部分                           ****/
/*****************************************************************************/
int Mq_acct_no_Ins( struct mq_acct_no_c mq_acct_no_c , char * reply ){
	int ret;

	EXEC SQL INSERT INTO mq_acct_no VALUES (:mq_acct_no_c.payee_bankno,
			:mq_acct_no_c.payeeorg_code,
			:mq_acct_no_c.payee_acct,
			:mq_acct_no_c.payee_name,
			:mq_acct_no_c.ac_no);
	if ( sqlca.sqlcode && sqlca.sqlcode != -1 )
	{
		sprintf(acErrMsg,"INSERT mq_acct_no error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D107" );
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == -1 )
	{
		sprintf(acErrMsg,"INSERT mq_acct_no error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D108" );
		return CM_SQLCODE;
	}
	pub_reg_rec_file(" ins mq_acct_no"); 

	return 0;
}
