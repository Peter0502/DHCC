#include<stdio.h>
#include<varargs.h>

#define EXTERN
#include"global.h"


EXEC SQL INCLUDE SQLCA;
#include"chnl_marchinfo_c.h"
#define CM_SQLCODE sqlca.sqlcode==1403?100:(sqlca.sqlcode==-1?-239:sqlca.sqlcode)

int chnl_marchinfo_con ( struct chnl_marchinfo_c , char *);
int put_mystery( char *, char * );
char *zip_tail(char *s);
static void zip_struct(struct chnl_marchinfo_c* ps){
	zip_tail(ps->mrchno);
	zip_tail(ps->mrchnm);
	zip_tail(ps->br_no);
	zip_tail(ps->mrchtype);
	zip_tail(ps->mrchstat);
	zip_tail(ps->mrchacno);
	zip_tail(ps->mrchaddr);
	zip_tail(ps->mrch_phon);
	zip_tail(ps->mrchman);
}
int Chnl_marchinfo_Debug(struct chnl_marchinfo_c *ps){
	printf("chnl_marchinfo_c.mrchno=[%s]\n",ps->mrchno);
	printf("chnl_marchinfo_c.mrchnm=[%s]\n",ps->mrchnm);
	printf("chnl_marchinfo_c.br_no=[%s]\n",ps->br_no);
	printf("chnl_marchinfo_c.mrchtype=[%s]\n",ps->mrchtype);
	printf("chnl_marchinfo_c.mrchstat=[%s]\n",ps->mrchstat);
	printf("chnl_marchinfo_c.mrchacno=[%s]\n",ps->mrchacno);
	printf("chnl_marchinfo_c.mrchaddr=[%s]\n",ps->mrchaddr);
	printf("chnl_marchinfo_c.mrch_phon=[%s]\n",ps->mrch_phon);
	printf("chnl_marchinfo_c.mrchman=[%s]\n",ps->mrchman);
	printf("chnl_marchinfo_c.chrg=[%f]\n",ps->chrg);
	printf("chnl_marchinfo_c.reg_date=[%ld]\n",ps->reg_date);
	printf("chnl_marchinfo_c.beg_date=[%ld]\n",ps->beg_date);
	printf("chnl_marchinfo_c.end_ate=[%ld]\n",ps->end_ate);
	return(0);
}
/*****************************************************************************/
/****                              查询函数部分                           ****/
/*****************************************************************************/
int Chnl_marchinfo_Sel(reply,chnl_marchinfo_c,fmtstr,va_alist)
char    *reply;
struct  chnl_marchinfo_c *chnl_marchinfo_c;
char    *fmtstr;
va_dcl
{
	int   ret;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	ret = Chnl_marchinfo_Dec_Sel( reply , "%s" , wherelist );
	if (ret){
		WRITEMSG
		return ret;
	}
	ret = Chnl_marchinfo_Fet_Sel( chnl_marchinfo_c , reply );
	if (ret){
		WRITEMSG
		return ret;
	}

	Chnl_marchinfo_Clo_Sel();

	return 0;
}



char *key_strcat(char *,char *);
int Chnl_marchinfo_Dec_Sel ( reply , fmtstr , va_alist )
char    *reply;
char    *fmtstr;
va_dcl
{
	EXEC    SQL BEGIN   DECLARE SECTION;
		char    comm[1000];
	EXEC    SQL END     DECLARE SECTION;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	sprintf ( comm ," SELECT chnl_marchinfo.* FROM chnl_marchinfo WHERE  ");
	key_strcat(comm,wherelist);

	vtcp_log("%s,%d,SQLSTR=[%s]\n",__FILE__,__LINE__,comm);
	sqlca.sqlcode=0;
	EXEC SQL PREPARE chnl_marchinfo_sel FROM :comm;
	EXEC SQL DECLARE sel_chnl_marchinfo CURSOR FOR chnl_marchinfo_sel;

	EXEC SQL OPEN sel_chnl_marchinfo;
	if (sqlca.sqlcode){
		sprintf(acErrMsg,"OPEN chnl_marchinfo error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D102" );
		return CM_SQLCODE;
	}

	return 0;
}

int Chnl_marchinfo_Fet_Sel ( struct chnl_marchinfo_c *chnl_marchinfo_c , char * reply )
{

	int   ret;

	EXEC SQL FETCH sel_chnl_marchinfo INTO :chnl_marchinfo_c;
	if (sqlca.sqlcode&&sqlca.sqlcode!=1403){
		sprintf(acErrMsg,"Fetch chnl_marchinfo error!!! %d",sqlca.sqlcode);
		WRITEMSG
		strcpy (reply,"D103");
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == 1403 ){
		sprintf(acErrMsg,"Fetch chnl_marchinfo finished!!! %d",sqlca.sqlcode);
		WRITEMSG
		strcpy (reply,"D104");
		return CM_SQLCODE;
	}
	zip_struct(chnl_marchinfo_c);

	return 0;
}

int Chnl_marchinfo_Clo_Sel (){
	EXEC SQL CLOSE sel_chnl_marchinfo;
}

/*****************************************************************************/
/****                              修改函数部分                           ****/
/*****************************************************************************/
int Chnl_marchinfo_Dec_Upd( reply , fmtstr , va_alist)
char    *reply;
char    *fmtstr;
va_dcl
{
	EXEC    SQL BEGIN   DECLARE SECTION;
		char    comm[1000];
	EXEC    SQL END     DECLARE SECTION;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	sprintf ( comm , "SELECT chnl_marchinfo.* FROM chnl_marchinfo WHERE  ");
	key_strcat(comm,wherelist);
	strcat(comm," FOR UPDATE WAIT 5 ");
	vtcp_log("%s,%d,SQLSTR=[%s]\n",__FILE__,__LINE__,comm);
	sqlca.sqlcode=0;
	EXEC SQL PREPARE chnl_marchinfo_upd FROM :comm;

	EXEC SQL DECLARE upd_chnl_marchinfo CURSOR FOR chnl_marchinfo_upd;

	EXEC SQL OPEN upd_chnl_marchinfo;
	if (sqlca.sqlcode){
		sprintf(acErrMsg,"open chnl_marchinfo error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D102" );
		return CM_SQLCODE;
	}

	return 0;
}

int Chnl_marchinfo_Fet_Upd( struct chnl_marchinfo_c *chnl_marchinfo_c , char * reply ){
	int   ret;

	EXEC SQL FETCH upd_chnl_marchinfo INTO :chnl_marchinfo_c;
	if ( sqlca.sqlcode && sqlca.sqlcode!=1403 ){
		sprintf(acErrMsg,"FETCH upd chnl_marchinfo error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D103" );
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == 1403 ){
		sprintf(acErrMsg,"FETCH chnl_marchinfo finished %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D104" );
		return CM_SQLCODE;
	}
	zip_struct(chnl_marchinfo_c);

	return 0;
}

int Chnl_marchinfo_Upd_Upd( struct chnl_marchinfo_c chnl_marchinfo_c , char * reply){
	int ret;

	EXEC SQL UPDATE chnl_marchinfo SET mrchno=:chnl_marchinfo_c.mrchno,
			mrchnm=:chnl_marchinfo_c.mrchnm,
			br_no=:chnl_marchinfo_c.br_no,
			mrchtype=:chnl_marchinfo_c.mrchtype,
			mrchstat=:chnl_marchinfo_c.mrchstat,
			mrchacno=:chnl_marchinfo_c.mrchacno,
			mrchaddr=:chnl_marchinfo_c.mrchaddr,
			mrch_phon=:chnl_marchinfo_c.mrch_phon,
			mrchman=:chnl_marchinfo_c.mrchman,
			chrg=:chnl_marchinfo_c.chrg,
			reg_date=:chnl_marchinfo_c.reg_date,
			beg_date=:chnl_marchinfo_c.beg_date,
			end_ate=:chnl_marchinfo_c.end_ate
	WHERE 1=0;
	if ( sqlca.sqlcode && sqlca.sqlcode != 1403 ){
		sprintf(acErrMsg,"UPDATE chnl_marchinfo error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D105" );
		return CM_SQLCODE;
	}
	pub_reg_rec_file(" upd chnl_marchinfo"); 

	return 0;
}


int Chnl_marchinfo_Del_Upd(struct chnl_marchinfo_c chnl_marchinfo_c , char * reply  ){

	EXEC SQL DELETE FROM chnl_marchinfo WHERE rowid='0000';
	if ( sqlca.sqlcode ){
		sprintf(acErrMsg,"DELETE chnl_marchinfo error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D105" );
		return CM_SQLCODE;
	}

	return 0;
}

int Chnl_marchinfo_Clo_Upd( ){
	EXEC SQL CLOSE upd_chnl_marchinfo;

	return 0;
}

/*****************************************************************************/
/****                              增加函数部分                           ****/
/*****************************************************************************/
int Chnl_marchinfo_Ins( struct chnl_marchinfo_c chnl_marchinfo_c , char * reply ){
	int ret;

	EXEC SQL INSERT INTO chnl_marchinfo VALUES (:chnl_marchinfo_c.mrchno,
			:chnl_marchinfo_c.mrchnm,
			:chnl_marchinfo_c.br_no,
			:chnl_marchinfo_c.mrchtype,
			:chnl_marchinfo_c.mrchstat,
			:chnl_marchinfo_c.mrchacno,
			:chnl_marchinfo_c.mrchaddr,
			:chnl_marchinfo_c.mrch_phon,
			:chnl_marchinfo_c.mrchman,
			:chnl_marchinfo_c.chrg,
			:chnl_marchinfo_c.reg_date,
			:chnl_marchinfo_c.beg_date,
			:chnl_marchinfo_c.end_ate);
	if ( sqlca.sqlcode && sqlca.sqlcode != -1 )
	{
		sprintf(acErrMsg,"INSERT chnl_marchinfo error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D107" );
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == -1 )
	{
		sprintf(acErrMsg,"INSERT chnl_marchinfo error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D108" );
		return CM_SQLCODE;
	}
	pub_reg_rec_file(" ins chnl_marchinfo"); 

	return 0;
}
