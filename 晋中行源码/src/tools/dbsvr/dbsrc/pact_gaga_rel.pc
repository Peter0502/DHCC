#include<stdio.h>
#include<varargs.h>

#define EXTERN
#include"global.h"


EXEC SQL INCLUDE SQLCA;
#include"pact_gaga_rel_c.h"
#define CM_SQLCODE sqlca.sqlcode==1403?100:(sqlca.sqlcode==-1?-239:sqlca.sqlcode)

int pact_gaga_rel_con ( struct pact_gaga_rel_c , char *);
int put_mystery( char *, char * );
char *zip_tail(char *s);
static void zip_struct(struct pact_gaga_rel_c* ps){
	zip_tail(ps->rowid);
	zip_tail(ps->pact_no);
	zip_tail(ps->gaga_id);
	zip_tail(ps->name);
	zip_tail(ps->stsvar);
	zip_tail(ps->pact_type);
	zip_tail(ps->io_ind);
	zip_tail(ps->bill_no);
	zip_tail(ps->filler);
}
int Pact_gaga_rel_Debug(struct pact_gaga_rel_c *ps){
	vtcp_log("pact_gaga_rel_c.rowid=[%s]\n",ps->rowid);
	vtcp_log("pact_gaga_rel_c.pact_no=[%s]\n",ps->pact_no);
	vtcp_log("pact_gaga_rel_c.gaga_id=[%s]\n",ps->gaga_id);
	vtcp_log("pact_gaga_rel_c.name=[%s]\n",ps->name);
	vtcp_log("pact_gaga_rel_c.gaga_bal=[%f]\n",ps->gaga_bal);
	vtcp_log("pact_gaga_rel_c.gaga_val=[%f]\n",ps->gaga_val);
	vtcp_log("pact_gaga_rel_c.stsvar=[%s]\n",ps->stsvar);
	vtcp_log("pact_gaga_rel_c.pact_type=[%s]\n",ps->pact_type);
	vtcp_log("pact_gaga_rel_c.io_ind=[%s]\n",ps->io_ind);
	vtcp_log("pact_gaga_rel_c.bill_no=[%s]\n",ps->bill_no);
	vtcp_log("pact_gaga_rel_c.filler=[%s]\n",ps->filler);
	return(0);
}
/*****************************************************************************/
/****                              查询函数部分[]                       ****/
/*****************************************************************************/
int Pact_gaga_rel_Sel(reply,pact_gaga_rel_c,fmtstr,va_alist)
char    *reply;
struct  pact_gaga_rel_c *pact_gaga_rel_c;
char    *fmtstr;
va_dcl
{
	int   ret;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	ret = Pact_gaga_rel_Dec_Sel( reply , "%s" , wherelist );
	if (ret){
		WRITEMSG
		return ret;
	}
	ret = Pact_gaga_rel_Fet_Sel( pact_gaga_rel_c , reply );
	if (ret){
		WRITEMSG
		return ret;
	}

	Pact_gaga_rel_Clo_Sel();

	return 0;
}



char *key_strcat(char *,char *);
int Pact_gaga_rel_Dec_Sel ( reply , fmtstr , va_alist )
char    *reply;
char    *fmtstr;
va_dcl
{
	EXEC    SQL BEGIN   DECLARE SECTION;
		char    comm[1000];
	EXEC    SQL END     DECLARE SECTION;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	sprintf ( comm ," SELECT rowid,pact_gaga_rel.* FROM pact_gaga_rel WHERE  ");
	key_strcat(comm,wherelist);

	vtcp_log("%s,%d,SQLSTR=[%s]\n",__FILE__,__LINE__,comm);
	sqlca.sqlcode=0;
	EXEC SQL PREPARE pact_gaga_rel_sel FROM :comm;
	EXEC SQL DECLARE sel_pact_gaga_rel CURSOR FOR pact_gaga_rel_sel;

	EXEC SQL OPEN sel_pact_gaga_rel;
	if (sqlca.sqlcode){
		sprintf(acErrMsg,"OPEN pact_gaga_rel error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D102" );
		return CM_SQLCODE;
	}

	return 0;
}

int Pact_gaga_rel_Fet_Sel ( struct pact_gaga_rel_c *pact_gaga_rel_c , char * reply )
{

	int   ret;

	EXEC SQL FETCH sel_pact_gaga_rel INTO :pact_gaga_rel_c;
	if (sqlca.sqlcode&&sqlca.sqlcode!=1403){
		sprintf(acErrMsg,"Fetch pact_gaga_rel error!!! %d",sqlca.sqlcode);
		WRITEMSG
		strcpy (reply,"D103");
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == 1403 ){
		sprintf(acErrMsg,"Fetch pact_gaga_rel finished!!! %d",sqlca.sqlcode);
		WRITEMSG
		strcpy (reply,"D104");
		return CM_SQLCODE;
	}
	zip_struct(pact_gaga_rel_c);

	return 0;
}

int Pact_gaga_rel_Clo_Sel (){
	EXEC SQL CLOSE sel_pact_gaga_rel;
	return 0;
}

/*****************************************************************************/
/****                              修改函数部分                           ****/
/*****************************************************************************/
int Pact_gaga_rel_Dec_Upd( reply , fmtstr , va_alist)
char    *reply;
char    *fmtstr;
va_dcl
{
	EXEC    SQL BEGIN   DECLARE SECTION;
		char    comm[1000];
	EXEC    SQL END     DECLARE SECTION;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	sprintf ( comm , "SELECT rowid,pact_gaga_rel.* FROM pact_gaga_rel WHERE  ");
	key_strcat(comm,wherelist);
	strcat(comm," FOR UPDATE WAIT 5 ");
	vtcp_log("%s,%d,SQLSTR=[%s]\n",__FILE__,__LINE__,comm);
	sqlca.sqlcode=0;
	EXEC SQL PREPARE pact_gaga_rel_upd FROM :comm;

	EXEC SQL DECLARE upd_pact_gaga_rel CURSOR FOR pact_gaga_rel_upd;

	EXEC SQL OPEN upd_pact_gaga_rel;
	if (sqlca.sqlcode){
		sprintf(acErrMsg,"open pact_gaga_rel error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D102" );
		return CM_SQLCODE;
	}

	return 0;
}

int Pact_gaga_rel_Fet_Upd( struct pact_gaga_rel_c *pact_gaga_rel_c , char * reply ){
	int   ret;

	EXEC SQL FETCH upd_pact_gaga_rel INTO :pact_gaga_rel_c;
	if ( sqlca.sqlcode && sqlca.sqlcode!=1403 ){
		sprintf(acErrMsg,"FETCH upd pact_gaga_rel error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D103" );
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == 1403 ){
		sprintf(acErrMsg,"FETCH pact_gaga_rel finished %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D104" );
		return CM_SQLCODE;
	}
	zip_struct(pact_gaga_rel_c);

	return 0;
}

int Pact_gaga_rel_Upd_Upd( struct pact_gaga_rel_c pact_gaga_rel_c , char * reply){
	int ret;

	EXEC SQL UPDATE pact_gaga_rel SET pact_no=:pact_gaga_rel_c.pact_no,
			gaga_id=:pact_gaga_rel_c.gaga_id,
			name=:pact_gaga_rel_c.name,
			gaga_bal=:pact_gaga_rel_c.gaga_bal,
			gaga_val=:pact_gaga_rel_c.gaga_val,
			stsvar=:pact_gaga_rel_c.stsvar,
			pact_type=:pact_gaga_rel_c.pact_type,
			io_ind=:pact_gaga_rel_c.io_ind,
			bill_no=:pact_gaga_rel_c.bill_no,
			filler=:pact_gaga_rel_c.filler
	WHERE rowid=:pact_gaga_rel_c.rowid;
	if ( sqlca.sqlcode && sqlca.sqlcode != 1403 ){
		sprintf(acErrMsg,"UPDATE pact_gaga_rel error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D105" );
		return CM_SQLCODE;
	}

	return 0;
}


int Pact_gaga_rel_Del_Upd(struct pact_gaga_rel_c pact_gaga_rel_c , char * reply  ){

	EXEC SQL DELETE FROM pact_gaga_rel WHERE rowid=:pact_gaga_rel_c.rowid;
	if ( sqlca.sqlcode ){
		sprintf(acErrMsg,"DELETE pact_gaga_rel error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D105" );
		return CM_SQLCODE;
	}

	return 0;
}

int Pact_gaga_rel_Clo_Upd( ){
	EXEC SQL CLOSE upd_pact_gaga_rel;
	return 0;
}

/*****************************************************************************/
/****                              增加函数部分                           ****/
/*****************************************************************************/
int Pact_gaga_rel_Ins( struct pact_gaga_rel_c pact_gaga_rel_c , char * reply ){
	int ret;

	EXEC SQL INSERT INTO pact_gaga_rel VALUES (:pact_gaga_rel_c.pact_no,
			:pact_gaga_rel_c.gaga_id,
			:pact_gaga_rel_c.name,
			:pact_gaga_rel_c.gaga_bal,
			:pact_gaga_rel_c.gaga_val,
			:pact_gaga_rel_c.stsvar,
			:pact_gaga_rel_c.pact_type,
			:pact_gaga_rel_c.io_ind,
			:pact_gaga_rel_c.bill_no,
			:pact_gaga_rel_c.filler);
	if ( sqlca.sqlcode && sqlca.sqlcode != -1 )
	{
		sprintf(acErrMsg,"INSERT pact_gaga_rel error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D107" );
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == -1 )
	{
		sprintf(acErrMsg,"INSERT pact_gaga_rel error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D108" );
		return CM_SQLCODE;
	}

	return 0;
}
