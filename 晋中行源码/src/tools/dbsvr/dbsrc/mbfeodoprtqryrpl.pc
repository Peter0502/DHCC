#include<stdio.h>
#include<varargs.h>

#define EXTERN
#include"global.h"


EXEC SQL INCLUDE SQLCA;
#include"mbfeodoprtqryrpl_c.h"
#define CM_SQLCODE sqlca.sqlcode==1403?100:(sqlca.sqlcode==-1?-239:sqlca.sqlcode)

int mbfeodoprtqryrpl_con ( struct mbfeodoprtqryrpl_c , char *);
int put_mystery( char *, char * );
char *zip_tail(char *s);
static void zip_struct(struct mbfeodoprtqryrpl_c* ps){
	zip_tail(ps->rowid);
	zip_tail(ps->querybkcode);
	zip_tail(ps->origodficode);
	zip_tail(ps->origtxtype);
	zip_tail(ps->origtxssno);
	zip_tail(ps->sndcmtcentrecvtime);
	zip_tail(ps->sndcmtcentmvtime);
	zip_tail(ps->sndcmtcenttranstat);
	zip_tail(ps->npcrecvtime);
	zip_tail(ps->statetime);
	zip_tail(ps->npcmvtime);
	zip_tail(ps->npctranstat);
	zip_tail(ps->recvcmtcentrecvtime);
	zip_tail(ps->recvcmtcentmvtime);
	zip_tail(ps->recvcmtcenttranstat);
	zip_tail(ps->errcode);
	zip_tail(ps->errdesc);
}
int Mbfeodoprtqryrpl_Debug(struct mbfeodoprtqryrpl_c *ps){
	vtcp_log("mbfeodoprtqryrpl_c.rowid=[%s]\n",ps->rowid);
	vtcp_log("mbfeodoprtqryrpl_c.consigndate=[%ld]\n",ps->consigndate);
	vtcp_log("mbfeodoprtqryrpl_c.querybkcode=[%s]\n",ps->querybkcode);
	vtcp_log("mbfeodoprtqryrpl_c.origconsigndate=[%ld]\n",ps->origconsigndate);
	vtcp_log("mbfeodoprtqryrpl_c.origodficode=[%s]\n",ps->origodficode);
	vtcp_log("mbfeodoprtqryrpl_c.origtxtype=[%s]\n",ps->origtxtype);
	vtcp_log("mbfeodoprtqryrpl_c.origtxssno=[%s]\n",ps->origtxssno);
	vtcp_log("mbfeodoprtqryrpl_c.sndcmtcentrecvtime=[%s]\n",ps->sndcmtcentrecvtime);
	vtcp_log("mbfeodoprtqryrpl_c.sndcmtcentmvtime=[%s]\n",ps->sndcmtcentmvtime);
	vtcp_log("mbfeodoprtqryrpl_c.sndcmtcenttranstat=[%s]\n",ps->sndcmtcenttranstat);
	vtcp_log("mbfeodoprtqryrpl_c.npcrecvtime=[%s]\n",ps->npcrecvtime);
	vtcp_log("mbfeodoprtqryrpl_c.statetime=[%s]\n",ps->statetime);
	vtcp_log("mbfeodoprtqryrpl_c.npcmvtime=[%s]\n",ps->npcmvtime);
	vtcp_log("mbfeodoprtqryrpl_c.npctranstat=[%s]\n",ps->npctranstat);
	vtcp_log("mbfeodoprtqryrpl_c.recvcmtcentrecvtime=[%s]\n",ps->recvcmtcentrecvtime);
	vtcp_log("mbfeodoprtqryrpl_c.recvcmtcentmvtime=[%s]\n",ps->recvcmtcentmvtime);
	vtcp_log("mbfeodoprtqryrpl_c.recvcmtcenttranstat=[%s]\n",ps->recvcmtcenttranstat);
	vtcp_log("mbfeodoprtqryrpl_c.errcode=[%s]\n",ps->errcode);
	vtcp_log("mbfeodoprtqryrpl_c.errdesc=[%s]\n",ps->errdesc);
	return(0);
}
/*****************************************************************************/
/****                              查询函数部分[]                       ****/
/*****************************************************************************/
int Mbfeodoprtqryrpl_Sel(reply,mbfeodoprtqryrpl_c,fmtstr,va_alist)
char    *reply;
struct  mbfeodoprtqryrpl_c *mbfeodoprtqryrpl_c;
char    *fmtstr;
va_dcl
{
	int   ret;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	ret = Mbfeodoprtqryrpl_Dec_Sel( reply , "%s" , wherelist );
	if (ret){
		WRITEMSG
		return ret;
	}
	ret = Mbfeodoprtqryrpl_Fet_Sel( mbfeodoprtqryrpl_c , reply );
	if (ret){
		WRITEMSG
		return ret;
	}

	Mbfeodoprtqryrpl_Clo_Sel();

	return 0;
}



char *key_strcat(char *,char *);
int Mbfeodoprtqryrpl_Dec_Sel ( reply , fmtstr , va_alist )
char    *reply;
char    *fmtstr;
va_dcl
{
	EXEC    SQL BEGIN   DECLARE SECTION;
		char    comm[1000];
	EXEC    SQL END     DECLARE SECTION;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	sprintf ( comm ," SELECT rowid,mbfeodoprtqryrpl.* FROM mbfeodoprtqryrpl WHERE  ");
	key_strcat(comm,wherelist);

	vtcp_log("%s,%d,SQLSTR=[%s]\n",__FILE__,__LINE__,comm);
	sqlca.sqlcode=0;
	EXEC SQL PREPARE mbfeodoprtqryrpl_sel FROM :comm;
	EXEC SQL DECLARE sel_mbfeodoprtqryrpl CURSOR FOR mbfeodoprtqryrpl_sel;

	EXEC SQL OPEN sel_mbfeodoprtqryrpl;
	if (sqlca.sqlcode){
		sprintf(acErrMsg,"OPEN mbfeodoprtqryrpl error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D102" );
		return CM_SQLCODE;
	}

	return 0;
}

int Mbfeodoprtqryrpl_Fet_Sel ( struct mbfeodoprtqryrpl_c *mbfeodoprtqryrpl_c , char * reply )
{

	int   ret;

	EXEC SQL FETCH sel_mbfeodoprtqryrpl INTO :mbfeodoprtqryrpl_c;
	if (sqlca.sqlcode&&sqlca.sqlcode!=1403){
		sprintf(acErrMsg,"Fetch mbfeodoprtqryrpl error!!! %d",sqlca.sqlcode);
		WRITEMSG
		strcpy (reply,"D103");
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == 1403 ){
		sprintf(acErrMsg,"Fetch mbfeodoprtqryrpl finished!!! %d",sqlca.sqlcode);
		WRITEMSG
		strcpy (reply,"D104");
		return CM_SQLCODE;
	}
	zip_struct(mbfeodoprtqryrpl_c);

	return 0;
}

int Mbfeodoprtqryrpl_Clo_Sel (){
	EXEC SQL CLOSE sel_mbfeodoprtqryrpl;
	return 0;
}

/*****************************************************************************/
/****                              修改函数部分                           ****/
/*****************************************************************************/
int Mbfeodoprtqryrpl_Dec_Upd( reply , fmtstr , va_alist)
char    *reply;
char    *fmtstr;
va_dcl
{
	EXEC    SQL BEGIN   DECLARE SECTION;
		char    comm[1000];
	EXEC    SQL END     DECLARE SECTION;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	sprintf ( comm , "SELECT rowid,mbfeodoprtqryrpl.* FROM mbfeodoprtqryrpl WHERE  ");
	key_strcat(comm,wherelist);
	strcat(comm," FOR UPDATE WAIT 5 ");
	vtcp_log("%s,%d,SQLSTR=[%s]\n",__FILE__,__LINE__,comm);
	sqlca.sqlcode=0;
	EXEC SQL PREPARE mbfeodoprtqryrpl_upd FROM :comm;

	EXEC SQL DECLARE upd_mbfeodoprtqryrpl CURSOR FOR mbfeodoprtqryrpl_upd;

	EXEC SQL OPEN upd_mbfeodoprtqryrpl;
	if (sqlca.sqlcode){
		sprintf(acErrMsg,"open mbfeodoprtqryrpl error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D102" );
		return CM_SQLCODE;
	}

	return 0;
}

int Mbfeodoprtqryrpl_Fet_Upd( struct mbfeodoprtqryrpl_c *mbfeodoprtqryrpl_c , char * reply ){
	int   ret;

	EXEC SQL FETCH upd_mbfeodoprtqryrpl INTO :mbfeodoprtqryrpl_c;
	if ( sqlca.sqlcode && sqlca.sqlcode!=1403 ){
		sprintf(acErrMsg,"FETCH upd mbfeodoprtqryrpl error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D103" );
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == 1403 ){
		sprintf(acErrMsg,"FETCH mbfeodoprtqryrpl finished %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D104" );
		return CM_SQLCODE;
	}
	zip_struct(mbfeodoprtqryrpl_c);

	return 0;
}

int Mbfeodoprtqryrpl_Upd_Upd( struct mbfeodoprtqryrpl_c mbfeodoprtqryrpl_c , char * reply){
	int ret;

	EXEC SQL UPDATE mbfeodoprtqryrpl SET consigndate=:mbfeodoprtqryrpl_c.consigndate,
			querybkcode=:mbfeodoprtqryrpl_c.querybkcode,
			origconsigndate=:mbfeodoprtqryrpl_c.origconsigndate,
			origodficode=:mbfeodoprtqryrpl_c.origodficode,
			origtxtype=:mbfeodoprtqryrpl_c.origtxtype,
			origtxssno=:mbfeodoprtqryrpl_c.origtxssno,
			sndcmtcentrecvtime=:mbfeodoprtqryrpl_c.sndcmtcentrecvtime,
			sndcmtcentmvtime=:mbfeodoprtqryrpl_c.sndcmtcentmvtime,
			sndcmtcenttranstat=:mbfeodoprtqryrpl_c.sndcmtcenttranstat,
			npcrecvtime=:mbfeodoprtqryrpl_c.npcrecvtime,
			statetime=:mbfeodoprtqryrpl_c.statetime,
			npcmvtime=:mbfeodoprtqryrpl_c.npcmvtime,
			npctranstat=:mbfeodoprtqryrpl_c.npctranstat,
			recvcmtcentrecvtime=:mbfeodoprtqryrpl_c.recvcmtcentrecvtime,
			recvcmtcentmvtime=:mbfeodoprtqryrpl_c.recvcmtcentmvtime,
			recvcmtcenttranstat=:mbfeodoprtqryrpl_c.recvcmtcenttranstat,
			errcode=:mbfeodoprtqryrpl_c.errcode,
			errdesc=:mbfeodoprtqryrpl_c.errdesc
	WHERE rowid=:mbfeodoprtqryrpl_c.rowid;
	if ( sqlca.sqlcode && sqlca.sqlcode != 1403 ){
		sprintf(acErrMsg,"UPDATE mbfeodoprtqryrpl error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D105" );
		return CM_SQLCODE;
	}

	return 0;
}


int Mbfeodoprtqryrpl_Del_Upd(struct mbfeodoprtqryrpl_c mbfeodoprtqryrpl_c , char * reply  ){

	EXEC SQL DELETE FROM mbfeodoprtqryrpl WHERE rowid=:mbfeodoprtqryrpl_c.rowid;
	if ( sqlca.sqlcode ){
		sprintf(acErrMsg,"DELETE mbfeodoprtqryrpl error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D105" );
		return CM_SQLCODE;
	}

	return 0;
}

int Mbfeodoprtqryrpl_Clo_Upd( ){
	EXEC SQL CLOSE upd_mbfeodoprtqryrpl;
	return 0;
}

/*****************************************************************************/
/****                              增加函数部分                           ****/
/*****************************************************************************/
int Mbfeodoprtqryrpl_Ins( struct mbfeodoprtqryrpl_c mbfeodoprtqryrpl_c , char * reply ){
	int ret;

	EXEC SQL INSERT INTO mbfeodoprtqryrpl VALUES (:mbfeodoprtqryrpl_c.consigndate,
			:mbfeodoprtqryrpl_c.querybkcode,
			:mbfeodoprtqryrpl_c.origconsigndate,
			:mbfeodoprtqryrpl_c.origodficode,
			:mbfeodoprtqryrpl_c.origtxtype,
			:mbfeodoprtqryrpl_c.origtxssno,
			:mbfeodoprtqryrpl_c.sndcmtcentrecvtime,
			:mbfeodoprtqryrpl_c.sndcmtcentmvtime,
			:mbfeodoprtqryrpl_c.sndcmtcenttranstat,
			:mbfeodoprtqryrpl_c.npcrecvtime,
			:mbfeodoprtqryrpl_c.statetime,
			:mbfeodoprtqryrpl_c.npcmvtime,
			:mbfeodoprtqryrpl_c.npctranstat,
			:mbfeodoprtqryrpl_c.recvcmtcentrecvtime,
			:mbfeodoprtqryrpl_c.recvcmtcentmvtime,
			:mbfeodoprtqryrpl_c.recvcmtcenttranstat,
			:mbfeodoprtqryrpl_c.errcode,
			:mbfeodoprtqryrpl_c.errdesc);
	if ( sqlca.sqlcode && sqlca.sqlcode != -1 )
	{
		sprintf(acErrMsg,"INSERT mbfeodoprtqryrpl error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D107" );
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == -1 )
	{
		sprintf(acErrMsg,"INSERT mbfeodoprtqryrpl error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D108" );
		return CM_SQLCODE;
	}

	return 0;
}
