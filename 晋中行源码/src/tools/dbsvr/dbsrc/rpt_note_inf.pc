#include<stdio.h>
#include<varargs.h>

#define EXTERN
#include"global.h"


EXEC SQL INCLUDE SQLCA;
#include"rpt_note_inf_c.h"
#define CM_SQLCODE sqlca.sqlcode==1403?100:(sqlca.sqlcode==-1?-239:sqlca.sqlcode)

int rpt_note_inf_con ( struct rpt_note_inf_c , char *);
int put_mystery( char *, char * );
char *zip_tail(char *s);
static void zip_struct(struct rpt_note_inf_c* ps){
	zip_tail(ps->rowid);
	zip_tail(ps->opn_br_no);
	zip_tail(ps->tx_br_no);
	zip_tail(ps->tx_opn_br_no);
	zip_tail(ps->tx_tx_br_no);
	zip_tail(ps->dc_ind);
	zip_tail(ps->acc_hrt);
	zip_tail(ps->tw_acchrt);
	zip_tail(ps->ac_no);
	zip_tail(ps->name);
	zip_tail(ps->cur_no);
	zip_tail(ps->txcode);
	zip_tail(ps->summary);
}
int Rpt_note_inf_Debug(struct rpt_note_inf_c *ps){
	vtcp_log("rpt_note_inf_c.rowid=[%s]\n",ps->rowid);
	vtcp_log("rpt_note_inf_c.tx_date=[%ld]\n",ps->tx_date);
	vtcp_log("rpt_note_inf_c.trace_no=[%ld]\n",ps->trace_no);
	vtcp_log("rpt_note_inf_c.opn_br_no=[%s]\n",ps->opn_br_no);
	vtcp_log("rpt_note_inf_c.tx_br_no=[%s]\n",ps->tx_br_no);
	vtcp_log("rpt_note_inf_c.tx_opn_br_no=[%s]\n",ps->tx_opn_br_no);
	vtcp_log("rpt_note_inf_c.tx_tx_br_no=[%s]\n",ps->tx_tx_br_no);
	vtcp_log("rpt_note_inf_c.dc_ind=[%s]\n",ps->dc_ind);
	vtcp_log("rpt_note_inf_c.acc_hrt=[%s]\n",ps->acc_hrt);
	vtcp_log("rpt_note_inf_c.tw_acchrt=[%s]\n",ps->tw_acchrt);
	vtcp_log("rpt_note_inf_c.ac_no=[%s]\n",ps->ac_no);
	vtcp_log("rpt_note_inf_c.name=[%s]\n",ps->name);
	vtcp_log("rpt_note_inf_c.amt=[%f]\n",ps->amt);
	vtcp_log("rpt_note_inf_c.cur_no=[%s]\n",ps->cur_no);
	vtcp_log("rpt_note_inf_c.txcode=[%s]\n",ps->txcode);
	vtcp_log("rpt_note_inf_c.summary=[%s]\n",ps->summary);
	return(0);
}
/*****************************************************************************/
/****                              查询函数部分[]                       ****/
/*****************************************************************************/
int Rpt_note_inf_Sel(reply,rpt_note_inf_c,fmtstr,va_alist)
char    *reply;
struct  rpt_note_inf_c *rpt_note_inf_c;
char    *fmtstr;
va_dcl
{
	int   ret;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	ret = Rpt_note_inf_Dec_Sel( reply , "%s" , wherelist );
	if (ret){
		WRITEMSG
		return ret;
	}
	ret = Rpt_note_inf_Fet_Sel( rpt_note_inf_c , reply );
	if (ret){
		WRITEMSG
		return ret;
	}

	Rpt_note_inf_Clo_Sel();

	return 0;
}



char *key_strcat(char *,char *);
int Rpt_note_inf_Dec_Sel ( reply , fmtstr , va_alist )
char    *reply;
char    *fmtstr;
va_dcl
{
	EXEC    SQL BEGIN   DECLARE SECTION;
		char    comm[1000];
	EXEC    SQL END     DECLARE SECTION;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	sprintf ( comm ," SELECT rowid,rpt_note_inf.* FROM rpt_note_inf WHERE  ");
	key_strcat(comm,wherelist);

	vtcp_log("%s,%d,SQLSTR=[%s]\n",__FILE__,__LINE__,comm);
	sqlca.sqlcode=0;
	EXEC SQL PREPARE rpt_note_inf_sel FROM :comm;
	EXEC SQL DECLARE sel_rpt_note_inf CURSOR FOR rpt_note_inf_sel;

	EXEC SQL OPEN sel_rpt_note_inf;
	if (sqlca.sqlcode){
		sprintf(acErrMsg,"OPEN rpt_note_inf error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D102" );
		return CM_SQLCODE;
	}

	return 0;
}

int Rpt_note_inf_Fet_Sel ( struct rpt_note_inf_c *rpt_note_inf_c , char * reply )
{

	int   ret;

	EXEC SQL FETCH sel_rpt_note_inf INTO :rpt_note_inf_c;
	if (sqlca.sqlcode&&sqlca.sqlcode!=1403){
		sprintf(acErrMsg,"Fetch rpt_note_inf error!!! %d",sqlca.sqlcode);
		WRITEMSG
		strcpy (reply,"D103");
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == 1403 ){
		sprintf(acErrMsg,"Fetch rpt_note_inf finished!!! %d",sqlca.sqlcode);
		WRITEMSG
		strcpy (reply,"D104");
		return CM_SQLCODE;
	}
	zip_struct(rpt_note_inf_c);

	return 0;
}

int Rpt_note_inf_Clo_Sel (){
	EXEC SQL CLOSE sel_rpt_note_inf;
	return 0;
}

/*****************************************************************************/
/****                              修改函数部分                           ****/
/*****************************************************************************/
int Rpt_note_inf_Dec_Upd( reply , fmtstr , va_alist)
char    *reply;
char    *fmtstr;
va_dcl
{
	EXEC    SQL BEGIN   DECLARE SECTION;
		char    comm[1000];
	EXEC    SQL END     DECLARE SECTION;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	sprintf ( comm , "SELECT rowid,rpt_note_inf.* FROM rpt_note_inf WHERE  ");
	key_strcat(comm,wherelist);
	strcat(comm," FOR UPDATE WAIT 5 ");
	vtcp_log("%s,%d,SQLSTR=[%s]\n",__FILE__,__LINE__,comm);
	sqlca.sqlcode=0;
	EXEC SQL PREPARE rpt_note_inf_upd FROM :comm;

	EXEC SQL DECLARE upd_rpt_note_inf CURSOR FOR rpt_note_inf_upd;

	EXEC SQL OPEN upd_rpt_note_inf;
	if (sqlca.sqlcode){
		sprintf(acErrMsg,"open rpt_note_inf error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D102" );
		return CM_SQLCODE;
	}

	return 0;
}

int Rpt_note_inf_Fet_Upd( struct rpt_note_inf_c *rpt_note_inf_c , char * reply ){
	int   ret;

	EXEC SQL FETCH upd_rpt_note_inf INTO :rpt_note_inf_c;
	if ( sqlca.sqlcode && sqlca.sqlcode!=1403 ){
		sprintf(acErrMsg,"FETCH upd rpt_note_inf error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D103" );
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == 1403 ){
		sprintf(acErrMsg,"FETCH rpt_note_inf finished %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D104" );
		return CM_SQLCODE;
	}
	zip_struct(rpt_note_inf_c);

	return 0;
}

int Rpt_note_inf_Upd_Upd( struct rpt_note_inf_c rpt_note_inf_c , char * reply){
	int ret;

	EXEC SQL UPDATE rpt_note_inf SET tx_date=:rpt_note_inf_c.tx_date,
			trace_no=:rpt_note_inf_c.trace_no,
			opn_br_no=:rpt_note_inf_c.opn_br_no,
			tx_br_no=:rpt_note_inf_c.tx_br_no,
			tx_opn_br_no=:rpt_note_inf_c.tx_opn_br_no,
			tx_tx_br_no=:rpt_note_inf_c.tx_tx_br_no,
			dc_ind=:rpt_note_inf_c.dc_ind,
			acc_hrt=:rpt_note_inf_c.acc_hrt,
			tw_acchrt=:rpt_note_inf_c.tw_acchrt,
			ac_no=:rpt_note_inf_c.ac_no,
			name=:rpt_note_inf_c.name,
			amt=:rpt_note_inf_c.amt,
			cur_no=:rpt_note_inf_c.cur_no,
			txcode=:rpt_note_inf_c.txcode,
			summary=:rpt_note_inf_c.summary
	WHERE rowid=:rpt_note_inf_c.rowid;
	if ( sqlca.sqlcode && sqlca.sqlcode != 1403 ){
		sprintf(acErrMsg,"UPDATE rpt_note_inf error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D105" );
		return CM_SQLCODE;
	}

	return 0;
}


int Rpt_note_inf_Del_Upd(struct rpt_note_inf_c rpt_note_inf_c , char * reply  ){

	EXEC SQL DELETE FROM rpt_note_inf WHERE rowid=:rpt_note_inf_c.rowid;
	if ( sqlca.sqlcode ){
		sprintf(acErrMsg,"DELETE rpt_note_inf error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D105" );
		return CM_SQLCODE;
	}

	return 0;
}

int Rpt_note_inf_Clo_Upd( ){
	EXEC SQL CLOSE upd_rpt_note_inf;
	return 0;
}

/*****************************************************************************/
/****                              增加函数部分                           ****/
/*****************************************************************************/
int Rpt_note_inf_Ins( struct rpt_note_inf_c rpt_note_inf_c , char * reply ){
	int ret;

	EXEC SQL INSERT INTO rpt_note_inf VALUES (:rpt_note_inf_c.tx_date,
			:rpt_note_inf_c.trace_no,
			:rpt_note_inf_c.opn_br_no,
			:rpt_note_inf_c.tx_br_no,
			:rpt_note_inf_c.tx_opn_br_no,
			:rpt_note_inf_c.tx_tx_br_no,
			:rpt_note_inf_c.dc_ind,
			:rpt_note_inf_c.acc_hrt,
			:rpt_note_inf_c.tw_acchrt,
			:rpt_note_inf_c.ac_no,
			:rpt_note_inf_c.name,
			:rpt_note_inf_c.amt,
			:rpt_note_inf_c.cur_no,
			:rpt_note_inf_c.txcode,
			:rpt_note_inf_c.summary);
	if ( sqlca.sqlcode && sqlca.sqlcode != -1 )
	{
		sprintf(acErrMsg,"INSERT rpt_note_inf error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D107" );
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == -1 )
	{
		sprintf(acErrMsg,"INSERT rpt_note_inf error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D108" );
		return CM_SQLCODE;
	}

	return 0;
}
