#include<stdio.h>
#include<varargs.h>

#define EXTERN
#include"global.h"


EXEC SQL INCLUDE SQLCA;
#include"gl_sub_nj_c.h"
#define CM_SQLCODE sqlca.sqlcode==1403?100:(sqlca.sqlcode==-1?-239:sqlca.sqlcode)

int gl_sub_nj_con ( struct gl_sub_nj_c , char *);
int put_mystery( char *, char * );
char *zip_tail(char *s);
static void zip_struct(struct gl_sub_nj_c* ps){
	zip_tail(ps->rowid);
	zip_tail(ps->br_no);
	zip_tail(ps->cur_no);
	zip_tail(ps->acc_hrt);
	zip_tail(ps->dc_ind);
	zip_tail(ps->up_acc_hrt);
}
int Gl_sub_nj_Debug(struct gl_sub_nj_c *ps){
	vtcp_log("gl_sub_nj_c.rowid=[%s]\n",ps->rowid);
	vtcp_log("gl_sub_nj_c.br_no=[%s]\n",ps->br_no);
	vtcp_log("gl_sub_nj_c.cur_no=[%s]\n",ps->cur_no);
	vtcp_log("gl_sub_nj_c.acc_hrt=[%s]\n",ps->acc_hrt);
	vtcp_log("gl_sub_nj_c.date=[%ld]\n",ps->date);
	vtcp_log("gl_sub_nj_c.dc_ind=[%s]\n",ps->dc_ind);
	vtcp_log("gl_sub_nj_c.up_acc_hrt=[%s]\n",ps->up_acc_hrt);
	vtcp_log("gl_sub_nj_c.dr_bal=[%f]\n",ps->dr_bal);
	vtcp_log("gl_sub_nj_c.cr_bal=[%f]\n",ps->cr_bal);
	vtcp_log("gl_sub_nj_c.ldd_bal=[%f]\n",ps->ldd_bal);
	vtcp_log("gl_sub_nj_c.lcd_bal=[%f]\n",ps->lcd_bal);
	vtcp_log("gl_sub_nj_c.rdd_cnt=[%ld]\n",ps->rdd_cnt);
	vtcp_log("gl_sub_nj_c.rcd_cnt=[%ld]\n",ps->rcd_cnt);
	vtcp_log("gl_sub_nj_c.rdd_amt=[%f]\n",ps->rdd_amt);
	vtcp_log("gl_sub_nj_c.rcd_amt=[%f]\n",ps->rcd_amt);
	vtcp_log("gl_sub_nj_c.cdd_cnt=[%ld]\n",ps->cdd_cnt);
	vtcp_log("gl_sub_nj_c.ccd_cnt=[%ld]\n",ps->ccd_cnt);
	vtcp_log("gl_sub_nj_c.cdd_amt=[%f]\n",ps->cdd_amt);
	vtcp_log("gl_sub_nj_c.ccd_amt=[%f]\n",ps->ccd_amt);
	vtcp_log("gl_sub_nj_c.tddr_bal=[%f]\n",ps->tddr_bal);
	vtcp_log("gl_sub_nj_c.tdcr_bal=[%f]\n",ps->tdcr_bal);
	vtcp_log("gl_sub_nj_c.tddr_cnt=[%ld]\n",ps->tddr_cnt);
	vtcp_log("gl_sub_nj_c.tdcr_cnt=[%ld]\n",ps->tdcr_cnt);
	vtcp_log("gl_sub_nj_c.tddr_amt=[%f]\n",ps->tddr_amt);
	vtcp_log("gl_sub_nj_c.tdcr_amt=[%f]\n",ps->tdcr_amt);
	vtcp_log("gl_sub_nj_c.mdr_bal=[%f]\n",ps->mdr_bal);
	vtcp_log("gl_sub_nj_c.mcr_bal=[%f]\n",ps->mcr_bal);
	vtcp_log("gl_sub_nj_c.mdr_cnt=[%ld]\n",ps->mdr_cnt);
	vtcp_log("gl_sub_nj_c.mcr_cnt=[%ld]\n",ps->mcr_cnt);
	vtcp_log("gl_sub_nj_c.mdr_amt=[%f]\n",ps->mdr_amt);
	vtcp_log("gl_sub_nj_c.mcr_amt=[%f]\n",ps->mcr_amt);
	vtcp_log("gl_sub_nj_c.qdr_bal=[%f]\n",ps->qdr_bal);
	vtcp_log("gl_sub_nj_c.qcr_bal=[%f]\n",ps->qcr_bal);
	vtcp_log("gl_sub_nj_c.qdr_cnt=[%ld]\n",ps->qdr_cnt);
	vtcp_log("gl_sub_nj_c.qcr_cnt=[%ld]\n",ps->qcr_cnt);
	vtcp_log("gl_sub_nj_c.qdr_amt=[%f]\n",ps->qdr_amt);
	vtcp_log("gl_sub_nj_c.qcr_amt=[%f]\n",ps->qcr_amt);
	vtcp_log("gl_sub_nj_c.ydr_bal=[%f]\n",ps->ydr_bal);
	vtcp_log("gl_sub_nj_c.ycr_bal=[%f]\n",ps->ycr_bal);
	vtcp_log("gl_sub_nj_c.ydr_cnt=[%ld]\n",ps->ydr_cnt);
	vtcp_log("gl_sub_nj_c.ycr_cnt=[%ld]\n",ps->ycr_cnt);
	vtcp_log("gl_sub_nj_c.ydr_amt=[%f]\n",ps->ydr_amt);
	vtcp_log("gl_sub_nj_c.ycr_amt=[%f]\n",ps->ycr_amt);
	return(0);
}
/*****************************************************************************/
/****                              查询函数部分[]                       ****/
/*****************************************************************************/
int Gl_sub_nj_Sel(reply,gl_sub_nj_c,fmtstr,va_alist)
char    *reply;
struct  gl_sub_nj_c *gl_sub_nj_c;
char    *fmtstr;
va_dcl
{
	int   ret;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	ret = Gl_sub_nj_Dec_Sel( reply , "%s" , wherelist );
	if (ret){
		WRITEMSG
		return ret;
	}
	ret = Gl_sub_nj_Fet_Sel( gl_sub_nj_c , reply );
	if (ret){
		WRITEMSG
		return ret;
	}

	Gl_sub_nj_Clo_Sel();

	return 0;
}



char *key_strcat(char *,char *);
int Gl_sub_nj_Dec_Sel ( reply , fmtstr , va_alist )
char    *reply;
char    *fmtstr;
va_dcl
{
	EXEC    SQL BEGIN   DECLARE SECTION;
		char    comm[1000];
	EXEC    SQL END     DECLARE SECTION;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	sprintf ( comm ," SELECT rowid,gl_sub_nj.* FROM gl_sub_nj WHERE  ");
	key_strcat(comm,wherelist);

	vtcp_log("%s,%d,SQLSTR=[%s]\n",__FILE__,__LINE__,comm);
	sqlca.sqlcode=0;
	EXEC SQL PREPARE gl_sub_nj_sel FROM :comm;
	EXEC SQL DECLARE sel_gl_sub_nj CURSOR FOR gl_sub_nj_sel;

	EXEC SQL OPEN sel_gl_sub_nj;
	if (sqlca.sqlcode){
		sprintf(acErrMsg,"OPEN gl_sub_nj error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D102" );
		return CM_SQLCODE;
	}

	return 0;
}

int Gl_sub_nj_Fet_Sel ( struct gl_sub_nj_c *gl_sub_nj_c , char * reply )
{

	int   ret;

	EXEC SQL FETCH sel_gl_sub_nj INTO :gl_sub_nj_c;
	if (sqlca.sqlcode&&sqlca.sqlcode!=1403){
		sprintf(acErrMsg,"Fetch gl_sub_nj error!!! %d",sqlca.sqlcode);
		WRITEMSG
		strcpy (reply,"D103");
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == 1403 ){
		sprintf(acErrMsg,"Fetch gl_sub_nj finished!!! %d",sqlca.sqlcode);
		WRITEMSG
		strcpy (reply,"D104");
		return CM_SQLCODE;
	}
	zip_struct(gl_sub_nj_c);

	return 0;
}

int Gl_sub_nj_Clo_Sel (){
	EXEC SQL CLOSE sel_gl_sub_nj;
	return 0;
}

/*****************************************************************************/
/****                              修改函数部分                           ****/
/*****************************************************************************/
int Gl_sub_nj_Dec_Upd( reply , fmtstr , va_alist)
char    *reply;
char    *fmtstr;
va_dcl
{
	EXEC    SQL BEGIN   DECLARE SECTION;
		char    comm[1000];
	EXEC    SQL END     DECLARE SECTION;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	sprintf ( comm , "SELECT rowid,gl_sub_nj.* FROM gl_sub_nj WHERE  ");
	key_strcat(comm,wherelist);
	strcat(comm," FOR UPDATE WAIT 5 ");
	vtcp_log("%s,%d,SQLSTR=[%s]\n",__FILE__,__LINE__,comm);
	sqlca.sqlcode=0;
	EXEC SQL PREPARE gl_sub_nj_upd FROM :comm;

	EXEC SQL DECLARE upd_gl_sub_nj CURSOR FOR gl_sub_nj_upd;

	EXEC SQL OPEN upd_gl_sub_nj;
	if (sqlca.sqlcode){
		sprintf(acErrMsg,"open gl_sub_nj error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D102" );
		return CM_SQLCODE;
	}

	return 0;
}

int Gl_sub_nj_Fet_Upd( struct gl_sub_nj_c *gl_sub_nj_c , char * reply ){
	int   ret;

	EXEC SQL FETCH upd_gl_sub_nj INTO :gl_sub_nj_c;
	if ( sqlca.sqlcode && sqlca.sqlcode!=1403 ){
		sprintf(acErrMsg,"FETCH upd gl_sub_nj error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D103" );
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == 1403 ){
		sprintf(acErrMsg,"FETCH gl_sub_nj finished %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D104" );
		return CM_SQLCODE;
	}
	zip_struct(gl_sub_nj_c);

	return 0;
}

int Gl_sub_nj_Upd_Upd( struct gl_sub_nj_c gl_sub_nj_c , char * reply){
	int ret;

	EXEC SQL UPDATE gl_sub_nj SET br_no=:gl_sub_nj_c.br_no,
			cur_no=:gl_sub_nj_c.cur_no,
			acc_hrt=:gl_sub_nj_c.acc_hrt,
			"date"=:gl_sub_nj_c.date,
			dc_ind=:gl_sub_nj_c.dc_ind,
			up_acc_hrt=:gl_sub_nj_c.up_acc_hrt,
			dr_bal=:gl_sub_nj_c.dr_bal,
			cr_bal=:gl_sub_nj_c.cr_bal,
			ldd_bal=:gl_sub_nj_c.ldd_bal,
			lcd_bal=:gl_sub_nj_c.lcd_bal,
			rdd_cnt=:gl_sub_nj_c.rdd_cnt,
			rcd_cnt=:gl_sub_nj_c.rcd_cnt,
			rdd_amt=:gl_sub_nj_c.rdd_amt,
			rcd_amt=:gl_sub_nj_c.rcd_amt,
			cdd_cnt=:gl_sub_nj_c.cdd_cnt,
			ccd_cnt=:gl_sub_nj_c.ccd_cnt,
			cdd_amt=:gl_sub_nj_c.cdd_amt,
			ccd_amt=:gl_sub_nj_c.ccd_amt,
			tddr_bal=:gl_sub_nj_c.tddr_bal,
			tdcr_bal=:gl_sub_nj_c.tdcr_bal,
			tddr_cnt=:gl_sub_nj_c.tddr_cnt,
			tdcr_cnt=:gl_sub_nj_c.tdcr_cnt,
			tddr_amt=:gl_sub_nj_c.tddr_amt,
			tdcr_amt=:gl_sub_nj_c.tdcr_amt,
			mdr_bal=:gl_sub_nj_c.mdr_bal,
			mcr_bal=:gl_sub_nj_c.mcr_bal,
			mdr_cnt=:gl_sub_nj_c.mdr_cnt,
			mcr_cnt=:gl_sub_nj_c.mcr_cnt,
			mdr_amt=:gl_sub_nj_c.mdr_amt,
			mcr_amt=:gl_sub_nj_c.mcr_amt,
			qdr_bal=:gl_sub_nj_c.qdr_bal,
			qcr_bal=:gl_sub_nj_c.qcr_bal,
			qdr_cnt=:gl_sub_nj_c.qdr_cnt,
			qcr_cnt=:gl_sub_nj_c.qcr_cnt,
			qdr_amt=:gl_sub_nj_c.qdr_amt,
			qcr_amt=:gl_sub_nj_c.qcr_amt,
			ydr_bal=:gl_sub_nj_c.ydr_bal,
			ycr_bal=:gl_sub_nj_c.ycr_bal,
			ydr_cnt=:gl_sub_nj_c.ydr_cnt,
			ycr_cnt=:gl_sub_nj_c.ycr_cnt,
			ydr_amt=:gl_sub_nj_c.ydr_amt,
			ycr_amt=:gl_sub_nj_c.ycr_amt
	WHERE rowid=:gl_sub_nj_c.rowid;
	if ( sqlca.sqlcode && sqlca.sqlcode != 1403 ){
		sprintf(acErrMsg,"UPDATE gl_sub_nj error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D105" );
		return CM_SQLCODE;
	}

	return 0;
}


int Gl_sub_nj_Del_Upd(struct gl_sub_nj_c gl_sub_nj_c , char * reply  ){

	EXEC SQL DELETE FROM gl_sub_nj WHERE rowid=:gl_sub_nj_c.rowid;
	if ( sqlca.sqlcode ){
		sprintf(acErrMsg,"DELETE gl_sub_nj error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D105" );
		return CM_SQLCODE;
	}

	return 0;
}

int Gl_sub_nj_Clo_Upd( ){
	EXEC SQL CLOSE upd_gl_sub_nj;
	return 0;
}

/*****************************************************************************/
/****                              增加函数部分                           ****/
/*****************************************************************************/
int Gl_sub_nj_Ins( struct gl_sub_nj_c gl_sub_nj_c , char * reply ){
	int ret;

	EXEC SQL INSERT INTO gl_sub_nj VALUES (:gl_sub_nj_c.br_no,
			:gl_sub_nj_c.cur_no,
			:gl_sub_nj_c.acc_hrt,
			:gl_sub_nj_c.date,
			:gl_sub_nj_c.dc_ind,
			:gl_sub_nj_c.up_acc_hrt,
			:gl_sub_nj_c.dr_bal,
			:gl_sub_nj_c.cr_bal,
			:gl_sub_nj_c.ldd_bal,
			:gl_sub_nj_c.lcd_bal,
			:gl_sub_nj_c.rdd_cnt,
			:gl_sub_nj_c.rcd_cnt,
			:gl_sub_nj_c.rdd_amt,
			:gl_sub_nj_c.rcd_amt,
			:gl_sub_nj_c.cdd_cnt,
			:gl_sub_nj_c.ccd_cnt,
			:gl_sub_nj_c.cdd_amt,
			:gl_sub_nj_c.ccd_amt,
			:gl_sub_nj_c.tddr_bal,
			:gl_sub_nj_c.tdcr_bal,
			:gl_sub_nj_c.tddr_cnt,
			:gl_sub_nj_c.tdcr_cnt,
			:gl_sub_nj_c.tddr_amt,
			:gl_sub_nj_c.tdcr_amt,
			:gl_sub_nj_c.mdr_bal,
			:gl_sub_nj_c.mcr_bal,
			:gl_sub_nj_c.mdr_cnt,
			:gl_sub_nj_c.mcr_cnt,
			:gl_sub_nj_c.mdr_amt,
			:gl_sub_nj_c.mcr_amt,
			:gl_sub_nj_c.qdr_bal,
			:gl_sub_nj_c.qcr_bal,
			:gl_sub_nj_c.qdr_cnt,
			:gl_sub_nj_c.qcr_cnt,
			:gl_sub_nj_c.qdr_amt,
			:gl_sub_nj_c.qcr_amt,
			:gl_sub_nj_c.ydr_bal,
			:gl_sub_nj_c.ycr_bal,
			:gl_sub_nj_c.ydr_cnt,
			:gl_sub_nj_c.ycr_cnt,
			:gl_sub_nj_c.ydr_amt,
			:gl_sub_nj_c.ycr_amt);
	if ( sqlca.sqlcode && sqlca.sqlcode != -1 )
	{
		sprintf(acErrMsg,"INSERT gl_sub_nj error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D107" );
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == -1 )
	{
		sprintf(acErrMsg,"INSERT gl_sub_nj error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D108" );
		return CM_SQLCODE;
	}

	return 0;
}
