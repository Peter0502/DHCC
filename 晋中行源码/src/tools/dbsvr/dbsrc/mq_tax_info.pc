#include<stdio.h>
#include<varargs.h>

#define EXTERN
#include"global.h"


EXEC SQL INCLUDE SQLCA;
#include"mq_tax_info_c.h"
#define CM_SQLCODE sqlca.sqlcode==1403?100:(sqlca.sqlcode==-1?-239:sqlca.sqlcode)

int mq_tax_info_con ( struct mq_tax_info_c , char *);
int put_mystery( char *, char * );
char *zip_tail(char *s);
static void zip_struct(struct mq_tax_info_c* ps){
	zip_tail(ps->protocol_no);
	zip_tail(ps->taxorg_code);
	zip_tail(ps->taxpay_code);
	zip_tail(ps->payopbk_code);
	zip_tail(ps->paybk_code);
	zip_tail(ps->pay_acct);
	zip_tail(ps->handorg_name);
	zip_tail(ps->sts);
}
int Mq_tax_info_Debug(struct mq_tax_info_c *ps){
	printf("mq_tax_info_c.protocol_no=[%s]\n",ps->protocol_no);
	printf("mq_tax_info_c.taxorg_code=[%s]\n",ps->taxorg_code);
	printf("mq_tax_info_c.taxpay_code=[%s]\n",ps->taxpay_code);
	printf("mq_tax_info_c.payopbk_code=[%s]\n",ps->payopbk_code);
	printf("mq_tax_info_c.paybk_code=[%s]\n",ps->paybk_code);
	printf("mq_tax_info_c.pay_acct=[%s]\n",ps->pay_acct);
	printf("mq_tax_info_c.handorg_name=[%s]\n",ps->handorg_name);
	printf("mq_tax_info_c.tx_date=[%ld]\n",ps->tx_date);
	printf("mq_tax_info_c.sts=[%s]\n",ps->sts);
	return(0);
}
/*****************************************************************************/
/****                              查询函数部分                           ****/
/*****************************************************************************/
int Mq_tax_info_Sel(reply,mq_tax_info_c,fmtstr,va_alist)
char    *reply;
struct  mq_tax_info_c *mq_tax_info_c;
char    *fmtstr;
va_dcl
{
	int   ret;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	ret = Mq_tax_info_Dec_Sel( reply , "%s" , wherelist );
	if (ret){
		WRITEMSG
		return ret;
	}
	ret = Mq_tax_info_Fet_Sel( mq_tax_info_c , reply );
	if (ret){
		WRITEMSG
		return ret;
	}

	Mq_tax_info_Clo_Sel();

	return 0;
}



char *key_strcat(char *,char *);
int Mq_tax_info_Dec_Sel ( reply , fmtstr , va_alist )
char    *reply;
char    *fmtstr;
va_dcl
{
	EXEC    SQL BEGIN   DECLARE SECTION;
		char    comm[1000];
	EXEC    SQL END     DECLARE SECTION;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	sprintf ( comm ," SELECT mq_tax_info.* FROM mq_tax_info WHERE  ");
	key_strcat(comm,wherelist);

	vtcp_log("%s,%d,SQLSTR=[%s]\n",__FILE__,__LINE__,comm);
	sqlca.sqlcode=0;
	EXEC SQL PREPARE mq_tax_info_sel FROM :comm;
	EXEC SQL DECLARE sel_mq_tax_info CURSOR FOR mq_tax_info_sel;

	EXEC SQL OPEN sel_mq_tax_info;
	if (sqlca.sqlcode){
		sprintf(acErrMsg,"OPEN mq_tax_info error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D102" );
		return CM_SQLCODE;
	}

	return 0;
}

int Mq_tax_info_Fet_Sel ( struct mq_tax_info_c *mq_tax_info_c , char * reply )
{

	int   ret;

	EXEC SQL FETCH sel_mq_tax_info INTO :mq_tax_info_c;
	if (sqlca.sqlcode&&sqlca.sqlcode!=1403){
		sprintf(acErrMsg,"Fetch mq_tax_info error!!! %d",sqlca.sqlcode);
		WRITEMSG
		strcpy (reply,"D103");
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == 1403 ){
		sprintf(acErrMsg,"Fetch mq_tax_info finished!!! %d",sqlca.sqlcode);
		WRITEMSG
		strcpy (reply,"D104");
		return CM_SQLCODE;
	}
	zip_struct(mq_tax_info_c);

	return 0;
}

int Mq_tax_info_Clo_Sel (){
	EXEC SQL CLOSE sel_mq_tax_info;
}

/*****************************************************************************/
/****                              修改函数部分                           ****/
/*****************************************************************************/
int Mq_tax_info_Dec_Upd( reply , fmtstr , va_alist)
char    *reply;
char    *fmtstr;
va_dcl
{
	EXEC    SQL BEGIN   DECLARE SECTION;
		char    comm[1000];
	EXEC    SQL END     DECLARE SECTION;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	sprintf ( comm , "SELECT mq_tax_info.* FROM mq_tax_info WHERE  ");
	key_strcat(comm,wherelist);
	strcat(comm," FOR UPDATE WAIT 5 ");
	vtcp_log("%s,%d,SQLSTR=[%s]\n",__FILE__,__LINE__,comm);
	sqlca.sqlcode=0;
	EXEC SQL PREPARE mq_tax_info_upd FROM :comm;

	EXEC SQL DECLARE upd_mq_tax_info CURSOR FOR mq_tax_info_upd;

	EXEC SQL OPEN upd_mq_tax_info;
	if (sqlca.sqlcode){
		sprintf(acErrMsg,"open mq_tax_info error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D102" );
		return CM_SQLCODE;
	}

	return 0;
}

int Mq_tax_info_Fet_Upd( struct mq_tax_info_c *mq_tax_info_c , char * reply ){
	int   ret;

	EXEC SQL FETCH upd_mq_tax_info INTO :mq_tax_info_c;
	if ( sqlca.sqlcode && sqlca.sqlcode!=1403 ){
		sprintf(acErrMsg,"FETCH upd mq_tax_info error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D103" );
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == 1403 ){
		sprintf(acErrMsg,"FETCH mq_tax_info finished %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D104" );
		return CM_SQLCODE;
	}
	zip_struct(mq_tax_info_c);

	return 0;
}

int Mq_tax_info_Upd_Upd( struct mq_tax_info_c mq_tax_info_c , char * reply){
	int ret;

	EXEC SQL UPDATE mq_tax_info SET protocol_no=:mq_tax_info_c.protocol_no,
			taxorg_code=:mq_tax_info_c.taxorg_code,
			taxpay_code=:mq_tax_info_c.taxpay_code,
			payopbk_code=:mq_tax_info_c.payopbk_code,
			paybk_code=:mq_tax_info_c.paybk_code,
			pay_acct=:mq_tax_info_c.pay_acct,
			handorg_name=:mq_tax_info_c.handorg_name,
			tx_date=:mq_tax_info_c.tx_date,
			sts=:mq_tax_info_c.sts
	WHERE 1=0;
	if ( sqlca.sqlcode && sqlca.sqlcode != 1403 ){
		sprintf(acErrMsg,"UPDATE mq_tax_info error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D105" );
		return CM_SQLCODE;
	}
	pub_reg_rec_file(" upd mq_tax_info"); 

	return 0;
}


int Mq_tax_info_Del_Upd(struct mq_tax_info_c mq_tax_info_c , char * reply  ){

	EXEC SQL DELETE FROM mq_tax_info WHERE rowid='0000';
	if ( sqlca.sqlcode ){
		sprintf(acErrMsg,"DELETE mq_tax_info error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D105" );
		return CM_SQLCODE;
	}

	return 0;
}

int Mq_tax_info_Clo_Upd( ){
	EXEC SQL CLOSE upd_mq_tax_info;

	return 0;
}

/*****************************************************************************/
/****                              增加函数部分                           ****/
/*****************************************************************************/
int Mq_tax_info_Ins( struct mq_tax_info_c mq_tax_info_c , char * reply ){
	int ret;

	EXEC SQL INSERT INTO mq_tax_info VALUES (:mq_tax_info_c.protocol_no,
			:mq_tax_info_c.taxorg_code,
			:mq_tax_info_c.taxpay_code,
			:mq_tax_info_c.payopbk_code,
			:mq_tax_info_c.paybk_code,
			:mq_tax_info_c.pay_acct,
			:mq_tax_info_c.handorg_name,
			:mq_tax_info_c.tx_date,
			:mq_tax_info_c.sts);
	if ( sqlca.sqlcode && sqlca.sqlcode != -1 )
	{
		sprintf(acErrMsg,"INSERT mq_tax_info error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D107" );
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == -1 )
	{
		sprintf(acErrMsg,"INSERT mq_tax_info error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D108" );
		return CM_SQLCODE;
	}
	pub_reg_rec_file(" ins mq_tax_info"); 

	return 0;
}
