#include<stdio.h>
#include<varargs.h>

#define EXTERN
#include"global.h"


EXEC SQL INCLUDE SQLCA;
#include"mas_hvpt_c.h"
#define CM_SQLCODE sqlca.sqlcode==1403?100:(sqlca.sqlcode==-1?-239:sqlca.sqlcode)

int mas_hvpt_con ( struct mas_hvpt_c , char *);
int put_mystery( char *, char * );
char *zip_tail(char *s);
static void zip_struct(struct mas_hvpt_c* ps){
	zip_tail(ps->rowid);
	zip_tail(ps->trace_no);
	zip_tail(ps->payficcode);
	zip_tail(ps->payfictype);
	zip_tail(ps->payer_name);
	zip_tail(ps->payer_ac_no);
	zip_tail(ps->payer_br_no);
	zip_tail(ps->origrdficode);
	zip_tail(ps->origrdfictype);
	zip_tail(ps->payee_name);
	zip_tail(ps->payee_ac_no);
	zip_tail(ps->payee_br_no);
	zip_tail(ps->cur_no);
	zip_tail(ps->tx_amt);
	zip_tail(ps->paydate);
	zip_tail(ps->recvdate);
	zip_tail(ps->use);
	zip_tail(ps->sttl_type);
	zip_tail(ps->notecode);
	zip_tail(ps->txcode);
	zip_tail(ps->extend);
}
int Mas_hvpt_Debug(struct mas_hvpt_c *ps){
	vtcp_log("mas_hvpt_c.rowid=[%s]\n",ps->rowid);
	vtcp_log("mas_hvpt_c.trace_no=[%s]\n",ps->trace_no);
	vtcp_log("mas_hvpt_c.payficcode=[%s]\n",ps->payficcode);
	vtcp_log("mas_hvpt_c.payfictype=[%s]\n",ps->payfictype);
	vtcp_log("mas_hvpt_c.payer_name=[%s]\n",ps->payer_name);
	vtcp_log("mas_hvpt_c.payer_ac_no=[%s]\n",ps->payer_ac_no);
	vtcp_log("mas_hvpt_c.payer_br_no=[%s]\n",ps->payer_br_no);
	vtcp_log("mas_hvpt_c.origrdficode=[%s]\n",ps->origrdficode);
	vtcp_log("mas_hvpt_c.origrdfictype=[%s]\n",ps->origrdfictype);
	vtcp_log("mas_hvpt_c.payee_name=[%s]\n",ps->payee_name);
	vtcp_log("mas_hvpt_c.payee_ac_no=[%s]\n",ps->payee_ac_no);
	vtcp_log("mas_hvpt_c.payee_br_no=[%s]\n",ps->payee_br_no);
	vtcp_log("mas_hvpt_c.cur_no=[%s]\n",ps->cur_no);
	vtcp_log("mas_hvpt_c.tx_amt=[%s]\n",ps->tx_amt);
	vtcp_log("mas_hvpt_c.paydate=[%s]\n",ps->paydate);
	vtcp_log("mas_hvpt_c.recvdate=[%s]\n",ps->recvdate);
	vtcp_log("mas_hvpt_c.use=[%s]\n",ps->use);
	vtcp_log("mas_hvpt_c.sttl_type=[%s]\n",ps->sttl_type);
	vtcp_log("mas_hvpt_c.notecode=[%s]\n",ps->notecode);
	vtcp_log("mas_hvpt_c.txcode=[%s]\n",ps->txcode);
	vtcp_log("mas_hvpt_c.extend=[%s]\n",ps->extend);
	return(0);
}
/*****************************************************************************/
/****                              查询函数部分[]                       ****/
/*****************************************************************************/
int Mas_hvpt_Sel(reply,mas_hvpt_c,fmtstr,va_alist)
char    *reply;
struct  mas_hvpt_c *mas_hvpt_c;
char    *fmtstr;
va_dcl
{
	int   ret;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	ret = Mas_hvpt_Dec_Sel( reply , "%s" , wherelist );
	if (ret){
		WRITEMSG
		return ret;
	}
	ret = Mas_hvpt_Fet_Sel( mas_hvpt_c , reply );
	if (ret){
		WRITEMSG
		return ret;
	}

	Mas_hvpt_Clo_Sel();

	return 0;
}



char *key_strcat(char *,char *);
int Mas_hvpt_Dec_Sel ( reply , fmtstr , va_alist )
char    *reply;
char    *fmtstr;
va_dcl
{
	EXEC    SQL BEGIN   DECLARE SECTION;
		char    comm[1000];
	EXEC    SQL END     DECLARE SECTION;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	sprintf ( comm ," SELECT rowid,mas_hvpt.* FROM mas_hvpt WHERE  ");
	key_strcat(comm,wherelist);

	vtcp_log("%s,%d,SQLSTR=[%s]\n",__FILE__,__LINE__,comm);
	sqlca.sqlcode=0;
	EXEC SQL PREPARE mas_hvpt_sel FROM :comm;
	EXEC SQL DECLARE sel_mas_hvpt CURSOR FOR mas_hvpt_sel;

	EXEC SQL OPEN sel_mas_hvpt;
	if (sqlca.sqlcode){
		sprintf(acErrMsg,"OPEN mas_hvpt error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D102" );
		return CM_SQLCODE;
	}

	return 0;
}

int Mas_hvpt_Fet_Sel ( struct mas_hvpt_c *mas_hvpt_c , char * reply )
{

	int   ret;

	EXEC SQL FETCH sel_mas_hvpt INTO :mas_hvpt_c;
	if (sqlca.sqlcode&&sqlca.sqlcode!=1403){
		sprintf(acErrMsg,"Fetch mas_hvpt error!!! %d",sqlca.sqlcode);
		WRITEMSG
		strcpy (reply,"D103");
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == 1403 ){
		sprintf(acErrMsg,"Fetch mas_hvpt finished!!! %d",sqlca.sqlcode);
		WRITEMSG
		strcpy (reply,"D104");
		return CM_SQLCODE;
	}
	zip_struct(mas_hvpt_c);

	return 0;
}

int Mas_hvpt_Clo_Sel (){
	EXEC SQL CLOSE sel_mas_hvpt;
	return 0;
}

/*****************************************************************************/
/****                              修改函数部分                           ****/
/*****************************************************************************/
int Mas_hvpt_Dec_Upd( reply , fmtstr , va_alist)
char    *reply;
char    *fmtstr;
va_dcl
{
	EXEC    SQL BEGIN   DECLARE SECTION;
		char    comm[1000];
	EXEC    SQL END     DECLARE SECTION;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	sprintf ( comm , "SELECT rowid,mas_hvpt.* FROM mas_hvpt WHERE  ");
	key_strcat(comm,wherelist);
	strcat(comm," FOR UPDATE WAIT 5 ");
	vtcp_log("%s,%d,SQLSTR=[%s]\n",__FILE__,__LINE__,comm);
	sqlca.sqlcode=0;
	EXEC SQL PREPARE mas_hvpt_upd FROM :comm;

	EXEC SQL DECLARE upd_mas_hvpt CURSOR FOR mas_hvpt_upd;

	EXEC SQL OPEN upd_mas_hvpt;
	if (sqlca.sqlcode){
		sprintf(acErrMsg,"open mas_hvpt error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D102" );
		return CM_SQLCODE;
	}

	return 0;
}

int Mas_hvpt_Fet_Upd( struct mas_hvpt_c *mas_hvpt_c , char * reply ){
	int   ret;

	EXEC SQL FETCH upd_mas_hvpt INTO :mas_hvpt_c;
	if ( sqlca.sqlcode && sqlca.sqlcode!=1403 ){
		sprintf(acErrMsg,"FETCH upd mas_hvpt error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D103" );
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == 1403 ){
		sprintf(acErrMsg,"FETCH mas_hvpt finished %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D104" );
		return CM_SQLCODE;
	}
	zip_struct(mas_hvpt_c);

	return 0;
}

int Mas_hvpt_Upd_Upd( struct mas_hvpt_c mas_hvpt_c , char * reply){
	int ret;

	EXEC SQL UPDATE mas_hvpt SET trace_no=:mas_hvpt_c.trace_no,
			payficcode=:mas_hvpt_c.payficcode,
			payfictype=:mas_hvpt_c.payfictype,
			payer_name=:mas_hvpt_c.payer_name,
			payer_ac_no=:mas_hvpt_c.payer_ac_no,
			payer_br_no=:mas_hvpt_c.payer_br_no,
			origrdficode=:mas_hvpt_c.origrdficode,
			origrdfictype=:mas_hvpt_c.origrdfictype,
			payee_name=:mas_hvpt_c.payee_name,
			payee_ac_no=:mas_hvpt_c.payee_ac_no,
			payee_br_no=:mas_hvpt_c.payee_br_no,
			cur_no=:mas_hvpt_c.cur_no,
			tx_amt=:mas_hvpt_c.tx_amt,
			paydate=:mas_hvpt_c.paydate,
			recvdate=:mas_hvpt_c.recvdate,
			use=:mas_hvpt_c.use,
			sttl_type=:mas_hvpt_c.sttl_type,
			notecode=:mas_hvpt_c.notecode,
			txcode=:mas_hvpt_c.txcode,
			extend=:mas_hvpt_c.extend
	WHERE rowid=:mas_hvpt_c.rowid;
	if ( sqlca.sqlcode && sqlca.sqlcode != 1403 ){
		sprintf(acErrMsg,"UPDATE mas_hvpt error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D105" );
		return CM_SQLCODE;
	}

	return 0;
}


int Mas_hvpt_Del_Upd(struct mas_hvpt_c mas_hvpt_c , char * reply  ){

	EXEC SQL DELETE FROM mas_hvpt WHERE rowid=:mas_hvpt_c.rowid;
	if ( sqlca.sqlcode ){
		sprintf(acErrMsg,"DELETE mas_hvpt error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D105" );
		return CM_SQLCODE;
	}

	return 0;
}

int Mas_hvpt_Clo_Upd( ){
	EXEC SQL CLOSE upd_mas_hvpt;
	return 0;
}

/*****************************************************************************/
/****                              增加函数部分                           ****/
/*****************************************************************************/
int Mas_hvpt_Ins( struct mas_hvpt_c mas_hvpt_c , char * reply ){
	int ret;

	EXEC SQL INSERT INTO mas_hvpt VALUES (:mas_hvpt_c.trace_no,
			:mas_hvpt_c.payficcode,
			:mas_hvpt_c.payfictype,
			:mas_hvpt_c.payer_name,
			:mas_hvpt_c.payer_ac_no,
			:mas_hvpt_c.payer_br_no,
			:mas_hvpt_c.origrdficode,
			:mas_hvpt_c.origrdfictype,
			:mas_hvpt_c.payee_name,
			:mas_hvpt_c.payee_ac_no,
			:mas_hvpt_c.payee_br_no,
			:mas_hvpt_c.cur_no,
			:mas_hvpt_c.tx_amt,
			:mas_hvpt_c.paydate,
			:mas_hvpt_c.recvdate,
			:mas_hvpt_c.use,
			:mas_hvpt_c.sttl_type,
			:mas_hvpt_c.notecode,
			:mas_hvpt_c.txcode,
			:mas_hvpt_c.extend);
	if ( sqlca.sqlcode && sqlca.sqlcode != -1 )
	{
		sprintf(acErrMsg,"INSERT mas_hvpt error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D107" );
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == -1 )
	{
		sprintf(acErrMsg,"INSERT mas_hvpt error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D108" );
		return CM_SQLCODE;
	}

	return 0;
}
