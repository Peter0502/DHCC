#include<stdio.h>
#include<varargs.h>

#define EXTERN
#include"global.h"


EXEC SQL INCLUDE SQLCA;
#include"mbfeeisbanksnd_c.h"
#define CM_SQLCODE sqlca.sqlcode==1403?100:(sqlca.sqlcode==-1?-239:sqlca.sqlcode)

int mbfeeisbanksnd_con ( struct mbfeeisbanksnd_c , char *);
int put_mystery( char *, char * );
char *zip_tail(char *s);
static void zip_struct(struct mbfeeisbanksnd_c* ps){
	zip_tail(ps->rowid);
	zip_tail(ps->bnkno);
	zip_tail(ps->eissiteno);
	zip_tail(ps->cnapsflg);
	zip_tail(ps->cnapsbnkno);
	zip_tail(ps->bnksstat);
	zip_tail(ps->bnkcity);
	zip_tail(ps->bnklname);
	zip_tail(ps->bnkssname);
	zip_tail(ps->bnkaddr);
	zip_tail(ps->bnkpostcode);
	zip_tail(ps->bnktel);
	zip_tail(ps->bkemail);
	zip_tail(ps->opertype);
	zip_tail(ps->bnkrmrk);
}
int Mbfeeisbanksnd_Debug(struct mbfeeisbanksnd_c *ps){
	vtcp_log("mbfeeisbanksnd_c.rowid=[%s]\n",ps->rowid);
	vtcp_log("mbfeeisbanksnd_c.bnkno=[%s]\n",ps->bnkno);
	vtcp_log("mbfeeisbanksnd_c.eissiteno=[%s]\n",ps->eissiteno);
	vtcp_log("mbfeeisbanksnd_c.cnapsflg=[%s]\n",ps->cnapsflg);
	vtcp_log("mbfeeisbanksnd_c.cnapsbnkno=[%s]\n",ps->cnapsbnkno);
	vtcp_log("mbfeeisbanksnd_c.bnksstat=[%s]\n",ps->bnksstat);
	vtcp_log("mbfeeisbanksnd_c.bnkcity=[%s]\n",ps->bnkcity);
	vtcp_log("mbfeeisbanksnd_c.bnklname=[%s]\n",ps->bnklname);
	vtcp_log("mbfeeisbanksnd_c.bnkssname=[%s]\n",ps->bnkssname);
	vtcp_log("mbfeeisbanksnd_c.bnkaddr=[%s]\n",ps->bnkaddr);
	vtcp_log("mbfeeisbanksnd_c.bnkpostcode=[%s]\n",ps->bnkpostcode);
	vtcp_log("mbfeeisbanksnd_c.bnktel=[%s]\n",ps->bnktel);
	vtcp_log("mbfeeisbanksnd_c.bkemail=[%s]\n",ps->bkemail);
	vtcp_log("mbfeeisbanksnd_c.opertype=[%s]\n",ps->opertype);
	vtcp_log("mbfeeisbanksnd_c.opereffdate=[%ld]\n",ps->opereffdate);
	vtcp_log("mbfeeisbanksnd_c.bnkrmrk=[%s]\n",ps->bnkrmrk);
	return(0);
}
/*****************************************************************************/
/****                              查询函数部分[]                       ****/
/*****************************************************************************/
int Mbfeeisbanksnd_Sel(reply,mbfeeisbanksnd_c,fmtstr,va_alist)
char    *reply;
struct  mbfeeisbanksnd_c *mbfeeisbanksnd_c;
char    *fmtstr;
va_dcl
{
	int   ret;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	ret = Mbfeeisbanksnd_Dec_Sel( reply , "%s" , wherelist );
	if (ret){
		WRITEMSG
		return ret;
	}
	ret = Mbfeeisbanksnd_Fet_Sel( mbfeeisbanksnd_c , reply );
	if (ret){
		WRITEMSG
		return ret;
	}

	Mbfeeisbanksnd_Clo_Sel();

	return 0;
}



char *key_strcat(char *,char *);
int Mbfeeisbanksnd_Dec_Sel ( reply , fmtstr , va_alist )
char    *reply;
char    *fmtstr;
va_dcl
{
	EXEC    SQL BEGIN   DECLARE SECTION;
		char    comm[1000];
	EXEC    SQL END     DECLARE SECTION;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	sprintf ( comm ," SELECT rowid,mbfeeisbanksnd.* FROM mbfeeisbanksnd WHERE  ");
	key_strcat(comm,wherelist);

	vtcp_log("%s,%d,SQLSTR=[%s]\n",__FILE__,__LINE__,comm);
	sqlca.sqlcode=0;
	EXEC SQL PREPARE mbfeeisbanksnd_sel FROM :comm;
	EXEC SQL DECLARE sel_mbfeeisbanksnd CURSOR FOR mbfeeisbanksnd_sel;

	EXEC SQL OPEN sel_mbfeeisbanksnd;
	if (sqlca.sqlcode){
		sprintf(acErrMsg,"OPEN mbfeeisbanksnd error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D102" );
		return CM_SQLCODE;
	}

	return 0;
}

int Mbfeeisbanksnd_Fet_Sel ( struct mbfeeisbanksnd_c *mbfeeisbanksnd_c , char * reply )
{

	int   ret;

	EXEC SQL FETCH sel_mbfeeisbanksnd INTO :mbfeeisbanksnd_c;
	if (sqlca.sqlcode&&sqlca.sqlcode!=1403){
		sprintf(acErrMsg,"Fetch mbfeeisbanksnd error!!! %d",sqlca.sqlcode);
		WRITEMSG
		strcpy (reply,"D103");
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == 1403 ){
		sprintf(acErrMsg,"Fetch mbfeeisbanksnd finished!!! %d",sqlca.sqlcode);
		WRITEMSG
		strcpy (reply,"D104");
		return CM_SQLCODE;
	}
	zip_struct(mbfeeisbanksnd_c);

	return 0;
}

int Mbfeeisbanksnd_Clo_Sel (){
	EXEC SQL CLOSE sel_mbfeeisbanksnd;
	return 0;
}

/*****************************************************************************/
/****                              修改函数部分                           ****/
/*****************************************************************************/
int Mbfeeisbanksnd_Dec_Upd( reply , fmtstr , va_alist)
char    *reply;
char    *fmtstr;
va_dcl
{
	EXEC    SQL BEGIN   DECLARE SECTION;
		char    comm[1000];
	EXEC    SQL END     DECLARE SECTION;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	sprintf ( comm , "SELECT rowid,mbfeeisbanksnd.* FROM mbfeeisbanksnd WHERE  ");
	key_strcat(comm,wherelist);
	strcat(comm," FOR UPDATE WAIT 5 ");
	vtcp_log("%s,%d,SQLSTR=[%s]\n",__FILE__,__LINE__,comm);
	sqlca.sqlcode=0;
	EXEC SQL PREPARE mbfeeisbanksnd_upd FROM :comm;

	EXEC SQL DECLARE upd_mbfeeisbanksnd CURSOR FOR mbfeeisbanksnd_upd;

	EXEC SQL OPEN upd_mbfeeisbanksnd;
	if (sqlca.sqlcode){
		sprintf(acErrMsg,"open mbfeeisbanksnd error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D102" );
		return CM_SQLCODE;
	}

	return 0;
}

int Mbfeeisbanksnd_Fet_Upd( struct mbfeeisbanksnd_c *mbfeeisbanksnd_c , char * reply ){
	int   ret;

	EXEC SQL FETCH upd_mbfeeisbanksnd INTO :mbfeeisbanksnd_c;
	if ( sqlca.sqlcode && sqlca.sqlcode!=1403 ){
		sprintf(acErrMsg,"FETCH upd mbfeeisbanksnd error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D103" );
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == 1403 ){
		sprintf(acErrMsg,"FETCH mbfeeisbanksnd finished %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D104" );
		return CM_SQLCODE;
	}
	zip_struct(mbfeeisbanksnd_c);

	return 0;
}

int Mbfeeisbanksnd_Upd_Upd( struct mbfeeisbanksnd_c mbfeeisbanksnd_c , char * reply){
	int ret;

	EXEC SQL UPDATE mbfeeisbanksnd SET bnkno=:mbfeeisbanksnd_c.bnkno,
			eissiteno=:mbfeeisbanksnd_c.eissiteno,
			cnapsflg=:mbfeeisbanksnd_c.cnapsflg,
			cnapsbnkno=:mbfeeisbanksnd_c.cnapsbnkno,
			bnksstat=:mbfeeisbanksnd_c.bnksstat,
			bnkcity=:mbfeeisbanksnd_c.bnkcity,
			bnklname=:mbfeeisbanksnd_c.bnklname,
			bnkssname=:mbfeeisbanksnd_c.bnkssname,
			bnkaddr=:mbfeeisbanksnd_c.bnkaddr,
			bnkpostcode=:mbfeeisbanksnd_c.bnkpostcode,
			bnktel=:mbfeeisbanksnd_c.bnktel,
			bkemail=:mbfeeisbanksnd_c.bkemail,
			opertype=:mbfeeisbanksnd_c.opertype,
			opereffdate=:mbfeeisbanksnd_c.opereffdate,
			bnkrmrk=:mbfeeisbanksnd_c.bnkrmrk
	WHERE rowid=:mbfeeisbanksnd_c.rowid;
	if ( sqlca.sqlcode && sqlca.sqlcode != 1403 ){
		sprintf(acErrMsg,"UPDATE mbfeeisbanksnd error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D105" );
		return CM_SQLCODE;
	}

	return 0;
}


int Mbfeeisbanksnd_Del_Upd(struct mbfeeisbanksnd_c mbfeeisbanksnd_c , char * reply  ){

	EXEC SQL DELETE FROM mbfeeisbanksnd WHERE rowid=:mbfeeisbanksnd_c.rowid;
	if ( sqlca.sqlcode ){
		sprintf(acErrMsg,"DELETE mbfeeisbanksnd error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D105" );
		return CM_SQLCODE;
	}

	return 0;
}

int Mbfeeisbanksnd_Clo_Upd( ){
	EXEC SQL CLOSE upd_mbfeeisbanksnd;
	return 0;
}

/*****************************************************************************/
/****                              增加函数部分                           ****/
/*****************************************************************************/
int Mbfeeisbanksnd_Ins( struct mbfeeisbanksnd_c mbfeeisbanksnd_c , char * reply ){
	int ret;

	EXEC SQL INSERT INTO mbfeeisbanksnd VALUES (:mbfeeisbanksnd_c.bnkno,
			:mbfeeisbanksnd_c.eissiteno,
			:mbfeeisbanksnd_c.cnapsflg,
			:mbfeeisbanksnd_c.cnapsbnkno,
			:mbfeeisbanksnd_c.bnksstat,
			:mbfeeisbanksnd_c.bnkcity,
			:mbfeeisbanksnd_c.bnklname,
			:mbfeeisbanksnd_c.bnkssname,
			:mbfeeisbanksnd_c.bnkaddr,
			:mbfeeisbanksnd_c.bnkpostcode,
			:mbfeeisbanksnd_c.bnktel,
			:mbfeeisbanksnd_c.bkemail,
			:mbfeeisbanksnd_c.opertype,
			:mbfeeisbanksnd_c.opereffdate,
			:mbfeeisbanksnd_c.bnkrmrk);
	if ( sqlca.sqlcode && sqlca.sqlcode != -1 )
	{
		sprintf(acErrMsg,"INSERT mbfeeisbanksnd error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D107" );
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == -1 )
	{
		sprintf(acErrMsg,"INSERT mbfeeisbanksnd error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D108" );
		return CM_SQLCODE;
	}

	return 0;
}
