#include<stdio.h>
#include<varargs.h>

#define EXTERN
#include"global.h"


EXEC SQL INCLUDE SQLCA;
#include"ag_itemlist_c.h"
#define CM_SQLCODE sqlca.sqlcode==1403?100:(sqlca.sqlcode==-1?-239:sqlca.sqlcode)

int ag_itemlist_con ( struct ag_itemlist_c , char *);
int put_mystery( char *, char * );
char *zip_tail(char *s);
static void zip_struct(struct ag_itemlist_c* ps){
	zip_tail(ps->rowid);
	zip_tail(ps->item_no);
	zip_tail(ps->unit_no);
	zip_tail(ps->bank_tlcs);
	zip_tail(ps->owe_month);
	zip_tail(ps->trn_date);
	zip_tail(ps->sc00);
	zip_tail(ps->sc01);
	zip_tail(ps->sc02);
	zip_tail(ps->sc03);
	zip_tail(ps->sc04);
	zip_tail(ps->sc05);
	zip_tail(ps->sc06);
	zip_tail(ps->stcd);
}
int Ag_itemlist_Debug(struct ag_itemlist_c *ps){
	vtcp_log("ag_itemlist_c.rowid=[%s]\n",ps->rowid);
	vtcp_log("ag_itemlist_c.item_no=[%s]\n",ps->item_no);
	vtcp_log("ag_itemlist_c.unit_no=[%s]\n",ps->unit_no);
	vtcp_log("ag_itemlist_c.bank_tlcs=[%s]\n",ps->bank_tlcs);
	vtcp_log("ag_itemlist_c.owe_month=[%s]\n",ps->owe_month);
	vtcp_log("ag_itemlist_c.trn_date=[%s]\n",ps->trn_date);
	vtcp_log("ag_itemlist_c.am00=[%f]\n",ps->am00);
	vtcp_log("ag_itemlist_c.am01=[%f]\n",ps->am01);
	vtcp_log("ag_itemlist_c.am02=[%f]\n",ps->am02);
	vtcp_log("ag_itemlist_c.am03=[%f]\n",ps->am03);
	vtcp_log("ag_itemlist_c.am04=[%f]\n",ps->am04);
	vtcp_log("ag_itemlist_c.am05=[%f]\n",ps->am05);
	vtcp_log("ag_itemlist_c.am06=[%f]\n",ps->am06);
	vtcp_log("ag_itemlist_c.am07=[%f]\n",ps->am07);
	vtcp_log("ag_itemlist_c.am08=[%f]\n",ps->am08);
	vtcp_log("ag_itemlist_c.am09=[%f]\n",ps->am09);
	vtcp_log("ag_itemlist_c.am10=[%f]\n",ps->am10);
	vtcp_log("ag_itemlist_c.am11=[%f]\n",ps->am11);
	vtcp_log("ag_itemlist_c.am12=[%f]\n",ps->am12);
	vtcp_log("ag_itemlist_c.am13=[%f]\n",ps->am13);
	vtcp_log("ag_itemlist_c.am14=[%f]\n",ps->am14);
	vtcp_log("ag_itemlist_c.am15=[%f]\n",ps->am15);
	vtcp_log("ag_itemlist_c.am16=[%f]\n",ps->am16);
	vtcp_log("ag_itemlist_c.am17=[%f]\n",ps->am17);
	vtcp_log("ag_itemlist_c.am18=[%f]\n",ps->am18);
	vtcp_log("ag_itemlist_c.am19=[%f]\n",ps->am19);
	vtcp_log("ag_itemlist_c.am20=[%f]\n",ps->am20);
	vtcp_log("ag_itemlist_c.am21=[%f]\n",ps->am21);
	vtcp_log("ag_itemlist_c.am22=[%f]\n",ps->am22);
	vtcp_log("ag_itemlist_c.am23=[%f]\n",ps->am23);
	vtcp_log("ag_itemlist_c.am24=[%f]\n",ps->am24);
	vtcp_log("ag_itemlist_c.am25=[%f]\n",ps->am25);
	vtcp_log("ag_itemlist_c.am26=[%f]\n",ps->am26);
	vtcp_log("ag_itemlist_c.am27=[%f]\n",ps->am27);
	vtcp_log("ag_itemlist_c.am28=[%f]\n",ps->am28);
	vtcp_log("ag_itemlist_c.am29=[%f]\n",ps->am29);
	vtcp_log("ag_itemlist_c.am30=[%f]\n",ps->am30);
	vtcp_log("ag_itemlist_c.sc00=[%s]\n",ps->sc00);
	vtcp_log("ag_itemlist_c.sc01=[%s]\n",ps->sc01);
	vtcp_log("ag_itemlist_c.sc02=[%s]\n",ps->sc02);
	vtcp_log("ag_itemlist_c.sc03=[%s]\n",ps->sc03);
	vtcp_log("ag_itemlist_c.sc04=[%s]\n",ps->sc04);
	vtcp_log("ag_itemlist_c.sc05=[%s]\n",ps->sc05);
	vtcp_log("ag_itemlist_c.sc06=[%s]\n",ps->sc06);
	vtcp_log("ag_itemlist_c.stcd=[%s]\n",ps->stcd);
	return(0);
}
/*****************************************************************************/
/****                              查询函数部分[]                       ****/
/*****************************************************************************/
int Ag_itemlist_Sel(reply,ag_itemlist_c,fmtstr,va_alist)
char    *reply;
struct  ag_itemlist_c *ag_itemlist_c;
char    *fmtstr;
va_dcl
{
	int   ret;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	ret = Ag_itemlist_Dec_Sel( reply , "%s" , wherelist );
	if (ret){
		WRITEMSG
		return ret;
	}
	ret = Ag_itemlist_Fet_Sel( ag_itemlist_c , reply );
	if (ret){
		WRITEMSG
		return ret;
	}

	Ag_itemlist_Clo_Sel();

	return 0;
}



char *key_strcat(char *,char *);
int Ag_itemlist_Dec_Sel ( reply , fmtstr , va_alist )
char    *reply;
char    *fmtstr;
va_dcl
{
	EXEC    SQL BEGIN   DECLARE SECTION;
		char    comm[1000];
	EXEC    SQL END     DECLARE SECTION;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	sprintf ( comm ," SELECT rowid,ag_itemlist.* FROM ag_itemlist WHERE  ");
	key_strcat(comm,wherelist);

	vtcp_log("%s,%d,SQLSTR=[%s]\n",__FILE__,__LINE__,comm);
	sqlca.sqlcode=0;
	EXEC SQL PREPARE ag_itemlist_sel FROM :comm;
	EXEC SQL DECLARE sel_ag_itemlist CURSOR FOR ag_itemlist_sel;

	EXEC SQL OPEN sel_ag_itemlist;
	if (sqlca.sqlcode){
		sprintf(acErrMsg,"OPEN ag_itemlist error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D102" );
		return CM_SQLCODE;
	}

	return 0;
}

int Ag_itemlist_Fet_Sel ( struct ag_itemlist_c *ag_itemlist_c , char * reply )
{

	int   ret;

	EXEC SQL FETCH sel_ag_itemlist INTO :ag_itemlist_c;
	if (sqlca.sqlcode&&sqlca.sqlcode!=1403){
		sprintf(acErrMsg,"Fetch ag_itemlist error!!! %d",sqlca.sqlcode);
		WRITEMSG
		strcpy (reply,"D103");
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == 1403 ){
		sprintf(acErrMsg,"Fetch ag_itemlist finished!!! %d",sqlca.sqlcode);
		WRITEMSG
		strcpy (reply,"D104");
		return CM_SQLCODE;
	}
	zip_struct(ag_itemlist_c);

	return 0;
}

int Ag_itemlist_Clo_Sel (){
	EXEC SQL CLOSE sel_ag_itemlist;
	return 0;
}

/*****************************************************************************/
/****                              修改函数部分                           ****/
/*****************************************************************************/
int Ag_itemlist_Dec_Upd( reply , fmtstr , va_alist)
char    *reply;
char    *fmtstr;
va_dcl
{
	EXEC    SQL BEGIN   DECLARE SECTION;
		char    comm[1000];
	EXEC    SQL END     DECLARE SECTION;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	sprintf ( comm , "SELECT rowid,ag_itemlist.* FROM ag_itemlist WHERE  ");
	key_strcat(comm,wherelist);
	strcat(comm," FOR UPDATE WAIT 5 ");
	vtcp_log("%s,%d,SQLSTR=[%s]\n",__FILE__,__LINE__,comm);
	sqlca.sqlcode=0;
	EXEC SQL PREPARE ag_itemlist_upd FROM :comm;

	EXEC SQL DECLARE upd_ag_itemlist CURSOR FOR ag_itemlist_upd;

	EXEC SQL OPEN upd_ag_itemlist;
	if (sqlca.sqlcode){
		sprintf(acErrMsg,"open ag_itemlist error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D102" );
		return CM_SQLCODE;
	}

	return 0;
}

int Ag_itemlist_Fet_Upd( struct ag_itemlist_c *ag_itemlist_c , char * reply ){
	int   ret;

	EXEC SQL FETCH upd_ag_itemlist INTO :ag_itemlist_c;
	if ( sqlca.sqlcode && sqlca.sqlcode!=1403 ){
		sprintf(acErrMsg,"FETCH upd ag_itemlist error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D103" );
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == 1403 ){
		sprintf(acErrMsg,"FETCH ag_itemlist finished %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D104" );
		return CM_SQLCODE;
	}
	zip_struct(ag_itemlist_c);

	return 0;
}

int Ag_itemlist_Upd_Upd( struct ag_itemlist_c ag_itemlist_c , char * reply){
	int ret;

	EXEC SQL UPDATE ag_itemlist SET item_no=:ag_itemlist_c.item_no,
			unit_no=:ag_itemlist_c.unit_no,
			bank_tlcs=:ag_itemlist_c.bank_tlcs,
			owe_month=:ag_itemlist_c.owe_month,
			trn_date=:ag_itemlist_c.trn_date,
			am00=:ag_itemlist_c.am00,
			am01=:ag_itemlist_c.am01,
			am02=:ag_itemlist_c.am02,
			am03=:ag_itemlist_c.am03,
			am04=:ag_itemlist_c.am04,
			am05=:ag_itemlist_c.am05,
			am06=:ag_itemlist_c.am06,
			am07=:ag_itemlist_c.am07,
			am08=:ag_itemlist_c.am08,
			am09=:ag_itemlist_c.am09,
			am10=:ag_itemlist_c.am10,
			am11=:ag_itemlist_c.am11,
			am12=:ag_itemlist_c.am12,
			am13=:ag_itemlist_c.am13,
			am14=:ag_itemlist_c.am14,
			am15=:ag_itemlist_c.am15,
			am16=:ag_itemlist_c.am16,
			am17=:ag_itemlist_c.am17,
			am18=:ag_itemlist_c.am18,
			am19=:ag_itemlist_c.am19,
			am20=:ag_itemlist_c.am20,
			am21=:ag_itemlist_c.am21,
			am22=:ag_itemlist_c.am22,
			am23=:ag_itemlist_c.am23,
			am24=:ag_itemlist_c.am24,
			am25=:ag_itemlist_c.am25,
			am26=:ag_itemlist_c.am26,
			am27=:ag_itemlist_c.am27,
			am28=:ag_itemlist_c.am28,
			am29=:ag_itemlist_c.am29,
			am30=:ag_itemlist_c.am30,
			sc00=:ag_itemlist_c.sc00,
			sc01=:ag_itemlist_c.sc01,
			sc02=:ag_itemlist_c.sc02,
			sc03=:ag_itemlist_c.sc03,
			sc04=:ag_itemlist_c.sc04,
			sc05=:ag_itemlist_c.sc05,
			sc06=:ag_itemlist_c.sc06,
			stcd=:ag_itemlist_c.stcd
	WHERE rowid=:ag_itemlist_c.rowid;
	if ( sqlca.sqlcode && sqlca.sqlcode != 1403 ){
		sprintf(acErrMsg,"UPDATE ag_itemlist error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D105" );
		return CM_SQLCODE;
	}

	return 0;
}


int Ag_itemlist_Del_Upd(struct ag_itemlist_c ag_itemlist_c , char * reply  ){

	EXEC SQL DELETE FROM ag_itemlist WHERE rowid=:ag_itemlist_c.rowid;
	if ( sqlca.sqlcode ){
		sprintf(acErrMsg,"DELETE ag_itemlist error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D105" );
		return CM_SQLCODE;
	}

	return 0;
}

int Ag_itemlist_Clo_Upd( ){
	EXEC SQL CLOSE upd_ag_itemlist;
	return 0;
}

/*****************************************************************************/
/****                              增加函数部分                           ****/
/*****************************************************************************/
int Ag_itemlist_Ins( struct ag_itemlist_c ag_itemlist_c , char * reply ){
	int ret;

	EXEC SQL INSERT INTO ag_itemlist VALUES (:ag_itemlist_c.item_no,
			:ag_itemlist_c.unit_no,
			:ag_itemlist_c.bank_tlcs,
			:ag_itemlist_c.owe_month,
			:ag_itemlist_c.trn_date,
			:ag_itemlist_c.am00,
			:ag_itemlist_c.am01,
			:ag_itemlist_c.am02,
			:ag_itemlist_c.am03,
			:ag_itemlist_c.am04,
			:ag_itemlist_c.am05,
			:ag_itemlist_c.am06,
			:ag_itemlist_c.am07,
			:ag_itemlist_c.am08,
			:ag_itemlist_c.am09,
			:ag_itemlist_c.am10,
			:ag_itemlist_c.am11,
			:ag_itemlist_c.am12,
			:ag_itemlist_c.am13,
			:ag_itemlist_c.am14,
			:ag_itemlist_c.am15,
			:ag_itemlist_c.am16,
			:ag_itemlist_c.am17,
			:ag_itemlist_c.am18,
			:ag_itemlist_c.am19,
			:ag_itemlist_c.am20,
			:ag_itemlist_c.am21,
			:ag_itemlist_c.am22,
			:ag_itemlist_c.am23,
			:ag_itemlist_c.am24,
			:ag_itemlist_c.am25,
			:ag_itemlist_c.am26,
			:ag_itemlist_c.am27,
			:ag_itemlist_c.am28,
			:ag_itemlist_c.am29,
			:ag_itemlist_c.am30,
			:ag_itemlist_c.sc00,
			:ag_itemlist_c.sc01,
			:ag_itemlist_c.sc02,
			:ag_itemlist_c.sc03,
			:ag_itemlist_c.sc04,
			:ag_itemlist_c.sc05,
			:ag_itemlist_c.sc06,
			:ag_itemlist_c.stcd);
	if ( sqlca.sqlcode && sqlca.sqlcode != -1 )
	{
		sprintf(acErrMsg,"INSERT ag_itemlist error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D107" );
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == -1 )
	{
		sprintf(acErrMsg,"INSERT ag_itemlist error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D108" );
		return CM_SQLCODE;
	}

	return 0;
}
