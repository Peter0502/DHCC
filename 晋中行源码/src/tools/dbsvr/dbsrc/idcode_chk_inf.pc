#include<stdio.h>
#include<varargs.h>

#define EXTERN
#include"global.h"


EXEC SQL INCLUDE SQLCA;
#include"idcode_chk_inf_c.h"
#define CM_SQLCODE sqlca.sqlcode==1403?100:(sqlca.sqlcode==-1?-239:sqlca.sqlcode)

int idcode_chk_inf_con ( struct idcode_chk_inf_c , char *);
int put_mystery( char *, char * );
char *zip_tail(char *s);
static void zip_struct(struct idcode_chk_inf_c* ps){
	zip_tail(ps->rowid);
	zip_tail(ps->tx_code);
	zip_tail(ps->tel);
	zip_tail(ps->br_no);
	zip_tail(ps->msgid);
	zip_tail(ps->msgref);
	zip_tail(ps->msgno);
	zip_tail(ps->chkbrno);
	zip_tail(ps->bus_code);
	zip_tail(ps->oper_user);
	zip_tail(ps->idno);
	zip_tail(ps->username);
	zip_tail(ps->success);
	zip_tail(ps->result);
	zip_tail(ps->branch);
	zip_tail(ps->photo);
}
int Idcode_chk_inf_Debug(struct idcode_chk_inf_c *ps){
	vtcp_log("idcode_chk_inf_c.rowid=[%s]\n",ps->rowid);
	vtcp_log("idcode_chk_inf_c.tx_code=[%s]\n",ps->tx_code);
	vtcp_log("idcode_chk_inf_c.tel=[%s]\n",ps->tel);
	vtcp_log("idcode_chk_inf_c.br_no=[%s]\n",ps->br_no);
	vtcp_log("idcode_chk_inf_c.wk_date=[%ld]\n",ps->wk_date);
	vtcp_log("idcode_chk_inf_c.msgid=[%s]\n",ps->msgid);
	vtcp_log("idcode_chk_inf_c.msgref=[%s]\n",ps->msgref);
	vtcp_log("idcode_chk_inf_c.msgno=[%s]\n",ps->msgno);
	vtcp_log("idcode_chk_inf_c.chkbrno=[%s]\n",ps->chkbrno);
	vtcp_log("idcode_chk_inf_c.req_date=[%ld]\n",ps->req_date);
	vtcp_log("idcode_chk_inf_c.bus_code=[%s]\n",ps->bus_code);
	vtcp_log("idcode_chk_inf_c.oper_user=[%s]\n",ps->oper_user);
	vtcp_log("idcode_chk_inf_c.idno=[%s]\n",ps->idno);
	vtcp_log("idcode_chk_inf_c.username=[%s]\n",ps->username);
	vtcp_log("idcode_chk_inf_c.success=[%s]\n",ps->success);
	vtcp_log("idcode_chk_inf_c.end_date=[%ld]\n",ps->end_date);
	vtcp_log("idcode_chk_inf_c.result=[%s]\n",ps->result);
	vtcp_log("idcode_chk_inf_c.branch=[%s]\n",ps->branch);
	vtcp_log("idcode_chk_inf_c.photo=[%s]\n",ps->photo);
	return(0);
}
/*****************************************************************************/
/****                              查询函数部分[]                       ****/
/*****************************************************************************/
int Idcode_chk_inf_Sel(reply,idcode_chk_inf_c,fmtstr,va_alist)
char    *reply;
struct  idcode_chk_inf_c *idcode_chk_inf_c;
char    *fmtstr;
va_dcl
{
	int   ret;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	ret = Idcode_chk_inf_Dec_Sel( reply , "%s" , wherelist );
	if (ret){
		WRITEMSG
		return ret;
	}
	ret = Idcode_chk_inf_Fet_Sel( idcode_chk_inf_c , reply );
	if (ret){
		WRITEMSG
		return ret;
	}

	Idcode_chk_inf_Clo_Sel();

	return 0;
}



char *key_strcat(char *,char *);
int Idcode_chk_inf_Dec_Sel ( reply , fmtstr , va_alist )
char    *reply;
char    *fmtstr;
va_dcl
{
	EXEC    SQL BEGIN   DECLARE SECTION;
		char    comm[1000];
	EXEC    SQL END     DECLARE SECTION;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	sprintf ( comm ," SELECT rowid,idcode_chk_inf.* FROM idcode_chk_inf WHERE  ");
	key_strcat(comm,wherelist);

	vtcp_log("%s,%d,SQLSTR=[%s]\n",__FILE__,__LINE__,comm);
	sqlca.sqlcode=0;
	EXEC SQL PREPARE idcode_chk_inf_sel FROM :comm;
	EXEC SQL DECLARE sel_idcode_chk_inf CURSOR FOR idcode_chk_inf_sel;

	EXEC SQL OPEN sel_idcode_chk_inf;
	if (sqlca.sqlcode){
		sprintf(acErrMsg,"OPEN idcode_chk_inf error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D102" );
		return CM_SQLCODE;
	}

	return 0;
}

int Idcode_chk_inf_Fet_Sel ( struct idcode_chk_inf_c *idcode_chk_inf_c , char * reply )
{

	int   ret;

	EXEC SQL FETCH sel_idcode_chk_inf INTO :idcode_chk_inf_c;
	if (sqlca.sqlcode&&sqlca.sqlcode!=1403){
		sprintf(acErrMsg,"Fetch idcode_chk_inf error!!! %d",sqlca.sqlcode);
		WRITEMSG
		strcpy (reply,"D103");
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == 1403 ){
		sprintf(acErrMsg,"Fetch idcode_chk_inf finished!!! %d",sqlca.sqlcode);
		WRITEMSG
		strcpy (reply,"D104");
		return CM_SQLCODE;
	}
	zip_struct(idcode_chk_inf_c);

	return 0;
}

int Idcode_chk_inf_Clo_Sel (){
	EXEC SQL CLOSE sel_idcode_chk_inf;
	return 0;
}

/*****************************************************************************/
/****                              修改函数部分                           ****/
/*****************************************************************************/
int Idcode_chk_inf_Dec_Upd( reply , fmtstr , va_alist)
char    *reply;
char    *fmtstr;
va_dcl
{
	EXEC    SQL BEGIN   DECLARE SECTION;
		char    comm[1000];
	EXEC    SQL END     DECLARE SECTION;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	sprintf ( comm , "SELECT rowid,idcode_chk_inf.* FROM idcode_chk_inf WHERE  ");
	key_strcat(comm,wherelist);
	strcat(comm," FOR UPDATE WAIT 5 ");
	vtcp_log("%s,%d,SQLSTR=[%s]\n",__FILE__,__LINE__,comm);
	sqlca.sqlcode=0;
	EXEC SQL PREPARE idcode_chk_inf_upd FROM :comm;

	EXEC SQL DECLARE upd_idcode_chk_inf CURSOR FOR idcode_chk_inf_upd;

	EXEC SQL OPEN upd_idcode_chk_inf;
	if (sqlca.sqlcode){
		sprintf(acErrMsg,"open idcode_chk_inf error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D102" );
		return CM_SQLCODE;
	}

	return 0;
}

int Idcode_chk_inf_Fet_Upd( struct idcode_chk_inf_c *idcode_chk_inf_c , char * reply ){
	int   ret;

	EXEC SQL FETCH upd_idcode_chk_inf INTO :idcode_chk_inf_c;
	if ( sqlca.sqlcode && sqlca.sqlcode!=1403 ){
		sprintf(acErrMsg,"FETCH upd idcode_chk_inf error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D103" );
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == 1403 ){
		sprintf(acErrMsg,"FETCH idcode_chk_inf finished %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D104" );
		return CM_SQLCODE;
	}
	zip_struct(idcode_chk_inf_c);

	return 0;
}

int Idcode_chk_inf_Upd_Upd( struct idcode_chk_inf_c idcode_chk_inf_c , char * reply){
	int ret;

	EXEC SQL UPDATE idcode_chk_inf SET tx_code=:idcode_chk_inf_c.tx_code,
			tel=:idcode_chk_inf_c.tel,
			br_no=:idcode_chk_inf_c.br_no,
			wk_date=:idcode_chk_inf_c.wk_date,
			msgid=:idcode_chk_inf_c.msgid,
			msgref=:idcode_chk_inf_c.msgref,
			msgno=:idcode_chk_inf_c.msgno,
			chkbrno=:idcode_chk_inf_c.chkbrno,
			req_date=:idcode_chk_inf_c.req_date,
			bus_code=:idcode_chk_inf_c.bus_code,
			oper_user=:idcode_chk_inf_c.oper_user,
			idno=:idcode_chk_inf_c.idno,
			username=:idcode_chk_inf_c.username,
			success=:idcode_chk_inf_c.success,
			end_date=:idcode_chk_inf_c.end_date,
			result=:idcode_chk_inf_c.result,
			branch=:idcode_chk_inf_c.branch,
			photo=:idcode_chk_inf_c.photo
	WHERE rowid=:idcode_chk_inf_c.rowid;
	if ( sqlca.sqlcode && sqlca.sqlcode != 1403 ){
		sprintf(acErrMsg,"UPDATE idcode_chk_inf error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D105" );
		return CM_SQLCODE;
	}

	return 0;
}


int Idcode_chk_inf_Del_Upd(struct idcode_chk_inf_c idcode_chk_inf_c , char * reply  ){

	EXEC SQL DELETE FROM idcode_chk_inf WHERE rowid=:idcode_chk_inf_c.rowid;
	if ( sqlca.sqlcode ){
		sprintf(acErrMsg,"DELETE idcode_chk_inf error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D105" );
		return CM_SQLCODE;
	}

	return 0;
}

int Idcode_chk_inf_Clo_Upd( ){
	EXEC SQL CLOSE upd_idcode_chk_inf;
	return 0;
}

/*****************************************************************************/
/****                              增加函数部分                           ****/
/*****************************************************************************/
int Idcode_chk_inf_Ins( struct idcode_chk_inf_c idcode_chk_inf_c , char * reply ){
	int ret;

	EXEC SQL INSERT INTO idcode_chk_inf VALUES (:idcode_chk_inf_c.tx_code,
			:idcode_chk_inf_c.tel,
			:idcode_chk_inf_c.br_no,
			:idcode_chk_inf_c.wk_date,
			:idcode_chk_inf_c.msgid,
			:idcode_chk_inf_c.msgref,
			:idcode_chk_inf_c.msgno,
			:idcode_chk_inf_c.chkbrno,
			:idcode_chk_inf_c.req_date,
			:idcode_chk_inf_c.bus_code,
			:idcode_chk_inf_c.oper_user,
			:idcode_chk_inf_c.idno,
			:idcode_chk_inf_c.username,
			:idcode_chk_inf_c.success,
			:idcode_chk_inf_c.end_date,
			:idcode_chk_inf_c.result,
			:idcode_chk_inf_c.branch,
			:idcode_chk_inf_c.photo);
	if ( sqlca.sqlcode && sqlca.sqlcode != -1 )
	{
		sprintf(acErrMsg,"INSERT idcode_chk_inf error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D107" );
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == -1 )
	{
		sprintf(acErrMsg,"INSERT idcode_chk_inf error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D108" );
		return CM_SQLCODE;
	}

	return 0;
}
