#include<stdio.h>
#include<varargs.h>

#define EXTERN
#include"global.h"


EXEC SQL INCLUDE SQLCA;
#include"tmp_7861080_c.h"
#define CM_SQLCODE sqlca.sqlcode==1403?100:(sqlca.sqlcode==-1?-239:sqlca.sqlcode)

int tmp_7861080_con ( struct tmp_7861080_c , char *);
int put_mystery( char *, char * );
char *zip_tail(char *s);
static void zip_struct(struct tmp_7861080_c* ps){
	zip_tail(ps->rowid);
	zip_tail(ps->item_no);
	zip_tail(ps->name);
	zip_tail(ps->id_no);
	zip_tail(ps->ac_no);
}
int Tmp_7861080_Debug(struct tmp_7861080_c *ps){
	vtcp_log("tmp_7861080_c.rowid=[%s]\n",ps->rowid);
	vtcp_log("tmp_7861080_c.item_no=[%s]\n",ps->item_no);
	vtcp_log("tmp_7861080_c.name=[%s]\n",ps->name);
	vtcp_log("tmp_7861080_c.id_no=[%s]\n",ps->id_no);
	vtcp_log("tmp_7861080_c.ac_no=[%s]\n",ps->ac_no);
	vtcp_log("tmp_7861080_c.ac_id=[%ld]\n",ps->ac_id);
	return(0);
}
/*****************************************************************************/
/****                              查询函数部分[]                       ****/
/*****************************************************************************/
int Tmp_7861080_Sel(reply,tmp_7861080_c,fmtstr,va_alist)
char    *reply;
struct  tmp_7861080_c *tmp_7861080_c;
char    *fmtstr;
va_dcl
{
	int   ret;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	ret = Tmp_7861080_Dec_Sel( reply , "%s" , wherelist );
	if (ret){
		WRITEMSG
		return ret;
	}
	ret = Tmp_7861080_Fet_Sel( tmp_7861080_c , reply );
	if (ret){
		WRITEMSG
		return ret;
	}

	Tmp_7861080_Clo_Sel();

	return 0;
}



char *key_strcat(char *,char *);
int Tmp_7861080_Dec_Sel ( reply , fmtstr , va_alist )
char    *reply;
char    *fmtstr;
va_dcl
{
	EXEC    SQL BEGIN   DECLARE SECTION;
		char    comm[1000];
	EXEC    SQL END     DECLARE SECTION;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	sprintf ( comm ," SELECT rowid,tmp_7861080.* FROM tmp_7861080 WHERE  ");
	key_strcat(comm,wherelist);

	vtcp_log("%s,%d,SQLSTR=[%s]\n",__FILE__,__LINE__,comm);
	sqlca.sqlcode=0;
	EXEC SQL PREPARE tmp_7861080_sel FROM :comm;
	EXEC SQL DECLARE sel_tmp_7861080 CURSOR FOR tmp_7861080_sel;

	EXEC SQL OPEN sel_tmp_7861080;
	if (sqlca.sqlcode){
		sprintf(acErrMsg,"OPEN tmp_7861080 error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D102" );
		return CM_SQLCODE;
	}

	return 0;
}

int Tmp_7861080_Fet_Sel ( struct tmp_7861080_c *tmp_7861080_c , char * reply )
{

	int   ret;

	EXEC SQL FETCH sel_tmp_7861080 INTO :tmp_7861080_c;
	if (sqlca.sqlcode&&sqlca.sqlcode!=1403){
		sprintf(acErrMsg,"Fetch tmp_7861080 error!!! %d",sqlca.sqlcode);
		WRITEMSG
		strcpy (reply,"D103");
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == 1403 ){
		sprintf(acErrMsg,"Fetch tmp_7861080 finished!!! %d",sqlca.sqlcode);
		WRITEMSG
		strcpy (reply,"D104");
		return CM_SQLCODE;
	}
	zip_struct(tmp_7861080_c);

	return 0;
}

int Tmp_7861080_Clo_Sel (){
	EXEC SQL CLOSE sel_tmp_7861080;
	return 0;
}

/*****************************************************************************/
/****                              修改函数部分                           ****/
/*****************************************************************************/
int Tmp_7861080_Dec_Upd( reply , fmtstr , va_alist)
char    *reply;
char    *fmtstr;
va_dcl
{
	EXEC    SQL BEGIN   DECLARE SECTION;
		char    comm[1000];
	EXEC    SQL END     DECLARE SECTION;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	sprintf ( comm , "SELECT rowid,tmp_7861080.* FROM tmp_7861080 WHERE  ");
	key_strcat(comm,wherelist);
	strcat(comm," FOR UPDATE WAIT 5 ");
	vtcp_log("%s,%d,SQLSTR=[%s]\n",__FILE__,__LINE__,comm);
	sqlca.sqlcode=0;
	EXEC SQL PREPARE tmp_7861080_upd FROM :comm;

	EXEC SQL DECLARE upd_tmp_7861080 CURSOR FOR tmp_7861080_upd;

	EXEC SQL OPEN upd_tmp_7861080;
	if (sqlca.sqlcode){
		sprintf(acErrMsg,"open tmp_7861080 error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D102" );
		return CM_SQLCODE;
	}

	return 0;
}

int Tmp_7861080_Fet_Upd( struct tmp_7861080_c *tmp_7861080_c , char * reply ){
	int   ret;

	EXEC SQL FETCH upd_tmp_7861080 INTO :tmp_7861080_c;
	if ( sqlca.sqlcode && sqlca.sqlcode!=1403 ){
		sprintf(acErrMsg,"FETCH upd tmp_7861080 error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D103" );
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == 1403 ){
		sprintf(acErrMsg,"FETCH tmp_7861080 finished %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D104" );
		return CM_SQLCODE;
	}
	zip_struct(tmp_7861080_c);

	return 0;
}

int Tmp_7861080_Upd_Upd( struct tmp_7861080_c tmp_7861080_c , char * reply){
	int ret;

	EXEC SQL UPDATE tmp_7861080 SET item_no=:tmp_7861080_c.item_no,
			name=:tmp_7861080_c.name,
			id_no=:tmp_7861080_c.id_no,
			ac_no=:tmp_7861080_c.ac_no,
			ac_id=:tmp_7861080_c.ac_id
	WHERE rowid=:tmp_7861080_c.rowid;
	if ( sqlca.sqlcode && sqlca.sqlcode != 1403 ){
		sprintf(acErrMsg,"UPDATE tmp_7861080 error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D105" );
		return CM_SQLCODE;
	}

	return 0;
}


int Tmp_7861080_Del_Upd(struct tmp_7861080_c tmp_7861080_c , char * reply  ){

	EXEC SQL DELETE FROM tmp_7861080 WHERE rowid=:tmp_7861080_c.rowid;
	if ( sqlca.sqlcode ){
		sprintf(acErrMsg,"DELETE tmp_7861080 error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D105" );
		return CM_SQLCODE;
	}

	return 0;
}

int Tmp_7861080_Clo_Upd( ){
	EXEC SQL CLOSE upd_tmp_7861080;
	return 0;
}

/*****************************************************************************/
/****                              增加函数部分                           ****/
/*****************************************************************************/
int Tmp_7861080_Ins( struct tmp_7861080_c tmp_7861080_c , char * reply ){
	int ret;

	EXEC SQL INSERT INTO tmp_7861080 VALUES (:tmp_7861080_c.item_no,
			:tmp_7861080_c.name,
			:tmp_7861080_c.id_no,
			:tmp_7861080_c.ac_no,
			:tmp_7861080_c.ac_id);
	if ( sqlca.sqlcode && sqlca.sqlcode != -1 )
	{
		sprintf(acErrMsg,"INSERT tmp_7861080 error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D107" );
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == -1 )
	{
		sprintf(acErrMsg,"INSERT tmp_7861080 error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D108" );
		return CM_SQLCODE;
	}

	return 0;
}
