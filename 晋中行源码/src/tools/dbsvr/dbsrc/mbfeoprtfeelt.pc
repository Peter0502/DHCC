#include<stdio.h>
#include<varargs.h>

#define EXTERN
#include"global.h"


EXEC SQL INCLUDE SQLCA;
#include"mbfeoprtfeelt_c.h"
#define CM_SQLCODE sqlca.sqlcode==1403?100:(sqlca.sqlcode==-1?-239:sqlca.sqlcode)

int mbfeoprtfeelt_con ( struct mbfeoprtfeelt_c , char *);
int put_mystery( char *, char * );
char *zip_tail(char *s);
static void zip_struct(struct mbfeoprtfeelt_c* ps){
	zip_tail(ps->rowid);
	zip_tail(ps->paytools);
	zip_tail(ps->cmtno);
	zip_tail(ps->srflag);
	zip_tail(ps->feeptmlow);
	zip_tail(ps->feeptmupp);
	zip_tail(ps->feecnt);
}
int Mbfeoprtfeelt_Debug(struct mbfeoprtfeelt_c *ps){
	vtcp_log("mbfeoprtfeelt_c.rowid=[%s]\n",ps->rowid);
	vtcp_log("mbfeoprtfeelt_c.row_id=[%ld]\n",ps->row_id);
	vtcp_log("mbfeoprtfeelt_c.consigndate=[%ld]\n",ps->consigndate);
	vtcp_log("mbfeoprtfeelt_c.paytools=[%s]\n",ps->paytools);
	vtcp_log("mbfeoprtfeelt_c.cmtno=[%s]\n",ps->cmtno);
	vtcp_log("mbfeoprtfeelt_c.srflag=[%s]\n",ps->srflag);
	vtcp_log("mbfeoprtfeelt_c.feeptmlow=[%s]\n",ps->feeptmlow);
	vtcp_log("mbfeoprtfeelt_c.feeptmupp=[%s]\n",ps->feeptmupp);
	vtcp_log("mbfeoprtfeelt_c.feecnt=[%s]\n",ps->feecnt);
	vtcp_log("mbfeoprtfeelt_c.feeprice=[%f]\n",ps->feeprice);
	vtcp_log("mbfeoprtfeelt_c.feerate=[%f]\n",ps->feerate);
	vtcp_log("mbfeoprtfeelt_c.timespec=[%f]\n",ps->timespec);
	vtcp_log("mbfeoprtfeelt_c.feeamnt=[%f]\n",ps->feeamnt);
	return(0);
}
/*****************************************************************************/
/****                              查询函数部分[]                       ****/
/*****************************************************************************/
int Mbfeoprtfeelt_Sel(reply,mbfeoprtfeelt_c,fmtstr,va_alist)
char    *reply;
struct  mbfeoprtfeelt_c *mbfeoprtfeelt_c;
char    *fmtstr;
va_dcl
{
	int   ret;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	ret = Mbfeoprtfeelt_Dec_Sel( reply , "%s" , wherelist );
	if (ret){
		WRITEMSG
		return ret;
	}
	ret = Mbfeoprtfeelt_Fet_Sel( mbfeoprtfeelt_c , reply );
	if (ret){
		WRITEMSG
		return ret;
	}

	Mbfeoprtfeelt_Clo_Sel();

	return 0;
}



char *key_strcat(char *,char *);
int Mbfeoprtfeelt_Dec_Sel ( reply , fmtstr , va_alist )
char    *reply;
char    *fmtstr;
va_dcl
{
	EXEC    SQL BEGIN   DECLARE SECTION;
		char    comm[1000];
	EXEC    SQL END     DECLARE SECTION;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	sprintf ( comm ," SELECT rowid,mbfeoprtfeelt.* FROM mbfeoprtfeelt WHERE  ");
	key_strcat(comm,wherelist);

	vtcp_log("%s,%d,SQLSTR=[%s]\n",__FILE__,__LINE__,comm);
	sqlca.sqlcode=0;
	EXEC SQL PREPARE mbfeoprtfeelt_sel FROM :comm;
	EXEC SQL DECLARE sel_mbfeoprtfeelt CURSOR FOR mbfeoprtfeelt_sel;

	EXEC SQL OPEN sel_mbfeoprtfeelt;
	if (sqlca.sqlcode){
		sprintf(acErrMsg,"OPEN mbfeoprtfeelt error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D102" );
		return CM_SQLCODE;
	}

	return 0;
}

int Mbfeoprtfeelt_Fet_Sel ( struct mbfeoprtfeelt_c *mbfeoprtfeelt_c , char * reply )
{

	int   ret;

	EXEC SQL FETCH sel_mbfeoprtfeelt INTO :mbfeoprtfeelt_c;
	if (sqlca.sqlcode&&sqlca.sqlcode!=1403){
		sprintf(acErrMsg,"Fetch mbfeoprtfeelt error!!! %d",sqlca.sqlcode);
		WRITEMSG
		strcpy (reply,"D103");
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == 1403 ){
		sprintf(acErrMsg,"Fetch mbfeoprtfeelt finished!!! %d",sqlca.sqlcode);
		WRITEMSG
		strcpy (reply,"D104");
		return CM_SQLCODE;
	}
	zip_struct(mbfeoprtfeelt_c);

	return 0;
}

int Mbfeoprtfeelt_Clo_Sel (){
	EXEC SQL CLOSE sel_mbfeoprtfeelt;
	return 0;
}

/*****************************************************************************/
/****                              修改函数部分                           ****/
/*****************************************************************************/
int Mbfeoprtfeelt_Dec_Upd( reply , fmtstr , va_alist)
char    *reply;
char    *fmtstr;
va_dcl
{
	EXEC    SQL BEGIN   DECLARE SECTION;
		char    comm[1000];
	EXEC    SQL END     DECLARE SECTION;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	sprintf ( comm , "SELECT rowid,mbfeoprtfeelt.* FROM mbfeoprtfeelt WHERE  ");
	key_strcat(comm,wherelist);
	strcat(comm," FOR UPDATE WAIT 5 ");
	vtcp_log("%s,%d,SQLSTR=[%s]\n",__FILE__,__LINE__,comm);
	sqlca.sqlcode=0;
	EXEC SQL PREPARE mbfeoprtfeelt_upd FROM :comm;

	EXEC SQL DECLARE upd_mbfeoprtfeelt CURSOR FOR mbfeoprtfeelt_upd;

	EXEC SQL OPEN upd_mbfeoprtfeelt;
	if (sqlca.sqlcode){
		sprintf(acErrMsg,"open mbfeoprtfeelt error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D102" );
		return CM_SQLCODE;
	}

	return 0;
}

int Mbfeoprtfeelt_Fet_Upd( struct mbfeoprtfeelt_c *mbfeoprtfeelt_c , char * reply ){
	int   ret;

	EXEC SQL FETCH upd_mbfeoprtfeelt INTO :mbfeoprtfeelt_c;
	if ( sqlca.sqlcode && sqlca.sqlcode!=1403 ){
		sprintf(acErrMsg,"FETCH upd mbfeoprtfeelt error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D103" );
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == 1403 ){
		sprintf(acErrMsg,"FETCH mbfeoprtfeelt finished %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D104" );
		return CM_SQLCODE;
	}
	zip_struct(mbfeoprtfeelt_c);

	return 0;
}

int Mbfeoprtfeelt_Upd_Upd( struct mbfeoprtfeelt_c mbfeoprtfeelt_c , char * reply){
	int ret;

	EXEC SQL UPDATE mbfeoprtfeelt SET row_id=:mbfeoprtfeelt_c.row_id,
			consigndate=:mbfeoprtfeelt_c.consigndate,
			paytools=:mbfeoprtfeelt_c.paytools,
			cmtno=:mbfeoprtfeelt_c.cmtno,
			srflag=:mbfeoprtfeelt_c.srflag,
			feeptmlow=:mbfeoprtfeelt_c.feeptmlow,
			feeptmupp=:mbfeoprtfeelt_c.feeptmupp,
			feecnt=:mbfeoprtfeelt_c.feecnt,
			feeprice=:mbfeoprtfeelt_c.feeprice,
			feerate=:mbfeoprtfeelt_c.feerate,
			timespec=:mbfeoprtfeelt_c.timespec,
			feeamnt=:mbfeoprtfeelt_c.feeamnt
	WHERE rowid=:mbfeoprtfeelt_c.rowid;
	if ( sqlca.sqlcode && sqlca.sqlcode != 1403 ){
		sprintf(acErrMsg,"UPDATE mbfeoprtfeelt error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D105" );
		return CM_SQLCODE;
	}

	return 0;
}


int Mbfeoprtfeelt_Del_Upd(struct mbfeoprtfeelt_c mbfeoprtfeelt_c , char * reply  ){

	EXEC SQL DELETE FROM mbfeoprtfeelt WHERE rowid=:mbfeoprtfeelt_c.rowid;
	if ( sqlca.sqlcode ){
		sprintf(acErrMsg,"DELETE mbfeoprtfeelt error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D105" );
		return CM_SQLCODE;
	}

	return 0;
}

int Mbfeoprtfeelt_Clo_Upd( ){
	EXEC SQL CLOSE upd_mbfeoprtfeelt;
	return 0;
}

/*****************************************************************************/
/****                              增加函数部分                           ****/
/*****************************************************************************/
int Mbfeoprtfeelt_Ins( struct mbfeoprtfeelt_c mbfeoprtfeelt_c , char * reply ){
	int ret;

	EXEC SQL INSERT INTO mbfeoprtfeelt VALUES (:mbfeoprtfeelt_c.row_id,
			:mbfeoprtfeelt_c.consigndate,
			:mbfeoprtfeelt_c.paytools,
			:mbfeoprtfeelt_c.cmtno,
			:mbfeoprtfeelt_c.srflag,
			:mbfeoprtfeelt_c.feeptmlow,
			:mbfeoprtfeelt_c.feeptmupp,
			:mbfeoprtfeelt_c.feecnt,
			:mbfeoprtfeelt_c.feeprice,
			:mbfeoprtfeelt_c.feerate,
			:mbfeoprtfeelt_c.timespec,
			:mbfeoprtfeelt_c.feeamnt);
	if ( sqlca.sqlcode && sqlca.sqlcode != -1 )
	{
		sprintf(acErrMsg,"INSERT mbfeoprtfeelt error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D107" );
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == -1 )
	{
		sprintf(acErrMsg,"INSERT mbfeoprtfeelt error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D108" );
		return CM_SQLCODE;
	}

	return 0;
}
