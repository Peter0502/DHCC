#include<stdio.h>
#include<varargs.h>

#define EXTERN
#include"global.h"


EXEC SQL INCLUDE SQLCA;
#include"hv_zf_erdai_c.h"
#define CM_SQLCODE sqlca.sqlcode==1403?100:(sqlca.sqlcode==-1?-239:sqlca.sqlcode)

int hv_zf_erdai_con ( struct hv_zf_erdai_c , char *);
int put_mystery( char *, char * );
char *zip_tail(char *s);
static void zip_struct(struct hv_zf_erdai_c* ps){
	zip_tail(ps->rowid);
	zip_tail(ps->cmtno);
	zip_tail(ps->commid);
	zip_tail(ps->refcommid);
	zip_tail(ps->msgno);
	zip_tail(ps->snd_br_no);
	zip_tail(ps->rcv_br_no);
	zip_tail(ps->wt_date);
	zip_tail(ps->tx_time);
	zip_tail(ps->yw_kind);
	zip_tail(ps->yw_type);
	zip_tail(ps->cur_no);
	zip_tail(ps->drawtype);
	zip_tail(ps->drawval);
	zip_tail(ps->tx_chrg_ind);
	zip_tail(ps->lw_ind);
	zip_tail(ps->cd_flag);
	zip_tail(ps->pay_qs_no);
	zip_tail(ps->or_br_no);
	zip_tail(ps->or_br_nm);
	zip_tail(ps->accno);
	zip_tail(ps->accnm);
	zip_tail(ps->pay_opn_br_no);
	zip_tail(ps->pay_opn_br_nm);
	zip_tail(ps->pay_ac_no);
	zip_tail(ps->pay_name);
	zip_tail(ps->pay_addr);
	zip_tail(ps->cash_qs_no);
	zip_tail(ps->ac_br_no);
	zip_tail(ps->ac_br_nm);
	zip_tail(ps->cash_opn_br_no);
	zip_tail(ps->cash_opn_br_nm);
	zip_tail(ps->cash_ac_no);
	zip_tail(ps->cash_name);
	zip_tail(ps->cash_addr);
	zip_tail(ps->mediary1);
	zip_tail(ps->mediaryname1);
	zip_tail(ps->mediary2);
	zip_tail(ps->mediaryname2);
	zip_tail(ps->beg_sts);
	zip_tail(ps->operlevel);
	zip_tail(ps->note_type);
	zip_tail(ps->note_preno);
	zip_tail(ps->note_no);
	zip_tail(ps->endtoendid);
	zip_tail(ps->clsdate);
	zip_tail(ps->hv_sts);
	zip_tail(ps->hv_osts);
	zip_tail(ps->procstat);
	zip_tail(ps->respcode);
	zip_tail(ps->rspinfo);
	zip_tail(ps->procarty);
	zip_tail(ps->resend_ind);
	zip_tail(ps->resend_date);
	zip_tail(ps->checkflag);
	zip_tail(ps->hostflag);
	zip_tail(ps->auth_tel);
	zip_tail(ps->chk);
	zip_tail(ps->send_tel);
	zip_tail(ps->host_date_snd);
	zip_tail(ps->channel);
	zip_tail(ps->cnapsflag);
	zip_tail(ps->tx_date);
	zip_tail(ps->host_date);
	zip_tail(ps->tel);
	zip_tail(ps->susflag);
	zip_tail(ps->gz_br_no);
	zip_tail(ps->enteracc);
	zip_tail(ps->enteraccnm);
	zip_tail(ps->enteropenbrn);
	zip_tail(ps->enterdate);
	zip_tail(ps->enterswdate);
	zip_tail(ps->entertel);
	zip_tail(ps->dealerr_date);
	zip_tail(ps->dealerr_tel);
	zip_tail(ps->dealerr_swdate);
	zip_tail(ps->gzdeal_trace_date);
	zip_tail(ps->gzdeal_host_date);
	zip_tail(ps->hv_brf);
	zip_tail(ps->hv_brf2);
	zip_tail(ps->remark);
	zip_tail(ps->remark2);
	zip_tail(ps->chargeoff);
}
int Hv_zf_erdai_Debug(struct hv_zf_erdai_c *ps){
	vtcp_log("hv_zf_erdai_c.rowid=[%s]\n",ps->rowid);
	vtcp_log("hv_zf_erdai_c.cmtno=[%s]\n",ps->cmtno);
	vtcp_log("hv_zf_erdai_c.commid=[%s]\n",ps->commid);
	vtcp_log("hv_zf_erdai_c.refcommid=[%s]\n",ps->refcommid);
	vtcp_log("hv_zf_erdai_c.msgno=[%s]\n",ps->msgno);
	vtcp_log("hv_zf_erdai_c.snd_br_no=[%s]\n",ps->snd_br_no);
	vtcp_log("hv_zf_erdai_c.rcv_br_no=[%s]\n",ps->rcv_br_no);
	vtcp_log("hv_zf_erdai_c.wt_date=[%s]\n",ps->wt_date);
	vtcp_log("hv_zf_erdai_c.orderno=[%f]\n",ps->orderno);
	vtcp_log("hv_zf_erdai_c.tx_time=[%s]\n",ps->tx_time);
	vtcp_log("hv_zf_erdai_c.yw_kind=[%s]\n",ps->yw_kind);
	vtcp_log("hv_zf_erdai_c.yw_type=[%s]\n",ps->yw_type);
	vtcp_log("hv_zf_erdai_c.cur_no=[%s]\n",ps->cur_no);
	vtcp_log("hv_zf_erdai_c.tx_amt=[%f]\n",ps->tx_amt);
	vtcp_log("hv_zf_erdai_c.drawtype=[%s]\n",ps->drawtype);
	vtcp_log("hv_zf_erdai_c.drawval=[%s]\n",ps->drawval);
	vtcp_log("hv_zf_erdai_c.tx_chrg_ind=[%s]\n",ps->tx_chrg_ind);
	vtcp_log("hv_zf_erdai_c.chrg_amt=[%f]\n",ps->chrg_amt);
	vtcp_log("hv_zf_erdai_c.lw_ind=[%s]\n",ps->lw_ind);
	vtcp_log("hv_zf_erdai_c.cd_flag=[%s]\n",ps->cd_flag);
	vtcp_log("hv_zf_erdai_c.pay_qs_no=[%s]\n",ps->pay_qs_no);
	vtcp_log("hv_zf_erdai_c.or_br_no=[%s]\n",ps->or_br_no);
	vtcp_log("hv_zf_erdai_c.or_br_nm=[%s]\n",ps->or_br_nm);
	vtcp_log("hv_zf_erdai_c.accno=[%s]\n",ps->accno);
	vtcp_log("hv_zf_erdai_c.accnm=[%s]\n",ps->accnm);
	vtcp_log("hv_zf_erdai_c.pay_opn_br_no=[%s]\n",ps->pay_opn_br_no);
	vtcp_log("hv_zf_erdai_c.pay_opn_br_nm=[%s]\n",ps->pay_opn_br_nm);
	vtcp_log("hv_zf_erdai_c.pay_ac_no=[%s]\n",ps->pay_ac_no);
	vtcp_log("hv_zf_erdai_c.pay_name=[%s]\n",ps->pay_name);
	vtcp_log("hv_zf_erdai_c.pay_addr=[%s]\n",ps->pay_addr);
	vtcp_log("hv_zf_erdai_c.cash_qs_no=[%s]\n",ps->cash_qs_no);
	vtcp_log("hv_zf_erdai_c.ac_br_no=[%s]\n",ps->ac_br_no);
	vtcp_log("hv_zf_erdai_c.ac_br_nm=[%s]\n",ps->ac_br_nm);
	vtcp_log("hv_zf_erdai_c.cash_opn_br_no=[%s]\n",ps->cash_opn_br_no);
	vtcp_log("hv_zf_erdai_c.cash_opn_br_nm=[%s]\n",ps->cash_opn_br_nm);
	vtcp_log("hv_zf_erdai_c.cash_ac_no=[%s]\n",ps->cash_ac_no);
	vtcp_log("hv_zf_erdai_c.cash_name=[%s]\n",ps->cash_name);
	vtcp_log("hv_zf_erdai_c.cash_addr=[%s]\n",ps->cash_addr);
	vtcp_log("hv_zf_erdai_c.mediary1=[%s]\n",ps->mediary1);
	vtcp_log("hv_zf_erdai_c.mediaryname1=[%s]\n",ps->mediaryname1);
	vtcp_log("hv_zf_erdai_c.mediary2=[%s]\n",ps->mediary2);
	vtcp_log("hv_zf_erdai_c.mediaryname2=[%s]\n",ps->mediaryname2);
	vtcp_log("hv_zf_erdai_c.beg_sts=[%s]\n",ps->beg_sts);
	vtcp_log("hv_zf_erdai_c.operlevel=[%s]\n",ps->operlevel);
	vtcp_log("hv_zf_erdai_c.note_type=[%s]\n",ps->note_type);
	vtcp_log("hv_zf_erdai_c.note_preno=[%s]\n",ps->note_preno);
	vtcp_log("hv_zf_erdai_c.note_no=[%s]\n",ps->note_no);
	vtcp_log("hv_zf_erdai_c.endtoendid=[%s]\n",ps->endtoendid);
	vtcp_log("hv_zf_erdai_c.clsdate=[%s]\n",ps->clsdate);
	vtcp_log("hv_zf_erdai_c.hv_sts=[%s]\n",ps->hv_sts);
	vtcp_log("hv_zf_erdai_c.hv_osts=[%s]\n",ps->hv_osts);
	vtcp_log("hv_zf_erdai_c.procstat=[%s]\n",ps->procstat);
	vtcp_log("hv_zf_erdai_c.respcode=[%s]\n",ps->respcode);
	vtcp_log("hv_zf_erdai_c.rspinfo=[%s]\n",ps->rspinfo);
	vtcp_log("hv_zf_erdai_c.procarty=[%s]\n",ps->procarty);
	vtcp_log("hv_zf_erdai_c.resend_ind=[%s]\n",ps->resend_ind);
	vtcp_log("hv_zf_erdai_c.resend_date=[%s]\n",ps->resend_date);
	vtcp_log("hv_zf_erdai_c.hv_prt_ind=[%f]\n",ps->hv_prt_ind);
	vtcp_log("hv_zf_erdai_c.checkflag=[%s]\n",ps->checkflag);
	vtcp_log("hv_zf_erdai_c.hostflag=[%s]\n",ps->hostflag);
	vtcp_log("hv_zf_erdai_c.auth_tel=[%s]\n",ps->auth_tel);
	vtcp_log("hv_zf_erdai_c.auth_trace_no=[%f]\n",ps->auth_trace_no);
	vtcp_log("hv_zf_erdai_c.chk=[%s]\n",ps->chk);
	vtcp_log("hv_zf_erdai_c.chk_trace_no=[%f]\n",ps->chk_trace_no);
	vtcp_log("hv_zf_erdai_c.send_tel=[%s]\n",ps->send_tel);
	vtcp_log("hv_zf_erdai_c.send_trace_no=[%f]\n",ps->send_trace_no);
	vtcp_log("hv_zf_erdai_c.host_date_snd=[%s]\n",ps->host_date_snd);
	vtcp_log("hv_zf_erdai_c.trace_no_snd=[%f]\n",ps->trace_no_snd);
	vtcp_log("hv_zf_erdai_c.channel=[%s]\n",ps->channel);
	vtcp_log("hv_zf_erdai_c.cnapsflag=[%s]\n",ps->cnapsflag);
	vtcp_log("hv_zf_erdai_c.tx_date=[%s]\n",ps->tx_date);
	vtcp_log("hv_zf_erdai_c.rcv_swno=[%f]\n",ps->rcv_swno);
	vtcp_log("hv_zf_erdai_c.host_date=[%s]\n",ps->host_date);
	vtcp_log("hv_zf_erdai_c.trace_no=[%f]\n",ps->trace_no);
	vtcp_log("hv_zf_erdai_c.tel=[%s]\n",ps->tel);
	vtcp_log("hv_zf_erdai_c.susflag=[%s]\n",ps->susflag);
	vtcp_log("hv_zf_erdai_c.gz_br_no=[%s]\n",ps->gz_br_no);
	vtcp_log("hv_zf_erdai_c.enteracc=[%s]\n",ps->enteracc);
	vtcp_log("hv_zf_erdai_c.enteraccnm=[%s]\n",ps->enteraccnm);
	vtcp_log("hv_zf_erdai_c.enteropenbrn=[%s]\n",ps->enteropenbrn);
	vtcp_log("hv_zf_erdai_c.enterdate=[%s]\n",ps->enterdate);
	vtcp_log("hv_zf_erdai_c.entertrace=[%f]\n",ps->entertrace);
	vtcp_log("hv_zf_erdai_c.enterswno=[%f]\n",ps->enterswno);
	vtcp_log("hv_zf_erdai_c.enterswdate=[%s]\n",ps->enterswdate);
	vtcp_log("hv_zf_erdai_c.entertel=[%s]\n",ps->entertel);
	vtcp_log("hv_zf_erdai_c.entertel_no=[%f]\n",ps->entertel_no);
	vtcp_log("hv_zf_erdai_c.dealerr_date=[%s]\n",ps->dealerr_date);
	vtcp_log("hv_zf_erdai_c.dealerr_tel=[%s]\n",ps->dealerr_tel);
	vtcp_log("hv_zf_erdai_c.dealerr_hostno=[%f]\n",ps->dealerr_hostno);
	vtcp_log("hv_zf_erdai_c.dealerr_swno=[%f]\n",ps->dealerr_swno);
	vtcp_log("hv_zf_erdai_c.dealerr_swdate=[%s]\n",ps->dealerr_swdate);
	vtcp_log("hv_zf_erdai_c.gzdeal_trace_no=[%f]\n",ps->gzdeal_trace_no);
	vtcp_log("hv_zf_erdai_c.gzdeal_trace_date=[%s]\n",ps->gzdeal_trace_date);
	vtcp_log("hv_zf_erdai_c.gzdeal_host_no=[%f]\n",ps->gzdeal_host_no);
	vtcp_log("hv_zf_erdai_c.gzdeal_host_date=[%s]\n",ps->gzdeal_host_date);
	vtcp_log("hv_zf_erdai_c.hv_brf=[%s]\n",ps->hv_brf);
	vtcp_log("hv_zf_erdai_c.hv_brf2=[%s]\n",ps->hv_brf2);
	vtcp_log("hv_zf_erdai_c.remark=[%s]\n",ps->remark);
	vtcp_log("hv_zf_erdai_c.remark2=[%s]\n",ps->remark2);
	vtcp_log("hv_zf_erdai_c.chargeoff=[%s]\n",ps->chargeoff);
	return(0);
}
/*****************************************************************************/
/****                              查询函数部分[]                       ****/
/*****************************************************************************/
int Hv_zf_erdai_Sel(reply,hv_zf_erdai_c,fmtstr,va_alist)
char    *reply;
struct  hv_zf_erdai_c *hv_zf_erdai_c;
char    *fmtstr;
va_dcl
{
	int   ret;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	ret = Hv_zf_erdai_Dec_Sel( reply , "%s" , wherelist );
	if (ret){
		WRITEMSG
		return ret;
	}
	ret = Hv_zf_erdai_Fet_Sel( hv_zf_erdai_c , reply );
	if (ret){
		WRITEMSG
		return ret;
	}

	Hv_zf_erdai_Clo_Sel();

	return 0;
}



char *key_strcat(char *,char *);
int Hv_zf_erdai_Dec_Sel ( reply , fmtstr , va_alist )
char    *reply;
char    *fmtstr;
va_dcl
{
	EXEC    SQL BEGIN   DECLARE SECTION;
		char    comm[1000];
	EXEC    SQL END     DECLARE SECTION;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	sprintf ( comm ," SELECT rowid,hv_zf_erdai.* FROM hv_zf_erdai WHERE  ");
	key_strcat(comm,wherelist);

	vtcp_log("%s,%d,SQLSTR=[%s]\n",__FILE__,__LINE__,comm);
	sqlca.sqlcode=0;
	EXEC SQL PREPARE hv_zf_erdai_sel FROM :comm;
	EXEC SQL DECLARE sel_hv_zf_erdai CURSOR FOR hv_zf_erdai_sel;

	EXEC SQL OPEN sel_hv_zf_erdai;
	if (sqlca.sqlcode){
		sprintf(acErrMsg,"OPEN hv_zf_erdai error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D102" );
		return CM_SQLCODE;
	}

	return 0;
}

int Hv_zf_erdai_Fet_Sel ( struct hv_zf_erdai_c *hv_zf_erdai_c , char * reply )
{

	int   ret;

	EXEC SQL FETCH sel_hv_zf_erdai INTO :hv_zf_erdai_c;
	if (sqlca.sqlcode&&sqlca.sqlcode!=1403){
		sprintf(acErrMsg,"Fetch hv_zf_erdai error!!! %d",sqlca.sqlcode);
		WRITEMSG
		strcpy (reply,"D103");
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == 1403 ){
		sprintf(acErrMsg,"Fetch hv_zf_erdai finished!!! %d",sqlca.sqlcode);
		WRITEMSG
		strcpy (reply,"D104");
		return CM_SQLCODE;
	}
	zip_struct(hv_zf_erdai_c);

	return 0;
}

int Hv_zf_erdai_Clo_Sel (){
	EXEC SQL CLOSE sel_hv_zf_erdai;
	return 0;
}

/*****************************************************************************/
/****                              修改函数部分                           ****/
/*****************************************************************************/
int Hv_zf_erdai_Dec_Upd( reply , fmtstr , va_alist)
char    *reply;
char    *fmtstr;
va_dcl
{
	EXEC    SQL BEGIN   DECLARE SECTION;
		char    comm[1000];
	EXEC    SQL END     DECLARE SECTION;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	sprintf ( comm , "SELECT rowid,hv_zf_erdai.* FROM hv_zf_erdai WHERE  ");
	key_strcat(comm,wherelist);
	strcat(comm," FOR UPDATE WAIT 5 ");
	vtcp_log("%s,%d,SQLSTR=[%s]\n",__FILE__,__LINE__,comm);
	sqlca.sqlcode=0;
	EXEC SQL PREPARE hv_zf_erdai_upd FROM :comm;

	EXEC SQL DECLARE upd_hv_zf_erdai CURSOR FOR hv_zf_erdai_upd;

	EXEC SQL OPEN upd_hv_zf_erdai;
	if (sqlca.sqlcode){
		sprintf(acErrMsg,"open hv_zf_erdai error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D102" );
		return CM_SQLCODE;
	}

	return 0;
}

int Hv_zf_erdai_Fet_Upd( struct hv_zf_erdai_c *hv_zf_erdai_c , char * reply ){
	int   ret;

	EXEC SQL FETCH upd_hv_zf_erdai INTO :hv_zf_erdai_c;
	if ( sqlca.sqlcode && sqlca.sqlcode!=1403 ){
		sprintf(acErrMsg,"FETCH upd hv_zf_erdai error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D103" );
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == 1403 ){
		sprintf(acErrMsg,"FETCH hv_zf_erdai finished %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D104" );
		return CM_SQLCODE;
	}
	zip_struct(hv_zf_erdai_c);

	return 0;
}

int Hv_zf_erdai_Upd_Upd( struct hv_zf_erdai_c hv_zf_erdai_c , char * reply){
	int ret;

	EXEC SQL UPDATE hv_zf_erdai SET cmtno=:hv_zf_erdai_c.cmtno,
			commid=:hv_zf_erdai_c.commid,
			refcommid=:hv_zf_erdai_c.refcommid,
			msgno=:hv_zf_erdai_c.msgno,
			snd_br_no=:hv_zf_erdai_c.snd_br_no,
			rcv_br_no=:hv_zf_erdai_c.rcv_br_no,
			wt_date=:hv_zf_erdai_c.wt_date,
			orderno=:hv_zf_erdai_c.orderno,
			tx_time=:hv_zf_erdai_c.tx_time,
			yw_kind=:hv_zf_erdai_c.yw_kind,
			yw_type=:hv_zf_erdai_c.yw_type,
			cur_no=:hv_zf_erdai_c.cur_no,
			tx_amt=:hv_zf_erdai_c.tx_amt,
			drawtype=:hv_zf_erdai_c.drawtype,
			drawval=:hv_zf_erdai_c.drawval,
			tx_chrg_ind=:hv_zf_erdai_c.tx_chrg_ind,
			chrg_amt=:hv_zf_erdai_c.chrg_amt,
			lw_ind=:hv_zf_erdai_c.lw_ind,
			cd_flag=:hv_zf_erdai_c.cd_flag,
			pay_qs_no=:hv_zf_erdai_c.pay_qs_no,
			or_br_no=:hv_zf_erdai_c.or_br_no,
			or_br_nm=:hv_zf_erdai_c.or_br_nm,
			accno=:hv_zf_erdai_c.accno,
			accnm=:hv_zf_erdai_c.accnm,
			pay_opn_br_no=:hv_zf_erdai_c.pay_opn_br_no,
			pay_opn_br_nm=:hv_zf_erdai_c.pay_opn_br_nm,
			pay_ac_no=:hv_zf_erdai_c.pay_ac_no,
			pay_name=:hv_zf_erdai_c.pay_name,
			pay_addr=:hv_zf_erdai_c.pay_addr,
			cash_qs_no=:hv_zf_erdai_c.cash_qs_no,
			ac_br_no=:hv_zf_erdai_c.ac_br_no,
			ac_br_nm=:hv_zf_erdai_c.ac_br_nm,
			cash_opn_br_no=:hv_zf_erdai_c.cash_opn_br_no,
			cash_opn_br_nm=:hv_zf_erdai_c.cash_opn_br_nm,
			cash_ac_no=:hv_zf_erdai_c.cash_ac_no,
			cash_name=:hv_zf_erdai_c.cash_name,
			cash_addr=:hv_zf_erdai_c.cash_addr,
			mediary1=:hv_zf_erdai_c.mediary1,
			mediaryname1=:hv_zf_erdai_c.mediaryname1,
			mediary2=:hv_zf_erdai_c.mediary2,
			mediaryname2=:hv_zf_erdai_c.mediaryname2,
			beg_sts=:hv_zf_erdai_c.beg_sts,
			operlevel=:hv_zf_erdai_c.operlevel,
			note_type=:hv_zf_erdai_c.note_type,
			note_preno=:hv_zf_erdai_c.note_preno,
			note_no=:hv_zf_erdai_c.note_no,
			endtoendid=:hv_zf_erdai_c.endtoendid,
			clsdate=:hv_zf_erdai_c.clsdate,
			hv_sts=:hv_zf_erdai_c.hv_sts,
			hv_osts=:hv_zf_erdai_c.hv_osts,
			procstat=:hv_zf_erdai_c.procstat,
			respcode=:hv_zf_erdai_c.respcode,
			rspinfo=:hv_zf_erdai_c.rspinfo,
			procarty=:hv_zf_erdai_c.procarty,
			resend_ind=:hv_zf_erdai_c.resend_ind,
			resend_date=:hv_zf_erdai_c.resend_date,
			hv_prt_ind=:hv_zf_erdai_c.hv_prt_ind,
			checkflag=:hv_zf_erdai_c.checkflag,
			hostflag=:hv_zf_erdai_c.hostflag,
			auth_tel=:hv_zf_erdai_c.auth_tel,
			auth_trace_no=:hv_zf_erdai_c.auth_trace_no,
			chk=:hv_zf_erdai_c.chk,
			chk_trace_no=:hv_zf_erdai_c.chk_trace_no,
			send_tel=:hv_zf_erdai_c.send_tel,
			send_trace_no=:hv_zf_erdai_c.send_trace_no,
			host_date_snd=:hv_zf_erdai_c.host_date_snd,
			trace_no_snd=:hv_zf_erdai_c.trace_no_snd,
			channel=:hv_zf_erdai_c.channel,
			cnapsflag=:hv_zf_erdai_c.cnapsflag,
			tx_date=:hv_zf_erdai_c.tx_date,
			rcv_swno=:hv_zf_erdai_c.rcv_swno,
			host_date=:hv_zf_erdai_c.host_date,
			trace_no=:hv_zf_erdai_c.trace_no,
			tel=:hv_zf_erdai_c.tel,
			susflag=:hv_zf_erdai_c.susflag,
			gz_br_no=:hv_zf_erdai_c.gz_br_no,
			enteracc=:hv_zf_erdai_c.enteracc,
			enteraccnm=:hv_zf_erdai_c.enteraccnm,
			enteropenbrn=:hv_zf_erdai_c.enteropenbrn,
			enterdate=:hv_zf_erdai_c.enterdate,
			entertrace=:hv_zf_erdai_c.entertrace,
			enterswno=:hv_zf_erdai_c.enterswno,
			enterswdate=:hv_zf_erdai_c.enterswdate,
			entertel=:hv_zf_erdai_c.entertel,
			entertel_no=:hv_zf_erdai_c.entertel_no,
			dealerr_date=:hv_zf_erdai_c.dealerr_date,
			dealerr_tel=:hv_zf_erdai_c.dealerr_tel,
			dealerr_hostno=:hv_zf_erdai_c.dealerr_hostno,
			dealerr_swno=:hv_zf_erdai_c.dealerr_swno,
			dealerr_swdate=:hv_zf_erdai_c.dealerr_swdate,
			gzdeal_trace_no=:hv_zf_erdai_c.gzdeal_trace_no,
			gzdeal_trace_date=:hv_zf_erdai_c.gzdeal_trace_date,
			gzdeal_host_no=:hv_zf_erdai_c.gzdeal_host_no,
			gzdeal_host_date=:hv_zf_erdai_c.gzdeal_host_date,
			hv_brf=:hv_zf_erdai_c.hv_brf,
			hv_brf2=:hv_zf_erdai_c.hv_brf2,
			remark=:hv_zf_erdai_c.remark,
			remark2=:hv_zf_erdai_c.remark2,
			chargeoff=:hv_zf_erdai_c.chargeoff
	WHERE rowid=:hv_zf_erdai_c.rowid;
	if ( sqlca.sqlcode && sqlca.sqlcode != 1403 ){
		sprintf(acErrMsg,"UPDATE hv_zf_erdai error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D105" );
		return CM_SQLCODE;
	}

	return 0;
}


int Hv_zf_erdai_Del_Upd(struct hv_zf_erdai_c hv_zf_erdai_c , char * reply  ){

	EXEC SQL DELETE FROM hv_zf_erdai WHERE rowid=:hv_zf_erdai_c.rowid;
	if ( sqlca.sqlcode ){
		sprintf(acErrMsg,"DELETE hv_zf_erdai error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D105" );
		return CM_SQLCODE;
	}

	return 0;
}

int Hv_zf_erdai_Clo_Upd( ){
	EXEC SQL CLOSE upd_hv_zf_erdai;
	return 0;
}

/*****************************************************************************/
/****                              增加函数部分                           ****/
/*****************************************************************************/
int Hv_zf_erdai_Ins( struct hv_zf_erdai_c hv_zf_erdai_c , char * reply ){
	int ret;

	EXEC SQL INSERT INTO hv_zf_erdai VALUES (:hv_zf_erdai_c.cmtno,
			:hv_zf_erdai_c.commid,
			:hv_zf_erdai_c.refcommid,
			:hv_zf_erdai_c.msgno,
			:hv_zf_erdai_c.snd_br_no,
			:hv_zf_erdai_c.rcv_br_no,
			:hv_zf_erdai_c.wt_date,
			:hv_zf_erdai_c.orderno,
			:hv_zf_erdai_c.tx_time,
			:hv_zf_erdai_c.yw_kind,
			:hv_zf_erdai_c.yw_type,
			:hv_zf_erdai_c.cur_no,
			:hv_zf_erdai_c.tx_amt,
			:hv_zf_erdai_c.drawtype,
			:hv_zf_erdai_c.drawval,
			:hv_zf_erdai_c.tx_chrg_ind,
			:hv_zf_erdai_c.chrg_amt,
			:hv_zf_erdai_c.lw_ind,
			:hv_zf_erdai_c.cd_flag,
			:hv_zf_erdai_c.pay_qs_no,
			:hv_zf_erdai_c.or_br_no,
			:hv_zf_erdai_c.or_br_nm,
			:hv_zf_erdai_c.accno,
			:hv_zf_erdai_c.accnm,
			:hv_zf_erdai_c.pay_opn_br_no,
			:hv_zf_erdai_c.pay_opn_br_nm,
			:hv_zf_erdai_c.pay_ac_no,
			:hv_zf_erdai_c.pay_name,
			:hv_zf_erdai_c.pay_addr,
			:hv_zf_erdai_c.cash_qs_no,
			:hv_zf_erdai_c.ac_br_no,
			:hv_zf_erdai_c.ac_br_nm,
			:hv_zf_erdai_c.cash_opn_br_no,
			:hv_zf_erdai_c.cash_opn_br_nm,
			:hv_zf_erdai_c.cash_ac_no,
			:hv_zf_erdai_c.cash_name,
			:hv_zf_erdai_c.cash_addr,
			:hv_zf_erdai_c.mediary1,
			:hv_zf_erdai_c.mediaryname1,
			:hv_zf_erdai_c.mediary2,
			:hv_zf_erdai_c.mediaryname2,
			:hv_zf_erdai_c.beg_sts,
			:hv_zf_erdai_c.operlevel,
			:hv_zf_erdai_c.note_type,
			:hv_zf_erdai_c.note_preno,
			:hv_zf_erdai_c.note_no,
			:hv_zf_erdai_c.endtoendid,
			:hv_zf_erdai_c.clsdate,
			:hv_zf_erdai_c.hv_sts,
			:hv_zf_erdai_c.hv_osts,
			:hv_zf_erdai_c.procstat,
			:hv_zf_erdai_c.respcode,
			:hv_zf_erdai_c.rspinfo,
			:hv_zf_erdai_c.procarty,
			:hv_zf_erdai_c.resend_ind,
			:hv_zf_erdai_c.resend_date,
			:hv_zf_erdai_c.hv_prt_ind,
			:hv_zf_erdai_c.checkflag,
			:hv_zf_erdai_c.hostflag,
			:hv_zf_erdai_c.auth_tel,
			:hv_zf_erdai_c.auth_trace_no,
			:hv_zf_erdai_c.chk,
			:hv_zf_erdai_c.chk_trace_no,
			:hv_zf_erdai_c.send_tel,
			:hv_zf_erdai_c.send_trace_no,
			:hv_zf_erdai_c.host_date_snd,
			:hv_zf_erdai_c.trace_no_snd,
			:hv_zf_erdai_c.channel,
			:hv_zf_erdai_c.cnapsflag,
			:hv_zf_erdai_c.tx_date,
			:hv_zf_erdai_c.rcv_swno,
			:hv_zf_erdai_c.host_date,
			:hv_zf_erdai_c.trace_no,
			:hv_zf_erdai_c.tel,
			:hv_zf_erdai_c.susflag,
			:hv_zf_erdai_c.gz_br_no,
			:hv_zf_erdai_c.enteracc,
			:hv_zf_erdai_c.enteraccnm,
			:hv_zf_erdai_c.enteropenbrn,
			:hv_zf_erdai_c.enterdate,
			:hv_zf_erdai_c.entertrace,
			:hv_zf_erdai_c.enterswno,
			:hv_zf_erdai_c.enterswdate,
			:hv_zf_erdai_c.entertel,
			:hv_zf_erdai_c.entertel_no,
			:hv_zf_erdai_c.dealerr_date,
			:hv_zf_erdai_c.dealerr_tel,
			:hv_zf_erdai_c.dealerr_hostno,
			:hv_zf_erdai_c.dealerr_swno,
			:hv_zf_erdai_c.dealerr_swdate,
			:hv_zf_erdai_c.gzdeal_trace_no,
			:hv_zf_erdai_c.gzdeal_trace_date,
			:hv_zf_erdai_c.gzdeal_host_no,
			:hv_zf_erdai_c.gzdeal_host_date,
			:hv_zf_erdai_c.hv_brf,
			:hv_zf_erdai_c.hv_brf2,
			:hv_zf_erdai_c.remark,
			:hv_zf_erdai_c.remark2,
			:hv_zf_erdai_c.chargeoff);
	if ( sqlca.sqlcode && sqlca.sqlcode != -1 )
	{
		sprintf(acErrMsg,"INSERT hv_zf_erdai error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D107" );
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == -1 )
	{
		sprintf(acErrMsg,"INSERT hv_zf_erdai error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D108" );
		return CM_SQLCODE;
	}

	return 0;
}
