#include<stdio.h>
#include<varargs.h>

#define EXTERN
#include"global.h"


EXEC SQL INCLUDE SQLCA;
#include"prdt_ac_id_c.h"
#define CM_SQLCODE sqlca.sqlcode==1403?100:(sqlca.sqlcode==-1?-239:sqlca.sqlcode)

int prdt_ac_id_con ( struct prdt_ac_id_c , char *);
int put_mystery( char *, char * );
char *zip_tail(char *s);
static void zip_struct(struct prdt_ac_id_c* ps){
	zip_tail(ps->rowid);
	zip_tail(ps->ac_id_type);
	zip_tail(ps->prdt_no);
}
int Prdt_ac_id_Debug(struct prdt_ac_id_c *ps){
	printf("prdt_ac_id_c.rowid=[%s]\n",ps->rowid);
	printf("prdt_ac_id_c.ac_id=[%ld]\n",ps->ac_id);
	printf("prdt_ac_id_c.ac_seqn=[%ld]\n",ps->ac_seqn);
	printf("prdt_ac_id_c.ac_id_type=[%s]\n",ps->ac_id_type);
	printf("prdt_ac_id_c.prdt_no=[%s]\n",ps->prdt_no);
	printf("prdt_ac_id_c.cif_no=[%ld]\n",ps->cif_no);
	return(0);
}
/*****************************************************************************/
/****                              查询函数部分                           ****/
/*****************************************************************************/
int Prdt_ac_id_Sel(reply,prdt_ac_id_c,fmtstr,va_alist)
char    *reply;
struct  prdt_ac_id_c *prdt_ac_id_c;
char    *fmtstr;
va_dcl
{
	int   ret;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	ret = Prdt_ac_id_Dec_Sel( reply , "%s" , wherelist );
	if (ret){
		WRITEMSG
		return ret;
	}
	ret = Prdt_ac_id_Fet_Sel( prdt_ac_id_c , reply );
	if (ret){
		WRITEMSG
		return ret;
	}

	Prdt_ac_id_Clo_Sel();

	return 0;
}



char *key_strcat(char *,char *);
int Prdt_ac_id_Dec_Sel ( reply , fmtstr , va_alist )
char    *reply;
char    *fmtstr;
va_dcl
{
	EXEC    SQL BEGIN   DECLARE SECTION;
		char    comm[1000];
	EXEC    SQL END     DECLARE SECTION;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	sprintf ( comm ," SELECT 'rowid',prdt_ac_id.* FROM prdt_ac_id WHERE  ");
	key_strcat(comm,wherelist);

	vtcp_log("%s,%d,SQLSTR=[%s]\n",__FILE__,__LINE__,comm);
	sqlca.sqlcode=0;
	EXEC SQL PREPARE prdt_ac_id_sel FROM :comm;
	EXEC SQL DECLARE sel_prdt_ac_id CURSOR FOR prdt_ac_id_sel;

	EXEC SQL OPEN sel_prdt_ac_id;
	if (sqlca.sqlcode){
		sprintf(acErrMsg,"OPEN prdt_ac_id error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D102" );
		return CM_SQLCODE;
	}

	return 0;
}

int Prdt_ac_id_Fet_Sel ( struct prdt_ac_id_c *prdt_ac_id_c , char * reply )
{

	int   ret;

	EXEC SQL FETCH sel_prdt_ac_id INTO :prdt_ac_id_c;
	if (sqlca.sqlcode&&sqlca.sqlcode!=1403){
		sprintf(acErrMsg,"Fetch prdt_ac_id error!!! %d",sqlca.sqlcode);
		WRITEMSG
		strcpy (reply,"D103");
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == 1403 ){
		sprintf(acErrMsg,"Fetch prdt_ac_id finished!!! %d",sqlca.sqlcode);
		WRITEMSG
		strcpy (reply,"D104");
		return CM_SQLCODE;
	}
	zip_struct(prdt_ac_id_c);

	return 0;
}

int Prdt_ac_id_Clo_Sel (){
	EXEC SQL CLOSE sel_prdt_ac_id;
	return(0);
}

/*****************************************************************************/
/****                              修改函数部分                           ****/
/*****************************************************************************/
int Prdt_ac_id_Dec_Upd( reply , fmtstr , va_alist)
char    *reply;
char    *fmtstr;
va_dcl
{
	EXEC    SQL BEGIN   DECLARE SECTION;
		char    comm[1000];
	EXEC    SQL END     DECLARE SECTION;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	sprintf ( comm , "SELECT 'rowid',prdt_ac_id.* FROM prdt_ac_id WHERE  ");
	key_strcat(comm,wherelist);
	strcat(comm," FOR UPDATE WAIT 5 ");
	vtcp_log("%s,%d,SQLSTR=[%s]\n",__FILE__,__LINE__,comm);
	sqlca.sqlcode=0;
	EXEC SQL PREPARE prdt_ac_id_upd FROM :comm;
	EXEC SQL DECLARE upd_prdt_ac_id CURSOR FOR prdt_ac_id_upd;

	EXEC SQL OPEN upd_prdt_ac_id;
	if (sqlca.sqlcode){
		sprintf(acErrMsg,"open prdt_ac_id error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D102" );
		return CM_SQLCODE;
	}

	return 0;
}

int Prdt_ac_id_Fet_Upd( struct prdt_ac_id_c *prdt_ac_id_c , char * reply ){
	int   ret;

	EXEC SQL FETCH upd_prdt_ac_id INTO :prdt_ac_id_c;
	if ( sqlca.sqlcode && sqlca.sqlcode!=1403 ){
		sprintf(acErrMsg,"FETCH upd prdt_ac_id error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D103" );
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == 1403 ){
		sprintf(acErrMsg,"FETCH prdt_ac_id finished %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D104" );
		return CM_SQLCODE;
	}
	zip_struct(prdt_ac_id_c);

	return 0;
}

int Prdt_ac_id_Upd_Upd( struct prdt_ac_id_c prdt_ac_id_c , char * reply){
	int ret;

	EXEC SQL UPDATE prdt_ac_id SET ac_id=:prdt_ac_id_c.ac_id,
			ac_seqn=:prdt_ac_id_c.ac_seqn,
			ac_id_type=:prdt_ac_id_c.ac_id_type,
			prdt_no=:prdt_ac_id_c.prdt_no,
			cif_no=:prdt_ac_id_c.cif_no
	WHERE rowid=:prdt_ac_id_c.rowid;
	if ( sqlca.sqlcode && sqlca.sqlcode != 1403 ){
		sprintf(acErrMsg,"UPDATE prdt_ac_id error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D105" );
		return CM_SQLCODE;
	}
	pub_reg_rec_file(" upd prdt_ac_id"); 

	return 0;
}


int Prdt_ac_id_Del_Upd(struct prdt_ac_id_c prdt_ac_id_c , char * reply  ){

	EXEC SQL DELETE FROM prdt_ac_id WHERE rowid=:prdt_ac_id_c.rowid;
	if ( sqlca.sqlcode ){
		sprintf(acErrMsg,"DELETE prdt_ac_id error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D105" );
		return CM_SQLCODE;
	}

	return 0;
}

int Prdt_ac_id_Clo_Upd( ){
	EXEC SQL CLOSE upd_prdt_ac_id;

	return 0;
}

/*****************************************************************************/
/****                              增加函数部分                           ****/
/*****************************************************************************/
int Prdt_ac_id_Ins( struct prdt_ac_id_c prdt_ac_id_c , char * reply ){
	int ret;

	EXEC SQL INSERT INTO prdt_ac_id VALUES (:prdt_ac_id_c.ac_id,
			:prdt_ac_id_c.ac_seqn,
			:prdt_ac_id_c.ac_id_type,
			:prdt_ac_id_c.prdt_no,
			:prdt_ac_id_c.cif_no);
	if ( sqlca.sqlcode && sqlca.sqlcode != -1 )
	{
		sprintf(acErrMsg,"INSERT prdt_ac_id error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D107" );
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == -1 )
	{
		sprintf(acErrMsg,"INSERT prdt_ac_id error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D108" );
		return CM_SQLCODE;
	}
	pub_reg_rec_file(" ins prdt_ac_id"); 

	return 0;
}
