#include<stdio.h>
#include<varargs.h>

#define EXTERN
#include"global.h"


EXEC SQL INCLUDE SQLCA;
#include"cif_merge_log_c.h"
#define CM_SQLCODE sqlca.sqlcode==1403?100:(sqlca.sqlcode==-1?-239:sqlca.sqlcode)

int cif_merge_log_con ( struct cif_merge_log_c , char *);
int put_mystery( char *, char * );
char *zip_tail(char *s);
static void zip_struct(struct cif_merge_log_c* ps){
	zip_tail(ps->rowid);
	zip_tail(ps->tel);
}
int Cif_merge_log_Debug(struct cif_merge_log_c *ps){
	vtcp_log("cif_merge_log_c.rowid=[%s]\n",ps->rowid);
	vtcp_log("cif_merge_log_c.cif_no_old=[%ld]\n",ps->cif_no_old);
	vtcp_log("cif_merge_log_c.cif_no_new=[%ld]\n",ps->cif_no_new);
	vtcp_log("cif_merge_log_c.tx_date=[%ld]\n",ps->tx_date);
	vtcp_log("cif_merge_log_c.tx_time=[%ld]\n",ps->tx_time);
	vtcp_log("cif_merge_log_c.tel=[%s]\n",ps->tel);
	vtcp_log("cif_merge_log_c.log_cnt=[%ld]\n",ps->log_cnt);
	return(0);
}
/*****************************************************************************/
/****                              查询函数部分[]                       ****/
/*****************************************************************************/
int Cif_merge_log_Sel(reply,cif_merge_log_c,fmtstr,va_alist)
char    *reply;
struct  cif_merge_log_c *cif_merge_log_c;
char    *fmtstr;
va_dcl
{
	int   ret;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	ret = Cif_merge_log_Dec_Sel( reply , "%s" , wherelist );
	if (ret){
		WRITEMSG
		return ret;
	}
	ret = Cif_merge_log_Fet_Sel( cif_merge_log_c , reply );
	if (ret){
		WRITEMSG
		return ret;
	}

	Cif_merge_log_Clo_Sel();

	return 0;
}



char *key_strcat(char *,char *);
int Cif_merge_log_Dec_Sel ( reply , fmtstr , va_alist )
char    *reply;
char    *fmtstr;
va_dcl
{
	EXEC    SQL BEGIN   DECLARE SECTION;
		char    comm[1000];
	EXEC    SQL END     DECLARE SECTION;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	sprintf ( comm ," SELECT rowid,cif_merge_log.* FROM cif_merge_log WHERE  ");
	key_strcat(comm,wherelist);

	vtcp_log("%s,%d,SQLSTR=[%s]\n",__FILE__,__LINE__,comm);
	sqlca.sqlcode=0;
	EXEC SQL PREPARE cif_merge_log_sel FROM :comm;
	EXEC SQL DECLARE sel_cif_merge_log CURSOR FOR cif_merge_log_sel;

	EXEC SQL OPEN sel_cif_merge_log;
	if (sqlca.sqlcode){
		sprintf(acErrMsg,"OPEN cif_merge_log error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D102" );
		return CM_SQLCODE;
	}

	return 0;
}

int Cif_merge_log_Fet_Sel ( struct cif_merge_log_c *cif_merge_log_c , char * reply )
{

	int   ret;

	EXEC SQL FETCH sel_cif_merge_log INTO :cif_merge_log_c;
	if (sqlca.sqlcode&&sqlca.sqlcode!=1403){
		sprintf(acErrMsg,"Fetch cif_merge_log error!!! %d",sqlca.sqlcode);
		WRITEMSG
		strcpy (reply,"D103");
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == 1403 ){
		sprintf(acErrMsg,"Fetch cif_merge_log finished!!! %d",sqlca.sqlcode);
		WRITEMSG
		strcpy (reply,"D104");
		return CM_SQLCODE;
	}
	zip_struct(cif_merge_log_c);

	return 0;
}

int Cif_merge_log_Clo_Sel (){
	EXEC SQL CLOSE sel_cif_merge_log;
	return 0;
}

/*****************************************************************************/
/****                              修改函数部分                           ****/
/*****************************************************************************/
int Cif_merge_log_Dec_Upd( reply , fmtstr , va_alist)
char    *reply;
char    *fmtstr;
va_dcl
{
	EXEC    SQL BEGIN   DECLARE SECTION;
		char    comm[1000];
	EXEC    SQL END     DECLARE SECTION;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	sprintf ( comm , "SELECT rowid,cif_merge_log.* FROM cif_merge_log WHERE  ");
	key_strcat(comm,wherelist);
	strcat(comm," FOR UPDATE WAIT 5 ");
	vtcp_log("%s,%d,SQLSTR=[%s]\n",__FILE__,__LINE__,comm);
	sqlca.sqlcode=0;
	EXEC SQL PREPARE cif_merge_log_upd FROM :comm;

	EXEC SQL DECLARE upd_cif_merge_log CURSOR FOR cif_merge_log_upd;

	EXEC SQL OPEN upd_cif_merge_log;
	if (sqlca.sqlcode){
		sprintf(acErrMsg,"open cif_merge_log error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D102" );
		return CM_SQLCODE;
	}

	return 0;
}

int Cif_merge_log_Fet_Upd( struct cif_merge_log_c *cif_merge_log_c , char * reply ){
	int   ret;

	EXEC SQL FETCH upd_cif_merge_log INTO :cif_merge_log_c;
	if ( sqlca.sqlcode && sqlca.sqlcode!=1403 ){
		sprintf(acErrMsg,"FETCH upd cif_merge_log error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D103" );
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == 1403 ){
		sprintf(acErrMsg,"FETCH cif_merge_log finished %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D104" );
		return CM_SQLCODE;
	}
	zip_struct(cif_merge_log_c);

	return 0;
}

int Cif_merge_log_Upd_Upd( struct cif_merge_log_c cif_merge_log_c , char * reply){
	int ret;

	EXEC SQL UPDATE cif_merge_log SET cif_no_old=:cif_merge_log_c.cif_no_old,
			cif_no_new=:cif_merge_log_c.cif_no_new,
			tx_date=:cif_merge_log_c.tx_date,
			tx_time=:cif_merge_log_c.tx_time,
			tel=:cif_merge_log_c.tel,
			log_cnt=:cif_merge_log_c.log_cnt
	WHERE rowid=:cif_merge_log_c.rowid;
	if ( sqlca.sqlcode && sqlca.sqlcode != 1403 ){
		sprintf(acErrMsg,"UPDATE cif_merge_log error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D105" );
		return CM_SQLCODE;
	}

	return 0;
}


int Cif_merge_log_Del_Upd(struct cif_merge_log_c cif_merge_log_c , char * reply  ){

	EXEC SQL DELETE FROM cif_merge_log WHERE rowid=:cif_merge_log_c.rowid;
	if ( sqlca.sqlcode ){
		sprintf(acErrMsg,"DELETE cif_merge_log error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D105" );
		return CM_SQLCODE;
	}

	return 0;
}

int Cif_merge_log_Clo_Upd( ){
	EXEC SQL CLOSE upd_cif_merge_log;
	return 0;
}

/*****************************************************************************/
/****                              增加函数部分                           ****/
/*****************************************************************************/
int Cif_merge_log_Ins( struct cif_merge_log_c cif_merge_log_c , char * reply ){
	int ret;

	EXEC SQL INSERT INTO cif_merge_log VALUES (:cif_merge_log_c.cif_no_old,
			:cif_merge_log_c.cif_no_new,
			:cif_merge_log_c.tx_date,
			:cif_merge_log_c.tx_time,
			:cif_merge_log_c.tel,
			:cif_merge_log_c.log_cnt);
	if ( sqlca.sqlcode && sqlca.sqlcode != -1 )
	{
		sprintf(acErrMsg,"INSERT cif_merge_log error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D107" );
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == -1 )
	{
		sprintf(acErrMsg,"INSERT cif_merge_log error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D108" );
		return CM_SQLCODE;
	}

	return 0;
}
