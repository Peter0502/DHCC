#include<stdio.h>
#include<varargs.h>

#define EXTERN
#include"global.h"


EXEC SQL INCLUDE SQLCA;
#include"cif_tranq_stat_c.h"
#define CM_SQLCODE sqlca.sqlcode==1403?100:(sqlca.sqlcode==-1?-239:sqlca.sqlcode)

int cif_tranq_stat_con ( struct cif_tranq_stat_c , char *);
int put_mystery( char *, char * );
char *zip_tail(char *s);
static void zip_struct(struct cif_tranq_stat_c* ps){
	zip_tail(ps->rowid);
	zip_tail(ps->cur_no);
}
int Cif_tranq_stat_Debug(struct cif_tranq_stat_c *ps){
	vtcp_log("cif_tranq_stat_c.rowid=[%s]\n",ps->rowid);
	vtcp_log("cif_tranq_stat_c.cif_no=[%ld]\n",ps->cif_no);
	vtcp_log("cif_tranq_stat_c.cur_no=[%s]\n",ps->cur_no);
	vtcp_log("cif_tranq_stat_c.date=[%ld]\n",ps->date);
	vtcp_log("cif_tranq_stat_c.t_cash_cnt=[%ld]\n",ps->t_cash_cnt);
	vtcp_log("cif_tranq_stat_c.t_cash_amt=[%f]\n",ps->t_cash_amt);
	vtcp_log("cif_tranq_stat_c.t_turn_cnt=[%ld]\n",ps->t_turn_cnt);
	vtcp_log("cif_tranq_stat_c.t_turn_amt=[%f]\n",ps->t_turn_amt);
	vtcp_log("cif_tranq_stat_c.t_atm_cnt=[%ld]\n",ps->t_atm_cnt);
	vtcp_log("cif_tranq_stat_c.t_atm_amt=[%f]\n",ps->t_atm_amt);
	vtcp_log("cif_tranq_stat_c.t_pos_cnt=[%ld]\n",ps->t_pos_cnt);
	vtcp_log("cif_tranq_stat_c.t_pos_amt=[%f]\n",ps->t_pos_amt);
	vtcp_log("cif_tranq_stat_c.x_cash_cnt=[%ld]\n",ps->x_cash_cnt);
	vtcp_log("cif_tranq_stat_c.x_cash_amt=[%f]\n",ps->x_cash_amt);
	vtcp_log("cif_tranq_stat_c.x_turn_cnt=[%ld]\n",ps->x_turn_cnt);
	vtcp_log("cif_tranq_stat_c.x_turn_amt=[%f]\n",ps->x_turn_amt);
	vtcp_log("cif_tranq_stat_c.x_atm_cnt=[%ld]\n",ps->x_atm_cnt);
	vtcp_log("cif_tranq_stat_c.x_atm_amt=[%f]\n",ps->x_atm_amt);
	vtcp_log("cif_tranq_stat_c.x_pos_cnt=[%ld]\n",ps->x_pos_cnt);
	vtcp_log("cif_tranq_stat_c.x_pos_amt=[%f]\n",ps->x_pos_amt);
	vtcp_log("cif_tranq_stat_c.m_cash_cnt=[%ld]\n",ps->m_cash_cnt);
	vtcp_log("cif_tranq_stat_c.m_cash_amt=[%f]\n",ps->m_cash_amt);
	vtcp_log("cif_tranq_stat_c.m_turn_cnt=[%ld]\n",ps->m_turn_cnt);
	vtcp_log("cif_tranq_stat_c.m_turn_amt=[%f]\n",ps->m_turn_amt);
	vtcp_log("cif_tranq_stat_c.m_atm_cnt=[%ld]\n",ps->m_atm_cnt);
	vtcp_log("cif_tranq_stat_c.m_atm_amt=[%f]\n",ps->m_atm_amt);
	vtcp_log("cif_tranq_stat_c.m_pos_cnt=[%ld]\n",ps->m_pos_cnt);
	vtcp_log("cif_tranq_stat_c.m_pos_amt=[%f]\n",ps->m_pos_amt);
	vtcp_log("cif_tranq_stat_c.q_cash_cnt=[%ld]\n",ps->q_cash_cnt);
	vtcp_log("cif_tranq_stat_c.q_cash_amt=[%f]\n",ps->q_cash_amt);
	vtcp_log("cif_tranq_stat_c.q_turn_cnt=[%ld]\n",ps->q_turn_cnt);
	vtcp_log("cif_tranq_stat_c.q_turn_amt=[%f]\n",ps->q_turn_amt);
	vtcp_log("cif_tranq_stat_c.q_atm_cnt=[%ld]\n",ps->q_atm_cnt);
	vtcp_log("cif_tranq_stat_c.q_atm_amt=[%f]\n",ps->q_atm_amt);
	vtcp_log("cif_tranq_stat_c.q_pos_cnt=[%ld]\n",ps->q_pos_cnt);
	vtcp_log("cif_tranq_stat_c.q_pos_amt=[%f]\n",ps->q_pos_amt);
	vtcp_log("cif_tranq_stat_c.hy_cash_cnt=[%ld]\n",ps->hy_cash_cnt);
	vtcp_log("cif_tranq_stat_c.hy_cash_amt=[%f]\n",ps->hy_cash_amt);
	vtcp_log("cif_tranq_stat_c.hy_turn_cnt=[%ld]\n",ps->hy_turn_cnt);
	vtcp_log("cif_tranq_stat_c.hy_turn_amt=[%f]\n",ps->hy_turn_amt);
	vtcp_log("cif_tranq_stat_c.hy_atm_cnt=[%ld]\n",ps->hy_atm_cnt);
	vtcp_log("cif_tranq_stat_c.hy_atm_amt=[%f]\n",ps->hy_atm_amt);
	vtcp_log("cif_tranq_stat_c.hy_pos_cnt=[%ld]\n",ps->hy_pos_cnt);
	vtcp_log("cif_tranq_stat_c.hy_pos_amt=[%f]\n",ps->hy_pos_amt);
	vtcp_log("cif_tranq_stat_c.y_cash_cnt=[%ld]\n",ps->y_cash_cnt);
	vtcp_log("cif_tranq_stat_c.y_cash_amt=[%f]\n",ps->y_cash_amt);
	vtcp_log("cif_tranq_stat_c.y_turn_cnt=[%ld]\n",ps->y_turn_cnt);
	vtcp_log("cif_tranq_stat_c.y_turn_amt=[%f]\n",ps->y_turn_amt);
	vtcp_log("cif_tranq_stat_c.y_atm_cnt=[%ld]\n",ps->y_atm_cnt);
	vtcp_log("cif_tranq_stat_c.y_atm_amt=[%f]\n",ps->y_atm_amt);
	vtcp_log("cif_tranq_stat_c.y_pos_cnt=[%ld]\n",ps->y_pos_cnt);
	vtcp_log("cif_tranq_stat_c.y_pos_amt=[%f]\n",ps->y_pos_amt);
	return(0);
}
/*****************************************************************************/
/****                              查询函数部分[]                       ****/
/*****************************************************************************/
int Cif_tranq_stat_Sel(reply,cif_tranq_stat_c,fmtstr,va_alist)
char    *reply;
struct  cif_tranq_stat_c *cif_tranq_stat_c;
char    *fmtstr;
va_dcl
{
	int   ret;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	ret = Cif_tranq_stat_Dec_Sel( reply , "%s" , wherelist );
	if (ret){
		WRITEMSG
		return ret;
	}
	ret = Cif_tranq_stat_Fet_Sel( cif_tranq_stat_c , reply );
	if (ret){
		WRITEMSG
		return ret;
	}

	Cif_tranq_stat_Clo_Sel();

	return 0;
}



char *key_strcat(char *,char *);
int Cif_tranq_stat_Dec_Sel ( reply , fmtstr , va_alist )
char    *reply;
char    *fmtstr;
va_dcl
{
	EXEC    SQL BEGIN   DECLARE SECTION;
		char    comm[1000];
	EXEC    SQL END     DECLARE SECTION;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	sprintf ( comm ," SELECT rowid,cif_tranq_stat.* FROM cif_tranq_stat WHERE  ");
	key_strcat(comm,wherelist);

	vtcp_log("%s,%d,SQLSTR=[%s]\n",__FILE__,__LINE__,comm);
	sqlca.sqlcode=0;
	EXEC SQL PREPARE cif_tranq_stat_sel FROM :comm;
	EXEC SQL DECLARE sel_cif_tranq_stat CURSOR FOR cif_tranq_stat_sel;

	EXEC SQL OPEN sel_cif_tranq_stat;
	if (sqlca.sqlcode){
		sprintf(acErrMsg,"OPEN cif_tranq_stat error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D102" );
		return CM_SQLCODE;
	}

	return 0;
}

int Cif_tranq_stat_Fet_Sel ( struct cif_tranq_stat_c *cif_tranq_stat_c , char * reply )
{

	int   ret;

	EXEC SQL FETCH sel_cif_tranq_stat INTO :cif_tranq_stat_c;
	if (sqlca.sqlcode&&sqlca.sqlcode!=1403){
		sprintf(acErrMsg,"Fetch cif_tranq_stat error!!! %d",sqlca.sqlcode);
		WRITEMSG
		strcpy (reply,"D103");
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == 1403 ){
		sprintf(acErrMsg,"Fetch cif_tranq_stat finished!!! %d",sqlca.sqlcode);
		WRITEMSG
		strcpy (reply,"D104");
		return CM_SQLCODE;
	}
	zip_struct(cif_tranq_stat_c);

	return 0;
}

int Cif_tranq_stat_Clo_Sel (){
	EXEC SQL CLOSE sel_cif_tranq_stat;
	return 0;
}

/*****************************************************************************/
/****                              修改函数部分                           ****/
/*****************************************************************************/
int Cif_tranq_stat_Dec_Upd( reply , fmtstr , va_alist)
char    *reply;
char    *fmtstr;
va_dcl
{
	EXEC    SQL BEGIN   DECLARE SECTION;
		char    comm[1000];
	EXEC    SQL END     DECLARE SECTION;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	sprintf ( comm , "SELECT rowid,cif_tranq_stat.* FROM cif_tranq_stat WHERE  ");
	key_strcat(comm,wherelist);
	strcat(comm," FOR UPDATE WAIT 5 ");
	vtcp_log("%s,%d,SQLSTR=[%s]\n",__FILE__,__LINE__,comm);
	sqlca.sqlcode=0;
	EXEC SQL PREPARE cif_tranq_stat_upd FROM :comm;

	EXEC SQL DECLARE upd_cif_tranq_stat CURSOR FOR cif_tranq_stat_upd;

	EXEC SQL OPEN upd_cif_tranq_stat;
	if (sqlca.sqlcode){
		sprintf(acErrMsg,"open cif_tranq_stat error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D102" );
		return CM_SQLCODE;
	}

	return 0;
}

int Cif_tranq_stat_Fet_Upd( struct cif_tranq_stat_c *cif_tranq_stat_c , char * reply ){
	int   ret;

	EXEC SQL FETCH upd_cif_tranq_stat INTO :cif_tranq_stat_c;
	if ( sqlca.sqlcode && sqlca.sqlcode!=1403 ){
		sprintf(acErrMsg,"FETCH upd cif_tranq_stat error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D103" );
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == 1403 ){
		sprintf(acErrMsg,"FETCH cif_tranq_stat finished %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D104" );
		return CM_SQLCODE;
	}
	zip_struct(cif_tranq_stat_c);

	return 0;
}

int Cif_tranq_stat_Upd_Upd( struct cif_tranq_stat_c cif_tranq_stat_c , char * reply){
	int ret;

	EXEC SQL UPDATE cif_tranq_stat SET cif_no=:cif_tranq_stat_c.cif_no,
			cur_no=:cif_tranq_stat_c.cur_no,
			"date"=:cif_tranq_stat_c.date,
			t_cash_cnt=:cif_tranq_stat_c.t_cash_cnt,
			t_cash_amt=:cif_tranq_stat_c.t_cash_amt,
			t_turn_cnt=:cif_tranq_stat_c.t_turn_cnt,
			t_turn_amt=:cif_tranq_stat_c.t_turn_amt,
			t_atm_cnt=:cif_tranq_stat_c.t_atm_cnt,
			t_atm_amt=:cif_tranq_stat_c.t_atm_amt,
			t_pos_cnt=:cif_tranq_stat_c.t_pos_cnt,
			t_pos_amt=:cif_tranq_stat_c.t_pos_amt,
			x_cash_cnt=:cif_tranq_stat_c.x_cash_cnt,
			x_cash_amt=:cif_tranq_stat_c.x_cash_amt,
			x_turn_cnt=:cif_tranq_stat_c.x_turn_cnt,
			x_turn_amt=:cif_tranq_stat_c.x_turn_amt,
			x_atm_cnt=:cif_tranq_stat_c.x_atm_cnt,
			x_atm_amt=:cif_tranq_stat_c.x_atm_amt,
			x_pos_cnt=:cif_tranq_stat_c.x_pos_cnt,
			x_pos_amt=:cif_tranq_stat_c.x_pos_amt,
			m_cash_cnt=:cif_tranq_stat_c.m_cash_cnt,
			m_cash_amt=:cif_tranq_stat_c.m_cash_amt,
			m_turn_cnt=:cif_tranq_stat_c.m_turn_cnt,
			m_turn_amt=:cif_tranq_stat_c.m_turn_amt,
			m_atm_cnt=:cif_tranq_stat_c.m_atm_cnt,
			m_atm_amt=:cif_tranq_stat_c.m_atm_amt,
			m_pos_cnt=:cif_tranq_stat_c.m_pos_cnt,
			m_pos_amt=:cif_tranq_stat_c.m_pos_amt,
			q_cash_cnt=:cif_tranq_stat_c.q_cash_cnt,
			q_cash_amt=:cif_tranq_stat_c.q_cash_amt,
			q_turn_cnt=:cif_tranq_stat_c.q_turn_cnt,
			q_turn_amt=:cif_tranq_stat_c.q_turn_amt,
			q_atm_cnt=:cif_tranq_stat_c.q_atm_cnt,
			q_atm_amt=:cif_tranq_stat_c.q_atm_amt,
			q_pos_cnt=:cif_tranq_stat_c.q_pos_cnt,
			q_pos_amt=:cif_tranq_stat_c.q_pos_amt,
			hy_cash_cnt=:cif_tranq_stat_c.hy_cash_cnt,
			hy_cash_amt=:cif_tranq_stat_c.hy_cash_amt,
			hy_turn_cnt=:cif_tranq_stat_c.hy_turn_cnt,
			hy_turn_amt=:cif_tranq_stat_c.hy_turn_amt,
			hy_atm_cnt=:cif_tranq_stat_c.hy_atm_cnt,
			hy_atm_amt=:cif_tranq_stat_c.hy_atm_amt,
			hy_pos_cnt=:cif_tranq_stat_c.hy_pos_cnt,
			hy_pos_amt=:cif_tranq_stat_c.hy_pos_amt,
			y_cash_cnt=:cif_tranq_stat_c.y_cash_cnt,
			y_cash_amt=:cif_tranq_stat_c.y_cash_amt,
			y_turn_cnt=:cif_tranq_stat_c.y_turn_cnt,
			y_turn_amt=:cif_tranq_stat_c.y_turn_amt,
			y_atm_cnt=:cif_tranq_stat_c.y_atm_cnt,
			y_atm_amt=:cif_tranq_stat_c.y_atm_amt,
			y_pos_cnt=:cif_tranq_stat_c.y_pos_cnt,
			y_pos_amt=:cif_tranq_stat_c.y_pos_amt
	WHERE rowid=:cif_tranq_stat_c.rowid;
	if ( sqlca.sqlcode && sqlca.sqlcode != 1403 ){
		sprintf(acErrMsg,"UPDATE cif_tranq_stat error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D105" );
		return CM_SQLCODE;
	}

	return 0;
}


int Cif_tranq_stat_Del_Upd(struct cif_tranq_stat_c cif_tranq_stat_c , char * reply  ){

	EXEC SQL DELETE FROM cif_tranq_stat WHERE rowid=:cif_tranq_stat_c.rowid;
	if ( sqlca.sqlcode ){
		sprintf(acErrMsg,"DELETE cif_tranq_stat error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D105" );
		return CM_SQLCODE;
	}

	return 0;
}

int Cif_tranq_stat_Clo_Upd( ){
	EXEC SQL CLOSE upd_cif_tranq_stat;
	return 0;
}

/*****************************************************************************/
/****                              增加函数部分                           ****/
/*****************************************************************************/
int Cif_tranq_stat_Ins( struct cif_tranq_stat_c cif_tranq_stat_c , char * reply ){
	int ret;

	EXEC SQL INSERT INTO cif_tranq_stat VALUES (:cif_tranq_stat_c.cif_no,
			:cif_tranq_stat_c.cur_no,
			:cif_tranq_stat_c.date,
			:cif_tranq_stat_c.t_cash_cnt,
			:cif_tranq_stat_c.t_cash_amt,
			:cif_tranq_stat_c.t_turn_cnt,
			:cif_tranq_stat_c.t_turn_amt,
			:cif_tranq_stat_c.t_atm_cnt,
			:cif_tranq_stat_c.t_atm_amt,
			:cif_tranq_stat_c.t_pos_cnt,
			:cif_tranq_stat_c.t_pos_amt,
			:cif_tranq_stat_c.x_cash_cnt,
			:cif_tranq_stat_c.x_cash_amt,
			:cif_tranq_stat_c.x_turn_cnt,
			:cif_tranq_stat_c.x_turn_amt,
			:cif_tranq_stat_c.x_atm_cnt,
			:cif_tranq_stat_c.x_atm_amt,
			:cif_tranq_stat_c.x_pos_cnt,
			:cif_tranq_stat_c.x_pos_amt,
			:cif_tranq_stat_c.m_cash_cnt,
			:cif_tranq_stat_c.m_cash_amt,
			:cif_tranq_stat_c.m_turn_cnt,
			:cif_tranq_stat_c.m_turn_amt,
			:cif_tranq_stat_c.m_atm_cnt,
			:cif_tranq_stat_c.m_atm_amt,
			:cif_tranq_stat_c.m_pos_cnt,
			:cif_tranq_stat_c.m_pos_amt,
			:cif_tranq_stat_c.q_cash_cnt,
			:cif_tranq_stat_c.q_cash_amt,
			:cif_tranq_stat_c.q_turn_cnt,
			:cif_tranq_stat_c.q_turn_amt,
			:cif_tranq_stat_c.q_atm_cnt,
			:cif_tranq_stat_c.q_atm_amt,
			:cif_tranq_stat_c.q_pos_cnt,
			:cif_tranq_stat_c.q_pos_amt,
			:cif_tranq_stat_c.hy_cash_cnt,
			:cif_tranq_stat_c.hy_cash_amt,
			:cif_tranq_stat_c.hy_turn_cnt,
			:cif_tranq_stat_c.hy_turn_amt,
			:cif_tranq_stat_c.hy_atm_cnt,
			:cif_tranq_stat_c.hy_atm_amt,
			:cif_tranq_stat_c.hy_pos_cnt,
			:cif_tranq_stat_c.hy_pos_amt,
			:cif_tranq_stat_c.y_cash_cnt,
			:cif_tranq_stat_c.y_cash_amt,
			:cif_tranq_stat_c.y_turn_cnt,
			:cif_tranq_stat_c.y_turn_amt,
			:cif_tranq_stat_c.y_atm_cnt,
			:cif_tranq_stat_c.y_atm_amt,
			:cif_tranq_stat_c.y_pos_cnt,
			:cif_tranq_stat_c.y_pos_amt);
	if ( sqlca.sqlcode && sqlca.sqlcode != -1 )
	{
		sprintf(acErrMsg,"INSERT cif_tranq_stat error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D107" );
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == -1 )
	{
		sprintf(acErrMsg,"INSERT cif_tranq_stat error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D108" );
		return CM_SQLCODE;
	}

	return 0;
}
