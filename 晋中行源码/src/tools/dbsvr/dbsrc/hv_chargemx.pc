#include<stdio.h>
#include<varargs.h>

#define EXTERN
#include"global.h"


EXEC SQL INCLUDE SQLCA;
#include"hv_chargemx_c.h"
#define CM_SQLCODE sqlca.sqlcode==1403?100:(sqlca.sqlcode==-1?-239:sqlca.sqlcode)

int hv_chargemx_con ( struct hv_chargemx_c , char *);
int put_mystery( char *, char * );
char *zip_tail(char *s);
static void zip_struct(struct hv_chargemx_c* ps){
	zip_tail(ps->rowid);
	zip_tail(ps->br_no);
	zip_tail(ps->chgtype);
	zip_tail(ps->cmtno);
	zip_tail(ps->srflag);
	zip_tail(ps->addid);
	zip_tail(ps->lowlimit);
	zip_tail(ps->upplimit);
	zip_tail(ps->mnum);
	zip_tail(ps->price);
	zip_tail(ps->brate);
	zip_tail(ps->pecrate);
	zip_tail(ps->txamt);
	zip_tail(ps->prtflag);
}
int Hv_chargemx_Debug(struct hv_chargemx_c *ps){
	vtcp_log("hv_chargemx_c.rowid=[%s]\n",ps->rowid);
	vtcp_log("hv_chargemx_c.br_no=[%s]\n",ps->br_no);
	vtcp_log("hv_chargemx_c.in_date=[%ld]\n",ps->in_date);
	vtcp_log("hv_chargemx_c.dtlid=[%ld]\n",ps->dtlid);
	vtcp_log("hv_chargemx_c.chgtype=[%s]\n",ps->chgtype);
	vtcp_log("hv_chargemx_c.cmtno=[%s]\n",ps->cmtno);
	vtcp_log("hv_chargemx_c.srflag=[%s]\n",ps->srflag);
	vtcp_log("hv_chargemx_c.addid=[%s]\n",ps->addid);
	vtcp_log("hv_chargemx_c.sdate=[%ld]\n",ps->sdate);
	vtcp_log("hv_chargemx_c.edate=[%ld]\n",ps->edate);
	vtcp_log("hv_chargemx_c.lowlimit=[%s]\n",ps->lowlimit);
	vtcp_log("hv_chargemx_c.upplimit=[%s]\n",ps->upplimit);
	vtcp_log("hv_chargemx_c.mnum=[%s]\n",ps->mnum);
	vtcp_log("hv_chargemx_c.price=[%s]\n",ps->price);
	vtcp_log("hv_chargemx_c.brate=[%s]\n",ps->brate);
	vtcp_log("hv_chargemx_c.pecrate=[%s]\n",ps->pecrate);
	vtcp_log("hv_chargemx_c.txamt=[%s]\n",ps->txamt);
	vtcp_log("hv_chargemx_c.prtflag=[%s]\n",ps->prtflag);
	return(0);
}
/*****************************************************************************/
/****                              查询函数部分[]                       ****/
/*****************************************************************************/
int Hv_chargemx_Sel(reply,hv_chargemx_c,fmtstr,va_alist)
char    *reply;
struct  hv_chargemx_c *hv_chargemx_c;
char    *fmtstr;
va_dcl
{
	int   ret;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	ret = Hv_chargemx_Dec_Sel( reply , "%s" , wherelist );
	if (ret){
		WRITEMSG
		return ret;
	}
	ret = Hv_chargemx_Fet_Sel( hv_chargemx_c , reply );
	if (ret){
		WRITEMSG
		return ret;
	}

	Hv_chargemx_Clo_Sel();

	return 0;
}



char *key_strcat(char *,char *);
int Hv_chargemx_Dec_Sel ( reply , fmtstr , va_alist )
char    *reply;
char    *fmtstr;
va_dcl
{
	EXEC    SQL BEGIN   DECLARE SECTION;
		char    comm[1000];
	EXEC    SQL END     DECLARE SECTION;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	sprintf ( comm ," SELECT rowid,hv_chargemx.* FROM hv_chargemx WHERE  ");
	key_strcat(comm,wherelist);

	vtcp_log("%s,%d,SQLSTR=[%s]\n",__FILE__,__LINE__,comm);
	sqlca.sqlcode=0;
	EXEC SQL PREPARE hv_chargemx_sel FROM :comm;
	EXEC SQL DECLARE sel_hv_chargemx CURSOR FOR hv_chargemx_sel;

	EXEC SQL OPEN sel_hv_chargemx;
	if (sqlca.sqlcode){
		sprintf(acErrMsg,"OPEN hv_chargemx error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D102" );
		return CM_SQLCODE;
	}

	return 0;
}

int Hv_chargemx_Fet_Sel ( struct hv_chargemx_c *hv_chargemx_c , char * reply )
{

	int   ret;

	EXEC SQL FETCH sel_hv_chargemx INTO :hv_chargemx_c;
	if (sqlca.sqlcode&&sqlca.sqlcode!=1403){
		sprintf(acErrMsg,"Fetch hv_chargemx error!!! %d",sqlca.sqlcode);
		WRITEMSG
		strcpy (reply,"D103");
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == 1403 ){
		sprintf(acErrMsg,"Fetch hv_chargemx finished!!! %d",sqlca.sqlcode);
		WRITEMSG
		strcpy (reply,"D104");
		return CM_SQLCODE;
	}
	zip_struct(hv_chargemx_c);

	return 0;
}

int Hv_chargemx_Clo_Sel (){
	EXEC SQL CLOSE sel_hv_chargemx;
	return 0;
}

/*****************************************************************************/
/****                              修改函数部分                           ****/
/*****************************************************************************/
int Hv_chargemx_Dec_Upd( reply , fmtstr , va_alist)
char    *reply;
char    *fmtstr;
va_dcl
{
	EXEC    SQL BEGIN   DECLARE SECTION;
		char    comm[1000];
	EXEC    SQL END     DECLARE SECTION;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	sprintf ( comm , "SELECT rowid,hv_chargemx.* FROM hv_chargemx WHERE  ");
	key_strcat(comm,wherelist);
	strcat(comm," FOR UPDATE WAIT 5 ");
	vtcp_log("%s,%d,SQLSTR=[%s]\n",__FILE__,__LINE__,comm);
	sqlca.sqlcode=0;
	EXEC SQL PREPARE hv_chargemx_upd FROM :comm;

	EXEC SQL DECLARE upd_hv_chargemx CURSOR FOR hv_chargemx_upd;

	EXEC SQL OPEN upd_hv_chargemx;
	if (sqlca.sqlcode){
		sprintf(acErrMsg,"open hv_chargemx error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D102" );
		return CM_SQLCODE;
	}

	return 0;
}

int Hv_chargemx_Fet_Upd( struct hv_chargemx_c *hv_chargemx_c , char * reply ){
	int   ret;

	EXEC SQL FETCH upd_hv_chargemx INTO :hv_chargemx_c;
	if ( sqlca.sqlcode && sqlca.sqlcode!=1403 ){
		sprintf(acErrMsg,"FETCH upd hv_chargemx error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D103" );
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == 1403 ){
		sprintf(acErrMsg,"FETCH hv_chargemx finished %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D104" );
		return CM_SQLCODE;
	}
	zip_struct(hv_chargemx_c);

	return 0;
}

int Hv_chargemx_Upd_Upd( struct hv_chargemx_c hv_chargemx_c , char * reply){
	int ret;

	EXEC SQL UPDATE hv_chargemx SET br_no=:hv_chargemx_c.br_no,
			in_date=:hv_chargemx_c.in_date,
			dtlid=:hv_chargemx_c.dtlid,
			chgtype=:hv_chargemx_c.chgtype,
			cmtno=:hv_chargemx_c.cmtno,
			srflag=:hv_chargemx_c.srflag,
			addid=:hv_chargemx_c.addid,
			sdate=:hv_chargemx_c.sdate,
			edate=:hv_chargemx_c.edate,
			lowlimit=:hv_chargemx_c.lowlimit,
			upplimit=:hv_chargemx_c.upplimit,
			mnum=:hv_chargemx_c.mnum,
			price=:hv_chargemx_c.price,
			brate=:hv_chargemx_c.brate,
			pecrate=:hv_chargemx_c.pecrate,
			txamt=:hv_chargemx_c.txamt,
			prtflag=:hv_chargemx_c.prtflag
	WHERE rowid=:hv_chargemx_c.rowid;
	if ( sqlca.sqlcode && sqlca.sqlcode != 1403 ){
		sprintf(acErrMsg,"UPDATE hv_chargemx error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D105" );
		return CM_SQLCODE;
	}

	return 0;
}


int Hv_chargemx_Del_Upd(struct hv_chargemx_c hv_chargemx_c , char * reply  ){

	EXEC SQL DELETE FROM hv_chargemx WHERE rowid=:hv_chargemx_c.rowid;
	if ( sqlca.sqlcode ){
		sprintf(acErrMsg,"DELETE hv_chargemx error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D105" );
		return CM_SQLCODE;
	}

	return 0;
}

int Hv_chargemx_Clo_Upd( ){
	EXEC SQL CLOSE upd_hv_chargemx;
	return 0;
}

/*****************************************************************************/
/****                              增加函数部分                           ****/
/*****************************************************************************/
int Hv_chargemx_Ins( struct hv_chargemx_c hv_chargemx_c , char * reply ){
	int ret;

	EXEC SQL INSERT INTO hv_chargemx VALUES (:hv_chargemx_c.br_no,
			:hv_chargemx_c.in_date,
			:hv_chargemx_c.dtlid,
			:hv_chargemx_c.chgtype,
			:hv_chargemx_c.cmtno,
			:hv_chargemx_c.srflag,
			:hv_chargemx_c.addid,
			:hv_chargemx_c.sdate,
			:hv_chargemx_c.edate,
			:hv_chargemx_c.lowlimit,
			:hv_chargemx_c.upplimit,
			:hv_chargemx_c.mnum,
			:hv_chargemx_c.price,
			:hv_chargemx_c.brate,
			:hv_chargemx_c.pecrate,
			:hv_chargemx_c.txamt,
			:hv_chargemx_c.prtflag);
	if ( sqlca.sqlcode && sqlca.sqlcode != -1 )
	{
		sprintf(acErrMsg,"INSERT hv_chargemx error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D107" );
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == -1 )
	{
		sprintf(acErrMsg,"INSERT hv_chargemx error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D108" );
		return CM_SQLCODE;
	}

	return 0;
}
