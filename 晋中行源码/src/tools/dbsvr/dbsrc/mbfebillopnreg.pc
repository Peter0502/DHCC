#include<stdio.h>
#include<varargs.h>

#define EXTERN
#include"global.h"


EXEC SQL INCLUDE SQLCA;
#include"mbfebillopnreg_c.h"
#define CM_SQLCODE sqlca.sqlcode==1403?100:(sqlca.sqlcode==-1?-239:sqlca.sqlcode)

int mbfebillopnreg_con ( struct mbfebillopnreg_c , char *);
int put_mystery( char *, char * );
char *zip_tail(char *s);
static void zip_struct(struct mbfebillopnreg_c* ps){
	zip_tail(ps->rowid);
	zip_tail(ps->pact_no);
	zip_tail(ps->tx_br_no);
	zip_tail(ps->billtype);
	zip_tail(ps->payeracc);
	zip_tail(ps->payername);
	zip_tail(ps->payeraddr);
	zip_tail(ps->recipientacc);
	zip_tail(ps->recipientname);
	zip_tail(ps->cashbillbkno);
	zip_tail(ps->brf);
	zip_tail(ps->rec_tel);
	zip_tail(ps->billcode);
	zip_tail(ps->billofxchngseal);
	zip_tail(ps->sign_tel);
	zip_tail(ps->payeropenaccbkcode);
	zip_tail(ps->cancel_tel);
	zip_tail(ps->recipientopenaccbk);
	zip_tail(ps->lastbillholderacc);
	zip_tail(ps->lastbillholdername);
	zip_tail(ps->los_rpt_tel);
	zip_tail(ps->los_rpt_bookno);
	zip_tail(ps->clos_rpt_tel);
	zip_tail(ps->incomeacno);
	zip_tail(ps->incometime);
	zip_tail(ps->incometel);
	zip_tail(ps->billsts);
	zip_tail(ps->useind);
	zip_tail(ps->los_rpt_ind);
}
int Mbfebillopnreg_Debug(struct mbfebillopnreg_c *ps){
	vtcp_log("mbfebillopnreg_c.rowid=[%s]\n",ps->rowid);
	vtcp_log("mbfebillopnreg_c.pact_no=[%s]\n",ps->pact_no);
	vtcp_log("mbfebillopnreg_c.tx_br_no=[%s]\n",ps->tx_br_no);
	vtcp_log("mbfebillopnreg_c.tx_date=[%ld]\n",ps->tx_date);
	vtcp_log("mbfebillopnreg_c.billtype=[%s]\n",ps->billtype);
	vtcp_log("mbfebillopnreg_c.payeracc=[%s]\n",ps->payeracc);
	vtcp_log("mbfebillopnreg_c.payername=[%s]\n",ps->payername);
	vtcp_log("mbfebillopnreg_c.payeraddr=[%s]\n",ps->payeraddr);
	vtcp_log("mbfebillopnreg_c.recipientacc=[%s]\n",ps->recipientacc);
	vtcp_log("mbfebillopnreg_c.recipientname=[%s]\n",ps->recipientname);
	vtcp_log("mbfebillopnreg_c.amount=[%f]\n",ps->amount);
	vtcp_log("mbfebillopnreg_c.cashbillbkno=[%s]\n",ps->cashbillbkno);
	vtcp_log("mbfebillopnreg_c.brf=[%s]\n",ps->brf);
	vtcp_log("mbfebillopnreg_c.rec_trace_no=[%ld]\n",ps->rec_trace_no);
	vtcp_log("mbfebillopnreg_c.rec_tel=[%s]\n",ps->rec_tel);
	vtcp_log("mbfebillopnreg_c.billcode=[%s]\n",ps->billcode);
	vtcp_log("mbfebillopnreg_c.billofxchngseal=[%s]\n",ps->billofxchngseal);
	vtcp_log("mbfebillopnreg_c.signdate=[%ld]\n",ps->signdate);
	vtcp_log("mbfebillopnreg_c.sign_trace_no=[%ld]\n",ps->sign_trace_no);
	vtcp_log("mbfebillopnreg_c.sign_tel=[%s]\n",ps->sign_tel);
	vtcp_log("mbfebillopnreg_c.payeropenaccbkcode=[%s]\n",ps->payeropenaccbkcode);
	vtcp_log("mbfebillopnreg_c.printno=[%ld]\n",ps->printno);
	vtcp_log("mbfebillopnreg_c.dep_trace_no=[%ld]\n",ps->dep_trace_no);
	vtcp_log("mbfebillopnreg_c.consigndate=[%ld]\n",ps->consigndate);
	vtcp_log("mbfebillopnreg_c.canceldate=[%ld]\n",ps->canceldate);
	vtcp_log("mbfebillopnreg_c.cancelflowno=[%ld]\n",ps->cancelflowno);
	vtcp_log("mbfebillopnreg_c.cancel_tel=[%s]\n",ps->cancel_tel);
	vtcp_log("mbfebillopnreg_c.prmptpaydate=[%ld]\n",ps->prmptpaydate);
	vtcp_log("mbfebillopnreg_c.repudiationamnt=[%f]\n",ps->repudiationamnt);
	vtcp_log("mbfebillopnreg_c.redundantamnt=[%f]\n",ps->redundantamnt);
	vtcp_log("mbfebillopnreg_c.recipientopenaccbk=[%s]\n",ps->recipientopenaccbk);
	vtcp_log("mbfebillopnreg_c.lastbillholderacc=[%s]\n",ps->lastbillholderacc);
	vtcp_log("mbfebillopnreg_c.lastbillholdername=[%s]\n",ps->lastbillholdername);
	vtcp_log("mbfebillopnreg_c.los_rpt_date=[%ld]\n",ps->los_rpt_date);
	vtcp_log("mbfebillopnreg_c.los_rpt_tel=[%s]\n",ps->los_rpt_tel);
	vtcp_log("mbfebillopnreg_c.los_rpt_bookno=[%s]\n",ps->los_rpt_bookno);
	vtcp_log("mbfebillopnreg_c.clos_rpt_date=[%ld]\n",ps->clos_rpt_date);
	vtcp_log("mbfebillopnreg_c.clos_rpt_tel=[%s]\n",ps->clos_rpt_tel);
	vtcp_log("mbfebillopnreg_c.incomeacno=[%s]\n",ps->incomeacno);
	vtcp_log("mbfebillopnreg_c.incometime=[%s]\n",ps->incometime);
	vtcp_log("mbfebillopnreg_c.incomeflowno=[%ld]\n",ps->incomeflowno);
	vtcp_log("mbfebillopnreg_c.incometel=[%s]\n",ps->incometel);
	vtcp_log("mbfebillopnreg_c.billsts=[%s]\n",ps->billsts);
	vtcp_log("mbfebillopnreg_c.useind=[%s]\n",ps->useind);
	vtcp_log("mbfebillopnreg_c.los_rpt_ind=[%s]\n",ps->los_rpt_ind);
	return(0);
}
/*****************************************************************************/
/****                              查询函数部分[]                       ****/
/*****************************************************************************/
int Mbfebillopnreg_Sel(reply,mbfebillopnreg_c,fmtstr,va_alist)
char    *reply;
struct  mbfebillopnreg_c *mbfebillopnreg_c;
char    *fmtstr;
va_dcl
{
	int   ret;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	ret = Mbfebillopnreg_Dec_Sel( reply , "%s" , wherelist );
	if (ret){
		WRITEMSG
		return ret;
	}
	ret = Mbfebillopnreg_Fet_Sel( mbfebillopnreg_c , reply );
	if (ret){
		WRITEMSG
		return ret;
	}

	Mbfebillopnreg_Clo_Sel();

	return 0;
}



char *key_strcat(char *,char *);
int Mbfebillopnreg_Dec_Sel ( reply , fmtstr , va_alist )
char    *reply;
char    *fmtstr;
va_dcl
{
	EXEC    SQL BEGIN   DECLARE SECTION;
		char    comm[1000];
	EXEC    SQL END     DECLARE SECTION;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	sprintf ( comm ," SELECT rowid,mbfebillopnreg.* FROM mbfebillopnreg WHERE  ");
	key_strcat(comm,wherelist);

	vtcp_log("%s,%d,SQLSTR=[%s]\n",__FILE__,__LINE__,comm);
	sqlca.sqlcode=0;
	EXEC SQL PREPARE mbfebillopnreg_sel FROM :comm;
	EXEC SQL DECLARE sel_mbfebillopnreg CURSOR FOR mbfebillopnreg_sel;

	EXEC SQL OPEN sel_mbfebillopnreg;
	if (sqlca.sqlcode){
		sprintf(acErrMsg,"OPEN mbfebillopnreg error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D102" );
		return CM_SQLCODE;
	}

	return 0;
}

int Mbfebillopnreg_Fet_Sel ( struct mbfebillopnreg_c *mbfebillopnreg_c , char * reply )
{

	int   ret;

	EXEC SQL FETCH sel_mbfebillopnreg INTO :mbfebillopnreg_c;
	if (sqlca.sqlcode&&sqlca.sqlcode!=1403){
		sprintf(acErrMsg,"Fetch mbfebillopnreg error!!! %d",sqlca.sqlcode);
		WRITEMSG
		strcpy (reply,"D103");
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == 1403 ){
		sprintf(acErrMsg,"Fetch mbfebillopnreg finished!!! %d",sqlca.sqlcode);
		WRITEMSG
		strcpy (reply,"D104");
		return CM_SQLCODE;
	}
	zip_struct(mbfebillopnreg_c);

	return 0;
}

int Mbfebillopnreg_Clo_Sel (){
	EXEC SQL CLOSE sel_mbfebillopnreg;
	return 0;
}

/*****************************************************************************/
/****                              修改函数部分                           ****/
/*****************************************************************************/
int Mbfebillopnreg_Dec_Upd( reply , fmtstr , va_alist)
char    *reply;
char    *fmtstr;
va_dcl
{
	EXEC    SQL BEGIN   DECLARE SECTION;
		char    comm[1000];
	EXEC    SQL END     DECLARE SECTION;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	sprintf ( comm , "SELECT rowid,mbfebillopnreg.* FROM mbfebillopnreg WHERE  ");
	key_strcat(comm,wherelist);
	strcat(comm," FOR UPDATE WAIT 5 ");
	vtcp_log("%s,%d,SQLSTR=[%s]\n",__FILE__,__LINE__,comm);
	sqlca.sqlcode=0;
	EXEC SQL PREPARE mbfebillopnreg_upd FROM :comm;

	EXEC SQL DECLARE upd_mbfebillopnreg CURSOR FOR mbfebillopnreg_upd;

	EXEC SQL OPEN upd_mbfebillopnreg;
	if (sqlca.sqlcode){
		sprintf(acErrMsg,"open mbfebillopnreg error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D102" );
		return CM_SQLCODE;
	}

	return 0;
}

int Mbfebillopnreg_Fet_Upd( struct mbfebillopnreg_c *mbfebillopnreg_c , char * reply ){
	int   ret;

	EXEC SQL FETCH upd_mbfebillopnreg INTO :mbfebillopnreg_c;
	if ( sqlca.sqlcode && sqlca.sqlcode!=1403 ){
		sprintf(acErrMsg,"FETCH upd mbfebillopnreg error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D103" );
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == 1403 ){
		sprintf(acErrMsg,"FETCH mbfebillopnreg finished %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D104" );
		return CM_SQLCODE;
	}
	zip_struct(mbfebillopnreg_c);

	return 0;
}

int Mbfebillopnreg_Upd_Upd( struct mbfebillopnreg_c mbfebillopnreg_c , char * reply){
	int ret;

	EXEC SQL UPDATE mbfebillopnreg SET pact_no=:mbfebillopnreg_c.pact_no,
			tx_br_no=:mbfebillopnreg_c.tx_br_no,
			tx_date=:mbfebillopnreg_c.tx_date,
			billtype=:mbfebillopnreg_c.billtype,
			payeracc=:mbfebillopnreg_c.payeracc,
			payername=:mbfebillopnreg_c.payername,
			payeraddr=:mbfebillopnreg_c.payeraddr,
			recipientacc=:mbfebillopnreg_c.recipientacc,
			recipientname=:mbfebillopnreg_c.recipientname,
			amount=:mbfebillopnreg_c.amount,
			cashbillbkno=:mbfebillopnreg_c.cashbillbkno,
			brf=:mbfebillopnreg_c.brf,
			rec_trace_no=:mbfebillopnreg_c.rec_trace_no,
			rec_tel=:mbfebillopnreg_c.rec_tel,
			billcode=:mbfebillopnreg_c.billcode,
			billofxchngseal=:mbfebillopnreg_c.billofxchngseal,
			signdate=:mbfebillopnreg_c.signdate,
			sign_trace_no=:mbfebillopnreg_c.sign_trace_no,
			sign_tel=:mbfebillopnreg_c.sign_tel,
			payeropenaccbkcode=:mbfebillopnreg_c.payeropenaccbkcode,
			printno=:mbfebillopnreg_c.printno,
			dep_trace_no=:mbfebillopnreg_c.dep_trace_no,
			consigndate=:mbfebillopnreg_c.consigndate,
			canceldate=:mbfebillopnreg_c.canceldate,
			cancelflowno=:mbfebillopnreg_c.cancelflowno,
			cancel_tel=:mbfebillopnreg_c.cancel_tel,
			prmptpaydate=:mbfebillopnreg_c.prmptpaydate,
			repudiationamnt=:mbfebillopnreg_c.repudiationamnt,
			redundantamnt=:mbfebillopnreg_c.redundantamnt,
			recipientopenaccbk=:mbfebillopnreg_c.recipientopenaccbk,
			lastbillholderacc=:mbfebillopnreg_c.lastbillholderacc,
			lastbillholdername=:mbfebillopnreg_c.lastbillholdername,
			los_rpt_date=:mbfebillopnreg_c.los_rpt_date,
			los_rpt_tel=:mbfebillopnreg_c.los_rpt_tel,
			los_rpt_bookno=:mbfebillopnreg_c.los_rpt_bookno,
			clos_rpt_date=:mbfebillopnreg_c.clos_rpt_date,
			clos_rpt_tel=:mbfebillopnreg_c.clos_rpt_tel,
			incomeacno=:mbfebillopnreg_c.incomeacno,
			incometime=:mbfebillopnreg_c.incometime,
			incomeflowno=:mbfebillopnreg_c.incomeflowno,
			incometel=:mbfebillopnreg_c.incometel,
			billsts=:mbfebillopnreg_c.billsts,
			useind=:mbfebillopnreg_c.useind,
			los_rpt_ind=:mbfebillopnreg_c.los_rpt_ind
	WHERE rowid=:mbfebillopnreg_c.rowid;
	if ( sqlca.sqlcode && sqlca.sqlcode != 1403 ){
		sprintf(acErrMsg,"UPDATE mbfebillopnreg error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D105" );
		return CM_SQLCODE;
	}

	return 0;
}


int Mbfebillopnreg_Del_Upd(struct mbfebillopnreg_c mbfebillopnreg_c , char * reply  ){

	EXEC SQL DELETE FROM mbfebillopnreg WHERE rowid=:mbfebillopnreg_c.rowid;
	if ( sqlca.sqlcode ){
		sprintf(acErrMsg,"DELETE mbfebillopnreg error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D105" );
		return CM_SQLCODE;
	}

	return 0;
}

int Mbfebillopnreg_Clo_Upd( ){
	EXEC SQL CLOSE upd_mbfebillopnreg;
	return 0;
}

/*****************************************************************************/
/****                              增加函数部分                           ****/
/*****************************************************************************/
int Mbfebillopnreg_Ins( struct mbfebillopnreg_c mbfebillopnreg_c , char * reply ){
	int ret;

	EXEC SQL INSERT INTO mbfebillopnreg VALUES (:mbfebillopnreg_c.pact_no,
			:mbfebillopnreg_c.tx_br_no,
			:mbfebillopnreg_c.tx_date,
			:mbfebillopnreg_c.billtype,
			:mbfebillopnreg_c.payeracc,
			:mbfebillopnreg_c.payername,
			:mbfebillopnreg_c.payeraddr,
			:mbfebillopnreg_c.recipientacc,
			:mbfebillopnreg_c.recipientname,
			:mbfebillopnreg_c.amount,
			:mbfebillopnreg_c.cashbillbkno,
			:mbfebillopnreg_c.brf,
			:mbfebillopnreg_c.rec_trace_no,
			:mbfebillopnreg_c.rec_tel,
			:mbfebillopnreg_c.billcode,
			:mbfebillopnreg_c.billofxchngseal,
			:mbfebillopnreg_c.signdate,
			:mbfebillopnreg_c.sign_trace_no,
			:mbfebillopnreg_c.sign_tel,
			:mbfebillopnreg_c.payeropenaccbkcode,
			:mbfebillopnreg_c.printno,
			:mbfebillopnreg_c.dep_trace_no,
			:mbfebillopnreg_c.consigndate,
			:mbfebillopnreg_c.canceldate,
			:mbfebillopnreg_c.cancelflowno,
			:mbfebillopnreg_c.cancel_tel,
			:mbfebillopnreg_c.prmptpaydate,
			:mbfebillopnreg_c.repudiationamnt,
			:mbfebillopnreg_c.redundantamnt,
			:mbfebillopnreg_c.recipientopenaccbk,
			:mbfebillopnreg_c.lastbillholderacc,
			:mbfebillopnreg_c.lastbillholdername,
			:mbfebillopnreg_c.los_rpt_date,
			:mbfebillopnreg_c.los_rpt_tel,
			:mbfebillopnreg_c.los_rpt_bookno,
			:mbfebillopnreg_c.clos_rpt_date,
			:mbfebillopnreg_c.clos_rpt_tel,
			:mbfebillopnreg_c.incomeacno,
			:mbfebillopnreg_c.incometime,
			:mbfebillopnreg_c.incomeflowno,
			:mbfebillopnreg_c.incometel,
			:mbfebillopnreg_c.billsts,
			:mbfebillopnreg_c.useind,
			:mbfebillopnreg_c.los_rpt_ind);
	if ( sqlca.sqlcode && sqlca.sqlcode != -1 )
	{
		sprintf(acErrMsg,"INSERT mbfebillopnreg error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D107" );
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == -1 )
	{
		sprintf(acErrMsg,"INSERT mbfebillopnreg error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D108" );
		return CM_SQLCODE;
	}

	return 0;
}
