#include<stdio.h>
#include<varargs.h>

#define EXTERN
#include"global.h"


EXEC SQL INCLUDE SQLCA;
#include"mbfeserialno_c.h"
#define CM_SQLCODE sqlca.sqlcode==1403?100:(sqlca.sqlcode==-1?-239:sqlca.sqlcode)

int mbfeserialno_con ( struct mbfeserialno_c , char *);
int put_mystery( char *, char * );
char *zip_tail(char *s);
static void zip_struct(struct mbfeserialno_c* ps){
	zip_tail(ps->rowid);
	zip_tail(ps->serialnocode);
	zip_tail(ps->serialnoname);
}
int Mbfeserialno_Debug(struct mbfeserialno_c *ps){
	vtcp_log("mbfeserialno_c.rowid=[%s]\n",ps->rowid);
	vtcp_log("mbfeserialno_c.serialnocode=[%s]\n",ps->serialnocode);
	vtcp_log("mbfeserialno_c.serialnoname=[%s]\n",ps->serialnoname);
	vtcp_log("mbfeserialno_c.serialnoval=[%ld]\n",ps->serialnoval);
	vtcp_log("mbfeserialno_c.serialnolen=[%ld]\n",ps->serialnolen);
	return(0);
}
/*****************************************************************************/
/****                              查询函数部分[]                       ****/
/*****************************************************************************/
int Mbfeserialno_Sel(reply,mbfeserialno_c,fmtstr,va_alist)
char    *reply;
struct  mbfeserialno_c *mbfeserialno_c;
char    *fmtstr;
va_dcl
{
	int   ret;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	ret = Mbfeserialno_Dec_Sel( reply , "%s" , wherelist );
	if (ret){
		WRITEMSG
		return ret;
	}
	ret = Mbfeserialno_Fet_Sel( mbfeserialno_c , reply );
	if (ret){
		WRITEMSG
		return ret;
	}

	Mbfeserialno_Clo_Sel();

	return 0;
}



char *key_strcat(char *,char *);
int Mbfeserialno_Dec_Sel ( reply , fmtstr , va_alist )
char    *reply;
char    *fmtstr;
va_dcl
{
	EXEC    SQL BEGIN   DECLARE SECTION;
		char    comm[1000];
	EXEC    SQL END     DECLARE SECTION;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	sprintf ( comm ," SELECT rowid,mbfeserialno.* FROM mbfeserialno WHERE  ");
	key_strcat(comm,wherelist);

	vtcp_log("%s,%d,SQLSTR=[%s]\n",__FILE__,__LINE__,comm);
	sqlca.sqlcode=0;
	EXEC SQL PREPARE mbfeserialno_sel FROM :comm;
	EXEC SQL DECLARE sel_mbfeserialno CURSOR FOR mbfeserialno_sel;

	EXEC SQL OPEN sel_mbfeserialno;
	if (sqlca.sqlcode){
		sprintf(acErrMsg,"OPEN mbfeserialno error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D102" );
		return CM_SQLCODE;
	}

	return 0;
}

int Mbfeserialno_Fet_Sel ( struct mbfeserialno_c *mbfeserialno_c , char * reply )
{

	int   ret;

	EXEC SQL FETCH sel_mbfeserialno INTO :mbfeserialno_c;
	if (sqlca.sqlcode&&sqlca.sqlcode!=1403){
		sprintf(acErrMsg,"Fetch mbfeserialno error!!! %d",sqlca.sqlcode);
		WRITEMSG
		strcpy (reply,"D103");
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == 1403 ){
		sprintf(acErrMsg,"Fetch mbfeserialno finished!!! %d",sqlca.sqlcode);
		WRITEMSG
		strcpy (reply,"D104");
		return CM_SQLCODE;
	}
	zip_struct(mbfeserialno_c);

	return 0;
}

int Mbfeserialno_Clo_Sel (){
	EXEC SQL CLOSE sel_mbfeserialno;
	return 0;
}

/*****************************************************************************/
/****                              修改函数部分                           ****/
/*****************************************************************************/
int Mbfeserialno_Dec_Upd( reply , fmtstr , va_alist)
char    *reply;
char    *fmtstr;
va_dcl
{
	EXEC    SQL BEGIN   DECLARE SECTION;
		char    comm[1000];
	EXEC    SQL END     DECLARE SECTION;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	sprintf ( comm , "SELECT rowid,mbfeserialno.* FROM mbfeserialno WHERE  ");
	key_strcat(comm,wherelist);
	strcat(comm," FOR UPDATE WAIT 5 ");
	vtcp_log("%s,%d,SQLSTR=[%s]\n",__FILE__,__LINE__,comm);
	sqlca.sqlcode=0;
	EXEC SQL PREPARE mbfeserialno_upd FROM :comm;

	EXEC SQL DECLARE upd_mbfeserialno CURSOR FOR mbfeserialno_upd;

	EXEC SQL OPEN upd_mbfeserialno;
	if (sqlca.sqlcode){
		sprintf(acErrMsg,"open mbfeserialno error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D102" );
		return CM_SQLCODE;
	}

	return 0;
}

int Mbfeserialno_Fet_Upd( struct mbfeserialno_c *mbfeserialno_c , char * reply ){
	int   ret;

	EXEC SQL FETCH upd_mbfeserialno INTO :mbfeserialno_c;
	if ( sqlca.sqlcode && sqlca.sqlcode!=1403 ){
		sprintf(acErrMsg,"FETCH upd mbfeserialno error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D103" );
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == 1403 ){
		sprintf(acErrMsg,"FETCH mbfeserialno finished %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D104" );
		return CM_SQLCODE;
	}
	zip_struct(mbfeserialno_c);

	return 0;
}

int Mbfeserialno_Upd_Upd( struct mbfeserialno_c mbfeserialno_c , char * reply){
	int ret;

	EXEC SQL UPDATE mbfeserialno SET serialnocode=:mbfeserialno_c.serialnocode,
			serialnoname=:mbfeserialno_c.serialnoname,
			serialnoval=:mbfeserialno_c.serialnoval,
			serialnolen=:mbfeserialno_c.serialnolen
	WHERE rowid=:mbfeserialno_c.rowid;
	if ( sqlca.sqlcode && sqlca.sqlcode != 1403 ){
		sprintf(acErrMsg,"UPDATE mbfeserialno error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D105" );
		return CM_SQLCODE;
	}

	return 0;
}


int Mbfeserialno_Del_Upd(struct mbfeserialno_c mbfeserialno_c , char * reply  ){

	EXEC SQL DELETE FROM mbfeserialno WHERE rowid=:mbfeserialno_c.rowid;
	if ( sqlca.sqlcode ){
		sprintf(acErrMsg,"DELETE mbfeserialno error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D105" );
		return CM_SQLCODE;
	}

	return 0;
}

int Mbfeserialno_Clo_Upd( ){
	EXEC SQL CLOSE upd_mbfeserialno;
	return 0;
}

/*****************************************************************************/
/****                              增加函数部分                           ****/
/*****************************************************************************/
int Mbfeserialno_Ins( struct mbfeserialno_c mbfeserialno_c , char * reply ){
	int ret;

	EXEC SQL INSERT INTO mbfeserialno VALUES (:mbfeserialno_c.serialnocode,
			:mbfeserialno_c.serialnoname,
			:mbfeserialno_c.serialnoval,
			:mbfeserialno_c.serialnolen);
	if ( sqlca.sqlcode && sqlca.sqlcode != -1 )
	{
		sprintf(acErrMsg,"INSERT mbfeserialno error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D107" );
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == -1 )
	{
		sprintf(acErrMsg,"INSERT mbfeserialno error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D108" );
		return CM_SQLCODE;
	}

	return 0;
}
