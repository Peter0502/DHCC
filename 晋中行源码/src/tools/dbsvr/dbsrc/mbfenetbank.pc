#include<stdio.h>
#include<varargs.h>

#define EXTERN
#include"global.h"


EXEC SQL INCLUDE SQLCA;
#include"mbfenetbank_c.h"
#define CM_SQLCODE sqlca.sqlcode==1403?100:(sqlca.sqlcode==-1?-239:sqlca.sqlcode)

int mbfenetbank_con ( struct mbfenetbank_c , char *);
int put_mystery( char *, char * );
char *zip_tail(char *s);
static void zip_struct(struct mbfenetbank_c* ps){
	zip_tail(ps->rowid);
	zip_tail(ps->nbkcode);
	zip_tail(ps->sabkcode);
	zip_tail(ps->bnkcity);
	zip_tail(ps->nbkname);
	zip_tail(ps->nbksname);
	zip_tail(ps->nbkaddrss);
	zip_tail(ps->cnttel);
	zip_tail(ps->cntper);
	zip_tail(ps->postcode);
	zip_tail(ps->nbkstate);
	zip_tail(ps->bkemail);
	zip_tail(ps->content);
}
int Mbfenetbank_Debug(struct mbfenetbank_c *ps){
	vtcp_log("mbfenetbank_c.rowid=[%s]\n",ps->rowid);
	vtcp_log("mbfenetbank_c.nbkcode=[%s]\n",ps->nbkcode);
	vtcp_log("mbfenetbank_c.sabkcode=[%s]\n",ps->sabkcode);
	vtcp_log("mbfenetbank_c.bnkcity=[%s]\n",ps->bnkcity);
	vtcp_log("mbfenetbank_c.nbkname=[%s]\n",ps->nbkname);
	vtcp_log("mbfenetbank_c.nbksname=[%s]\n",ps->nbksname);
	vtcp_log("mbfenetbank_c.nbkaddrss=[%s]\n",ps->nbkaddrss);
	vtcp_log("mbfenetbank_c.cnttel=[%s]\n",ps->cnttel);
	vtcp_log("mbfenetbank_c.cntper=[%s]\n",ps->cntper);
	vtcp_log("mbfenetbank_c.postcode=[%s]\n",ps->postcode);
	vtcp_log("mbfenetbank_c.nbkstate=[%s]\n",ps->nbkstate);
	vtcp_log("mbfenetbank_c.bkemail=[%s]\n",ps->bkemail);
	vtcp_log("mbfenetbank_c.content=[%s]\n",ps->content);
	return(0);
}
/*****************************************************************************/
/****                              查询函数部分[]                       ****/
/*****************************************************************************/
int Mbfenetbank_Sel(reply,mbfenetbank_c,fmtstr,va_alist)
char    *reply;
struct  mbfenetbank_c *mbfenetbank_c;
char    *fmtstr;
va_dcl
{
	int   ret;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	ret = Mbfenetbank_Dec_Sel( reply , "%s" , wherelist );
	if (ret){
		WRITEMSG
		return ret;
	}
	ret = Mbfenetbank_Fet_Sel( mbfenetbank_c , reply );
	if (ret){
		WRITEMSG
		return ret;
	}

	Mbfenetbank_Clo_Sel();

	return 0;
}



char *key_strcat(char *,char *);
int Mbfenetbank_Dec_Sel ( reply , fmtstr , va_alist )
char    *reply;
char    *fmtstr;
va_dcl
{
	EXEC    SQL BEGIN   DECLARE SECTION;
		char    comm[1000];
	EXEC    SQL END     DECLARE SECTION;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	sprintf ( comm ," SELECT rowid,mbfenetbank.* FROM mbfenetbank WHERE  ");
	key_strcat(comm,wherelist);

	vtcp_log("%s,%d,SQLSTR=[%s]\n",__FILE__,__LINE__,comm);
	sqlca.sqlcode=0;
	EXEC SQL PREPARE mbfenetbank_sel FROM :comm;
	EXEC SQL DECLARE sel_mbfenetbank CURSOR FOR mbfenetbank_sel;

	EXEC SQL OPEN sel_mbfenetbank;
	if (sqlca.sqlcode){
		sprintf(acErrMsg,"OPEN mbfenetbank error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D102" );
		return CM_SQLCODE;
	}

	return 0;
}

int Mbfenetbank_Fet_Sel ( struct mbfenetbank_c *mbfenetbank_c , char * reply )
{

	int   ret;

	EXEC SQL FETCH sel_mbfenetbank INTO :mbfenetbank_c;
	if (sqlca.sqlcode&&sqlca.sqlcode!=1403){
		sprintf(acErrMsg,"Fetch mbfenetbank error!!! %d",sqlca.sqlcode);
		WRITEMSG
		strcpy (reply,"D103");
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == 1403 ){
		sprintf(acErrMsg,"Fetch mbfenetbank finished!!! %d",sqlca.sqlcode);
		WRITEMSG
		strcpy (reply,"D104");
		return CM_SQLCODE;
	}
	zip_struct(mbfenetbank_c);

	return 0;
}

int Mbfenetbank_Clo_Sel (){
	EXEC SQL CLOSE sel_mbfenetbank;
	return 0;
}

/*****************************************************************************/
/****                              修改函数部分                           ****/
/*****************************************************************************/
int Mbfenetbank_Dec_Upd( reply , fmtstr , va_alist)
char    *reply;
char    *fmtstr;
va_dcl
{
	EXEC    SQL BEGIN   DECLARE SECTION;
		char    comm[1000];
	EXEC    SQL END     DECLARE SECTION;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	sprintf ( comm , "SELECT rowid,mbfenetbank.* FROM mbfenetbank WHERE  ");
	key_strcat(comm,wherelist);
	strcat(comm," FOR UPDATE WAIT 5 ");
	vtcp_log("%s,%d,SQLSTR=[%s]\n",__FILE__,__LINE__,comm);
	sqlca.sqlcode=0;
	EXEC SQL PREPARE mbfenetbank_upd FROM :comm;

	EXEC SQL DECLARE upd_mbfenetbank CURSOR FOR mbfenetbank_upd;

	EXEC SQL OPEN upd_mbfenetbank;
	if (sqlca.sqlcode){
		sprintf(acErrMsg,"open mbfenetbank error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D102" );
		return CM_SQLCODE;
	}

	return 0;
}

int Mbfenetbank_Fet_Upd( struct mbfenetbank_c *mbfenetbank_c , char * reply ){
	int   ret;

	EXEC SQL FETCH upd_mbfenetbank INTO :mbfenetbank_c;
	if ( sqlca.sqlcode && sqlca.sqlcode!=1403 ){
		sprintf(acErrMsg,"FETCH upd mbfenetbank error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D103" );
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == 1403 ){
		sprintf(acErrMsg,"FETCH mbfenetbank finished %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D104" );
		return CM_SQLCODE;
	}
	zip_struct(mbfenetbank_c);

	return 0;
}

int Mbfenetbank_Upd_Upd( struct mbfenetbank_c mbfenetbank_c , char * reply){
	int ret;

	EXEC SQL UPDATE mbfenetbank SET nbkcode=:mbfenetbank_c.nbkcode,
			sabkcode=:mbfenetbank_c.sabkcode,
			bnkcity=:mbfenetbank_c.bnkcity,
			nbkname=:mbfenetbank_c.nbkname,
			nbksname=:mbfenetbank_c.nbksname,
			nbkaddrss=:mbfenetbank_c.nbkaddrss,
			cnttel=:mbfenetbank_c.cnttel,
			cntper=:mbfenetbank_c.cntper,
			postcode=:mbfenetbank_c.postcode,
			nbkstate=:mbfenetbank_c.nbkstate,
			bkemail=:mbfenetbank_c.bkemail,
			content=:mbfenetbank_c.content
	WHERE rowid=:mbfenetbank_c.rowid;
	if ( sqlca.sqlcode && sqlca.sqlcode != 1403 ){
		sprintf(acErrMsg,"UPDATE mbfenetbank error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D105" );
		return CM_SQLCODE;
	}

	return 0;
}


int Mbfenetbank_Del_Upd(struct mbfenetbank_c mbfenetbank_c , char * reply  ){

	EXEC SQL DELETE FROM mbfenetbank WHERE rowid=:mbfenetbank_c.rowid;
	if ( sqlca.sqlcode ){
		sprintf(acErrMsg,"DELETE mbfenetbank error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D105" );
		return CM_SQLCODE;
	}

	return 0;
}

int Mbfenetbank_Clo_Upd( ){
	EXEC SQL CLOSE upd_mbfenetbank;
	return 0;
}

/*****************************************************************************/
/****                              增加函数部分                           ****/
/*****************************************************************************/
int Mbfenetbank_Ins( struct mbfenetbank_c mbfenetbank_c , char * reply ){
	int ret;

	EXEC SQL INSERT INTO mbfenetbank VALUES (:mbfenetbank_c.nbkcode,
			:mbfenetbank_c.sabkcode,
			:mbfenetbank_c.bnkcity,
			:mbfenetbank_c.nbkname,
			:mbfenetbank_c.nbksname,
			:mbfenetbank_c.nbkaddrss,
			:mbfenetbank_c.cnttel,
			:mbfenetbank_c.cntper,
			:mbfenetbank_c.postcode,
			:mbfenetbank_c.nbkstate,
			:mbfenetbank_c.bkemail,
			:mbfenetbank_c.content);
	if ( sqlca.sqlcode && sqlca.sqlcode != -1 )
	{
		sprintf(acErrMsg,"INSERT mbfenetbank error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D107" );
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == -1 )
	{
		sprintf(acErrMsg,"INSERT mbfenetbank error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D108" );
		return CM_SQLCODE;
	}

	return 0;
}
