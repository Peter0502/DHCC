#include<stdio.h>
#include<varargs.h>

#define EXTERN
#include"global.h"


EXEC SQL INCLUDE SQLCA;
#include"com_tel_c.h"
#define CM_SQLCODE sqlca.sqlcode==1403?100:(sqlca.sqlcode==-1?-239:sqlca.sqlcode)

int com_tel_con ( struct com_tel_c , char *);
int put_mystery( char *, char * );
char *zip_tail(char *s);
static void zip_struct(struct com_tel_c* ps){
	zip_tail(ps->rowid);
	zip_tail(ps->tel);
	zip_tail(ps->br_no);
	zip_tail(ps->name);
	zip_tail(ps->pwd);
	zip_tail(ps->lvl);
	zip_tail(ps->csts);
	zip_tail(ps->beg_menu);
	zip_tail(ps->chk_ind);
	zip_tail(ps->tx_type);
}
int Com_tel_Debug(struct com_tel_c *ps){
	vtcp_log("com_tel_c.rowid=[%s]\n",ps->rowid);
	vtcp_log("com_tel_c.tel=[%s]\n",ps->tel);
	vtcp_log("com_tel_c.br_no=[%s]\n",ps->br_no);
	vtcp_log("com_tel_c.name=[%s]\n",ps->name);
	vtcp_log("com_tel_c.pwd=[%s]\n",ps->pwd);
	vtcp_log("com_tel_c.lvl=[%s]\n",ps->lvl);
	vtcp_log("com_tel_c.csts=[%s]\n",ps->csts);
	vtcp_log("com_tel_c.pwd_date=[%ld]\n",ps->pwd_date);
	vtcp_log("com_tel_c.beg_menu=[%s]\n",ps->beg_menu);
	vtcp_log("com_tel_c.chk_ind=[%s]\n",ps->chk_ind);
	vtcp_log("com_tel_c.tx_type=[%s]\n",ps->tx_type);
	return(0);
}
/*****************************************************************************/
/****                              查询函数部分[]                       ****/
/*****************************************************************************/
int Com_tel_Sel(reply,com_tel_c,fmtstr,va_alist)
char    *reply;
struct  com_tel_c *com_tel_c;
char    *fmtstr;
va_dcl
{
	int   ret;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	ret = Com_tel_Dec_Sel( reply , "%s" , wherelist );
	if (ret){
		WRITEMSG
		return ret;
	}
	ret = Com_tel_Fet_Sel( com_tel_c , reply );
	if (ret){
		WRITEMSG
		return ret;
	}

	Com_tel_Clo_Sel();

	return 0;
}



char *key_strcat(char *,char *);
int Com_tel_Dec_Sel ( reply , fmtstr , va_alist )
char    *reply;
char    *fmtstr;
va_dcl
{
	EXEC    SQL BEGIN   DECLARE SECTION;
		char    comm[1000];
	EXEC    SQL END     DECLARE SECTION;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	sprintf ( comm ," SELECT rowid,com_tel.* FROM com_tel WHERE  ");
	key_strcat(comm,wherelist);

	vtcp_log("%s,%d,SQLSTR=[%s]\n",__FILE__,__LINE__,comm);
	sqlca.sqlcode=0;
	EXEC SQL PREPARE com_tel_sel FROM :comm;
	EXEC SQL DECLARE sel_com_tel CURSOR FOR com_tel_sel;

	EXEC SQL OPEN sel_com_tel;
	if (sqlca.sqlcode){
		sprintf(acErrMsg,"OPEN com_tel error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D102" );
		return CM_SQLCODE;
	}

	return 0;
}

int Com_tel_Fet_Sel ( struct com_tel_c *com_tel_c , char * reply )
{

	int   ret;

	EXEC SQL FETCH sel_com_tel INTO :com_tel_c;
	if (sqlca.sqlcode&&sqlca.sqlcode!=1403){
		sprintf(acErrMsg,"Fetch com_tel error!!! %d",sqlca.sqlcode);
		WRITEMSG
		strcpy (reply,"D103");
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == 1403 ){
		sprintf(acErrMsg,"Fetch com_tel finished!!! %d",sqlca.sqlcode);
		WRITEMSG
		strcpy (reply,"D104");
		return CM_SQLCODE;
	}
	zip_struct(com_tel_c);

	return 0;
}

int Com_tel_Clo_Sel (){
	EXEC SQL CLOSE sel_com_tel;
	return 0;
}

/*****************************************************************************/
/****                              修改函数部分                           ****/
/*****************************************************************************/
int Com_tel_Dec_Upd( reply , fmtstr , va_alist)
char    *reply;
char    *fmtstr;
va_dcl
{
	EXEC    SQL BEGIN   DECLARE SECTION;
		char    comm[1000];
	EXEC    SQL END     DECLARE SECTION;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	sprintf ( comm , "SELECT rowid,com_tel.* FROM com_tel WHERE  ");
	key_strcat(comm,wherelist);
	strcat(comm," FOR UPDATE WAIT 5 ");
	vtcp_log("%s,%d,SQLSTR=[%s]\n",__FILE__,__LINE__,comm);
	sqlca.sqlcode=0;
	EXEC SQL PREPARE com_tel_upd FROM :comm;

	EXEC SQL DECLARE upd_com_tel CURSOR FOR com_tel_upd;

	EXEC SQL OPEN upd_com_tel;
	if (sqlca.sqlcode){
		sprintf(acErrMsg,"open com_tel error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D102" );
		return CM_SQLCODE;
	}

	return 0;
}

int Com_tel_Fet_Upd( struct com_tel_c *com_tel_c , char * reply ){
	int   ret;

	EXEC SQL FETCH upd_com_tel INTO :com_tel_c;
	if ( sqlca.sqlcode && sqlca.sqlcode!=1403 ){
		sprintf(acErrMsg,"FETCH upd com_tel error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D103" );
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == 1403 ){
		sprintf(acErrMsg,"FETCH com_tel finished %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D104" );
		return CM_SQLCODE;
	}
	zip_struct(com_tel_c);

	return 0;
}

int Com_tel_Upd_Upd( struct com_tel_c com_tel_c , char * reply){
	int ret;

	EXEC SQL UPDATE com_tel SET tel=:com_tel_c.tel,
			br_no=:com_tel_c.br_no,
			name=:com_tel_c.name,
			pwd=:com_tel_c.pwd,
			lvl=:com_tel_c.lvl,
			csts=:com_tel_c.csts,
			pwd_date=:com_tel_c.pwd_date,
			beg_menu=:com_tel_c.beg_menu,
			chk_ind=:com_tel_c.chk_ind,
			tx_type=:com_tel_c.tx_type
	WHERE rowid=:com_tel_c.rowid;
	if ( sqlca.sqlcode && sqlca.sqlcode != 1403 ){
		sprintf(acErrMsg,"UPDATE com_tel error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D105" );
		return CM_SQLCODE;
	}

	return 0;
}


int Com_tel_Del_Upd(struct com_tel_c com_tel_c , char * reply  ){

	EXEC SQL DELETE FROM com_tel WHERE rowid=:com_tel_c.rowid;
	if ( sqlca.sqlcode ){
		sprintf(acErrMsg,"DELETE com_tel error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D105" );
		return CM_SQLCODE;
	}

	return 0;
}

int Com_tel_Clo_Upd( ){
	EXEC SQL CLOSE upd_com_tel;
	return 0;
}

/*****************************************************************************/
/****                              增加函数部分                           ****/
/*****************************************************************************/
int Com_tel_Ins( struct com_tel_c com_tel_c , char * reply ){
	int ret;

	EXEC SQL INSERT INTO com_tel VALUES (:com_tel_c.tel,
			:com_tel_c.br_no,
			:com_tel_c.name,
			:com_tel_c.pwd,
			:com_tel_c.lvl,
			:com_tel_c.csts,
			:com_tel_c.pwd_date,
			:com_tel_c.beg_menu,
			:com_tel_c.chk_ind,
			:com_tel_c.tx_type);
	if ( sqlca.sqlcode && sqlca.sqlcode != -1 )
	{
		sprintf(acErrMsg,"INSERT com_tel error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D107" );
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == -1 )
	{
		sprintf(acErrMsg,"INSERT com_tel error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D108" );
		return CM_SQLCODE;
	}

	return 0;
}
