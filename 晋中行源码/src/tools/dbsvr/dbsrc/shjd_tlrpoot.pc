#include<stdio.h>
#include<varargs.h>

#define EXTERN
#include"global.h"


EXEC SQL INCLUDE SQLCA;
#include"shjd_tlrpoot_c.h"
#define CM_SQLCODE sqlca.sqlcode==1403?100:(sqlca.sqlcode==-1?-239:sqlca.sqlcode)

int shjd_tlrpoot_con ( struct shjd_tlrpoot_c , char *);
int put_mystery( char *, char * );
char *zip_tail(char *s);
static void zip_struct(struct shjd_tlrpoot_c* ps){
	zip_tail(ps->rowid);
	zip_tail(ps->txday);
	zip_tail(ps->tlrno);
	zip_tail(ps->poottime);
	zip_tail(ps->downtime);
	zip_tail(ps->text);
}
int Shjd_tlrpoot_Debug(struct shjd_tlrpoot_c *ps){
	vtcp_log("shjd_tlrpoot_c.rowid=[%s]\n",ps->rowid);
	vtcp_log("shjd_tlrpoot_c.txday=[%s]\n",ps->txday);
	vtcp_log("shjd_tlrpoot_c.tlrno=[%s]\n",ps->tlrno);
	vtcp_log("shjd_tlrpoot_c.poottime=[%s]\n",ps->poottime);
	vtcp_log("shjd_tlrpoot_c.downtime=[%s]\n",ps->downtime);
	vtcp_log("shjd_tlrpoot_c.text=[%s]\n",ps->text);
	return(0);
}
/*****************************************************************************/
/****                              查询函数部分[]                       ****/
/*****************************************************************************/
int Shjd_tlrpoot_Sel(reply,shjd_tlrpoot_c,fmtstr,va_alist)
char    *reply;
struct  shjd_tlrpoot_c *shjd_tlrpoot_c;
char    *fmtstr;
va_dcl
{
	int   ret;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	ret = Shjd_tlrpoot_Dec_Sel( reply , "%s" , wherelist );
	if (ret){
		WRITEMSG
		return ret;
	}
	ret = Shjd_tlrpoot_Fet_Sel( shjd_tlrpoot_c , reply );
	if (ret){
		WRITEMSG
		return ret;
	}

	Shjd_tlrpoot_Clo_Sel();

	return 0;
}



char *key_strcat(char *,char *);
int Shjd_tlrpoot_Dec_Sel ( reply , fmtstr , va_alist )
char    *reply;
char    *fmtstr;
va_dcl
{
	EXEC    SQL BEGIN   DECLARE SECTION;
		char    comm[1000];
	EXEC    SQL END     DECLARE SECTION;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	sprintf ( comm ," SELECT rowid,shjd_tlrpoot.* FROM shjd_tlrpoot WHERE  ");
	key_strcat(comm,wherelist);

	vtcp_log("%s,%d,SQLSTR=[%s]\n",__FILE__,__LINE__,comm);
	sqlca.sqlcode=0;
	EXEC SQL PREPARE shjd_tlrpoot_sel FROM :comm;
	EXEC SQL DECLARE sel_shjd_tlrpoot CURSOR FOR shjd_tlrpoot_sel;

	EXEC SQL OPEN sel_shjd_tlrpoot;
	if (sqlca.sqlcode){
		sprintf(acErrMsg,"OPEN shjd_tlrpoot error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D102" );
		return CM_SQLCODE;
	}

	return 0;
}

int Shjd_tlrpoot_Fet_Sel ( struct shjd_tlrpoot_c *shjd_tlrpoot_c , char * reply )
{

	int   ret;

	EXEC SQL FETCH sel_shjd_tlrpoot INTO :shjd_tlrpoot_c;
	if (sqlca.sqlcode&&sqlca.sqlcode!=1403){
		sprintf(acErrMsg,"Fetch shjd_tlrpoot error!!! %d",sqlca.sqlcode);
		WRITEMSG
		strcpy (reply,"D103");
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == 1403 ){
		sprintf(acErrMsg,"Fetch shjd_tlrpoot finished!!! %d",sqlca.sqlcode);
		WRITEMSG
		strcpy (reply,"D104");
		return CM_SQLCODE;
	}
	zip_struct(shjd_tlrpoot_c);

	return 0;
}

int Shjd_tlrpoot_Clo_Sel (){
	EXEC SQL CLOSE sel_shjd_tlrpoot;
	return 0;
}

/*****************************************************************************/
/****                              修改函数部分                           ****/
/*****************************************************************************/
int Shjd_tlrpoot_Dec_Upd( reply , fmtstr , va_alist)
char    *reply;
char    *fmtstr;
va_dcl
{
	EXEC    SQL BEGIN   DECLARE SECTION;
		char    comm[1000];
	EXEC    SQL END     DECLARE SECTION;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	sprintf ( comm , "SELECT rowid,shjd_tlrpoot.* FROM shjd_tlrpoot WHERE  ");
	key_strcat(comm,wherelist);
	strcat(comm," FOR UPDATE WAIT 5 ");
	vtcp_log("%s,%d,SQLSTR=[%s]\n",__FILE__,__LINE__,comm);
	sqlca.sqlcode=0;
	EXEC SQL PREPARE shjd_tlrpoot_upd FROM :comm;

	EXEC SQL DECLARE upd_shjd_tlrpoot CURSOR FOR shjd_tlrpoot_upd;

	EXEC SQL OPEN upd_shjd_tlrpoot;
	if (sqlca.sqlcode){
		sprintf(acErrMsg,"open shjd_tlrpoot error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D102" );
		return CM_SQLCODE;
	}

	return 0;
}

int Shjd_tlrpoot_Fet_Upd( struct shjd_tlrpoot_c *shjd_tlrpoot_c , char * reply ){
	int   ret;

	EXEC SQL FETCH upd_shjd_tlrpoot INTO :shjd_tlrpoot_c;
	if ( sqlca.sqlcode && sqlca.sqlcode!=1403 ){
		sprintf(acErrMsg,"FETCH upd shjd_tlrpoot error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D103" );
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == 1403 ){
		sprintf(acErrMsg,"FETCH shjd_tlrpoot finished %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D104" );
		return CM_SQLCODE;
	}
	zip_struct(shjd_tlrpoot_c);

	return 0;
}

int Shjd_tlrpoot_Upd_Upd( struct shjd_tlrpoot_c shjd_tlrpoot_c , char * reply){
	int ret;

	EXEC SQL UPDATE shjd_tlrpoot SET txday=:shjd_tlrpoot_c.txday,
			tlrno=:shjd_tlrpoot_c.tlrno,
			poottime=:shjd_tlrpoot_c.poottime,
			downtime=:shjd_tlrpoot_c.downtime,
			text=:shjd_tlrpoot_c.text
	WHERE rowid=:shjd_tlrpoot_c.rowid;
	if ( sqlca.sqlcode && sqlca.sqlcode != 1403 ){
		sprintf(acErrMsg,"UPDATE shjd_tlrpoot error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D105" );
		return CM_SQLCODE;
	}

	return 0;
}


int Shjd_tlrpoot_Del_Upd(struct shjd_tlrpoot_c shjd_tlrpoot_c , char * reply  ){

	EXEC SQL DELETE FROM shjd_tlrpoot WHERE rowid=:shjd_tlrpoot_c.rowid;
	if ( sqlca.sqlcode ){
		sprintf(acErrMsg,"DELETE shjd_tlrpoot error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D105" );
		return CM_SQLCODE;
	}

	return 0;
}

int Shjd_tlrpoot_Clo_Upd( ){
	EXEC SQL CLOSE upd_shjd_tlrpoot;
	return 0;
}

/*****************************************************************************/
/****                              增加函数部分                           ****/
/*****************************************************************************/
int Shjd_tlrpoot_Ins( struct shjd_tlrpoot_c shjd_tlrpoot_c , char * reply ){
	int ret;

	EXEC SQL INSERT INTO shjd_tlrpoot VALUES (:shjd_tlrpoot_c.txday,
			:shjd_tlrpoot_c.tlrno,
			:shjd_tlrpoot_c.poottime,
			:shjd_tlrpoot_c.downtime,
			:shjd_tlrpoot_c.text);
	if ( sqlca.sqlcode && sqlca.sqlcode != -1 )
	{
		sprintf(acErrMsg,"INSERT shjd_tlrpoot error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D107" );
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == -1 )
	{
		sprintf(acErrMsg,"INSERT shjd_tlrpoot error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D108" );
		return CM_SQLCODE;
	}

	return 0;
}
