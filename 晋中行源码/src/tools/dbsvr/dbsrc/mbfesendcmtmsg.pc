#include<stdio.h>
#include<varargs.h>

#define EXTERN
#include"global.h"


EXEC SQL INCLUDE SQLCA;
#include"mbfesendcmtmsg_c.h"
#define CM_SQLCODE sqlca.sqlcode==1403?100:(sqlca.sqlcode==-1?-239:sqlca.sqlcode)

int mbfesendcmtmsg_con ( struct mbfesendcmtmsg_c , char *);
int put_mystery( char *, char * );
char *zip_tail(char *s);
static void zip_struct(struct mbfesendcmtmsg_c* ps){
	zip_tail(ps->rowid);
	zip_tail(ps->oper_type);
	zip_tail(ps->comsno);
	zip_tail(ps->respno);
	zip_tail(ps->sendtime);
	zip_tail(ps->cmtno);
	zip_tail(ps->msssno);
	zip_tail(ps->bkcode);
}
int Mbfesendcmtmsg_Debug(struct mbfesendcmtmsg_c *ps){
	vtcp_log("mbfesendcmtmsg_c.rowid=[%s]\n",ps->rowid);
	vtcp_log("mbfesendcmtmsg_c.oper_type=[%s]\n",ps->oper_type);
	vtcp_log("mbfesendcmtmsg_c.comsno=[%s]\n",ps->comsno);
	vtcp_log("mbfesendcmtmsg_c.respno=[%s]\n",ps->respno);
	vtcp_log("mbfesendcmtmsg_c.sendtime=[%s]\n",ps->sendtime);
	vtcp_log("mbfesendcmtmsg_c.cmtno=[%s]\n",ps->cmtno);
	vtcp_log("mbfesendcmtmsg_c.cnapsdate=[%ld]\n",ps->cnapsdate);
	vtcp_log("mbfesendcmtmsg_c.msssno=[%s]\n",ps->msssno);
	vtcp_log("mbfesendcmtmsg_c.bkcode=[%s]\n",ps->bkcode);
	vtcp_log("mbfesendcmtmsg_c.origrtnappdate=[%ld]\n",ps->origrtnappdate);
	return(0);
}
/*****************************************************************************/
/****                              查询函数部分[]                       ****/
/*****************************************************************************/
int Mbfesendcmtmsg_Sel(reply,mbfesendcmtmsg_c,fmtstr,va_alist)
char    *reply;
struct  mbfesendcmtmsg_c *mbfesendcmtmsg_c;
char    *fmtstr;
va_dcl
{
	int   ret;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	ret = Mbfesendcmtmsg_Dec_Sel( reply , "%s" , wherelist );
	if (ret){
		WRITEMSG
		return ret;
	}
	ret = Mbfesendcmtmsg_Fet_Sel( mbfesendcmtmsg_c , reply );
	if (ret){
		WRITEMSG
		return ret;
	}

	Mbfesendcmtmsg_Clo_Sel();

	return 0;
}



char *key_strcat(char *,char *);
int Mbfesendcmtmsg_Dec_Sel ( reply , fmtstr , va_alist )
char    *reply;
char    *fmtstr;
va_dcl
{
	EXEC    SQL BEGIN   DECLARE SECTION;
		char    comm[1000];
	EXEC    SQL END     DECLARE SECTION;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	sprintf ( comm ," SELECT rowid,mbfesendcmtmsg.* FROM mbfesendcmtmsg WHERE  ");
	key_strcat(comm,wherelist);

	vtcp_log("%s,%d,SQLSTR=[%s]\n",__FILE__,__LINE__,comm);
	sqlca.sqlcode=0;
	EXEC SQL PREPARE mbfesendcmtmsg_sel FROM :comm;
	EXEC SQL DECLARE sel_mbfesendcmtmsg CURSOR FOR mbfesendcmtmsg_sel;

	EXEC SQL OPEN sel_mbfesendcmtmsg;
	if (sqlca.sqlcode){
		sprintf(acErrMsg,"OPEN mbfesendcmtmsg error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D102" );
		return CM_SQLCODE;
	}

	return 0;
}

int Mbfesendcmtmsg_Fet_Sel ( struct mbfesendcmtmsg_c *mbfesendcmtmsg_c , char * reply )
{

	int   ret;

	EXEC SQL FETCH sel_mbfesendcmtmsg INTO :mbfesendcmtmsg_c;
	if (sqlca.sqlcode&&sqlca.sqlcode!=1403){
		sprintf(acErrMsg,"Fetch mbfesendcmtmsg error!!! %d",sqlca.sqlcode);
		WRITEMSG
		strcpy (reply,"D103");
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == 1403 ){
		sprintf(acErrMsg,"Fetch mbfesendcmtmsg finished!!! %d",sqlca.sqlcode);
		WRITEMSG
		strcpy (reply,"D104");
		return CM_SQLCODE;
	}
	zip_struct(mbfesendcmtmsg_c);

	return 0;
}

int Mbfesendcmtmsg_Clo_Sel (){
	EXEC SQL CLOSE sel_mbfesendcmtmsg;
	return 0;
}

/*****************************************************************************/
/****                              修改函数部分                           ****/
/*****************************************************************************/
int Mbfesendcmtmsg_Dec_Upd( reply , fmtstr , va_alist)
char    *reply;
char    *fmtstr;
va_dcl
{
	EXEC    SQL BEGIN   DECLARE SECTION;
		char    comm[1000];
	EXEC    SQL END     DECLARE SECTION;
	char    wherelist[800];

	va_list ap;
	va_start(ap);
	vsprintf ( wherelist , fmtstr , ap );
	va_end(ap);

	sprintf ( comm , "SELECT rowid,mbfesendcmtmsg.* FROM mbfesendcmtmsg WHERE  ");
	key_strcat(comm,wherelist);
	strcat(comm," FOR UPDATE WAIT 5 ");
	vtcp_log("%s,%d,SQLSTR=[%s]\n",__FILE__,__LINE__,comm);
	sqlca.sqlcode=0;
	EXEC SQL PREPARE mbfesendcmtmsg_upd FROM :comm;

	EXEC SQL DECLARE upd_mbfesendcmtmsg CURSOR FOR mbfesendcmtmsg_upd;

	EXEC SQL OPEN upd_mbfesendcmtmsg;
	if (sqlca.sqlcode){
		sprintf(acErrMsg,"open mbfesendcmtmsg error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D102" );
		return CM_SQLCODE;
	}

	return 0;
}

int Mbfesendcmtmsg_Fet_Upd( struct mbfesendcmtmsg_c *mbfesendcmtmsg_c , char * reply ){
	int   ret;

	EXEC SQL FETCH upd_mbfesendcmtmsg INTO :mbfesendcmtmsg_c;
	if ( sqlca.sqlcode && sqlca.sqlcode!=1403 ){
		sprintf(acErrMsg,"FETCH upd mbfesendcmtmsg error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D103" );
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == 1403 ){
		sprintf(acErrMsg,"FETCH mbfesendcmtmsg finished %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D104" );
		return CM_SQLCODE;
	}
	zip_struct(mbfesendcmtmsg_c);

	return 0;
}

int Mbfesendcmtmsg_Upd_Upd( struct mbfesendcmtmsg_c mbfesendcmtmsg_c , char * reply){
	int ret;

	EXEC SQL UPDATE mbfesendcmtmsg SET oper_type=:mbfesendcmtmsg_c.oper_type,
			comsno=:mbfesendcmtmsg_c.comsno,
			respno=:mbfesendcmtmsg_c.respno,
			sendtime=:mbfesendcmtmsg_c.sendtime,
			cmtno=:mbfesendcmtmsg_c.cmtno,
			cnapsdate=:mbfesendcmtmsg_c.cnapsdate,
			msssno=:mbfesendcmtmsg_c.msssno,
			bkcode=:mbfesendcmtmsg_c.bkcode,
			origrtnappdate=:mbfesendcmtmsg_c.origrtnappdate
	WHERE rowid=:mbfesendcmtmsg_c.rowid;
	if ( sqlca.sqlcode && sqlca.sqlcode != 1403 ){
		sprintf(acErrMsg,"UPDATE mbfesendcmtmsg error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D105" );
		return CM_SQLCODE;
	}

	return 0;
}


int Mbfesendcmtmsg_Del_Upd(struct mbfesendcmtmsg_c mbfesendcmtmsg_c , char * reply  ){

	EXEC SQL DELETE FROM mbfesendcmtmsg WHERE rowid=:mbfesendcmtmsg_c.rowid;
	if ( sqlca.sqlcode ){
		sprintf(acErrMsg,"DELETE mbfesendcmtmsg error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D105" );
		return CM_SQLCODE;
	}

	return 0;
}

int Mbfesendcmtmsg_Clo_Upd( ){
	EXEC SQL CLOSE upd_mbfesendcmtmsg;
	return 0;
}

/*****************************************************************************/
/****                              增加函数部分                           ****/
/*****************************************************************************/
int Mbfesendcmtmsg_Ins( struct mbfesendcmtmsg_c mbfesendcmtmsg_c , char * reply ){
	int ret;

	EXEC SQL INSERT INTO mbfesendcmtmsg VALUES (:mbfesendcmtmsg_c.oper_type,
			:mbfesendcmtmsg_c.comsno,
			:mbfesendcmtmsg_c.respno,
			:mbfesendcmtmsg_c.sendtime,
			:mbfesendcmtmsg_c.cmtno,
			:mbfesendcmtmsg_c.cnapsdate,
			:mbfesendcmtmsg_c.msssno,
			:mbfesendcmtmsg_c.bkcode,
			:mbfesendcmtmsg_c.origrtnappdate);
	if ( sqlca.sqlcode && sqlca.sqlcode != -1 )
	{
		sprintf(acErrMsg,"INSERT mbfesendcmtmsg error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D107" );
		return CM_SQLCODE;
	}
	else if ( sqlca.sqlcode == -1 )
	{
		sprintf(acErrMsg,"INSERT mbfesendcmtmsg error %d",sqlca.sqlcode);
		WRITEMSG
		strcpy ( reply , "D108" );
		return CM_SQLCODE;
	}

	return 0;
}
