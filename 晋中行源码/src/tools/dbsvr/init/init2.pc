/******
          参数: 1 新数据库名
                2 起始日期
                3 终止日期
          生成节假日文件 com_holiday
       ********/
#include <stdio.h>
#include <stdlib.h>
#include "public.h"
#include "svrpub_c.h"
EXEC SQL INCLUDE SQLCA;

#include "com_holiday_c.h"
int db_connect()
{
EXEC	SQL	BEGIN	DECLARE	SECTION;
	char	sql_username[16];
	char	sql_passwd[16];
EXEC	SQL	END		DECLARE	SECTION;

	strcpy(sql_username,getenv("DB_USER"));
	strcpy(sql_passwd,getenv("DB_PASSWD"));
	vtcp_log("%s,%d,USER[%s],PASSWD[%s]\n",__FILE__,__LINE__,sql_username,sql_passwd);
	EXEC SQL CONNECT :sql_username identified by :sql_passwd;
	if(sqlca.sqlcode)
	{
		printf("%s,%d,SQLCODE=[%d]\n",__FILE__,__LINE__,sqlca.sqlcode);
		vtcp_log("%s,%d,SQLCODE=[%d]\n",__FILE__,__LINE__,sqlca.sqlcode);
		return -1;
	}
	return (0);
}

int main(int argc, char *argv[])
{
    struct com_holiday_c com_holiday;
	char pcResp[5];
    long date1=0,date2=0;
    int days=0,day1=0;
	int sum=0;
	int num=0;
	memset(pcResp,'\0',sizeof(pcResp));
	memset(&com_holiday,'\0',sizeof(com_holiday));
    if (argc != 3)
    {
        printf(" 参数错误!! %s + %s + date1 + date2 \n",argv[0],argv[1]);
        return 1;
    }

    date1 = atol(argv[1]);
    date2 = atol(argv[2]);
	db_connect();
    if(sqlca.sqlcode) 
    {
        printf("database err [%d]\n",sqlca.sqlcode);
        return 1;
    }
    sum = pub_base_CalTrueDays(date1,date2);
	EXEC SQL DELETE FROM com_holiday;
	printf("导入基础数据后处理步骤二>>>>\n");
    while(date2 >= date1)
    {
		num++;
		printf("INIT2进行中,请稍候...[%2d%%]\r",num*100/sum);
		fflush(stdout);
        days = pub_base_CalTrueDays(19000101,date1);
        if (days < 0)
        {
            printf("计算天数错误!! [%ld]\n",date1);
            goto ErrExit;
        }
        day1 = days%7 + 1;
        if (day1 == 6)
        {
            com_holiday.beg_date = date1;
            if (pub_base_deadlineD(date1,1,&com_holiday.end_date))
            {
                printf("计算下一天日期错误!!\n");
                goto ErrExit;
            }
            com_holiday.days = 2;
            strcpy(com_holiday.type,"2");
			Com_holiday_Ins(com_holiday,pcResp);
            if (sqlca.sqlcode)
            {
                printf("向com_holiday插入数据错误[%d]\n",sqlca.sqlcode);
                goto ErrExit;
            }
            if (pub_base_deadlineD(date1,2,&date1))
            {
                printf("计算下两天日期错误!!\n");
                goto ErrExit;
            }
        }
        else 
        {
            if (pub_base_deadlineD(date1,1,&date1))
            {
                printf("计算下一天日期错误!!\n");
                goto ErrExit;
            }
        }
    }
    EXEC SQL commit work;
    if (sqlca.sqlcode) 
    { 
        printf("commit db err [%d]\n",sqlca.sqlcode);
        return 1;
    }

	printf("INIT2进行中,请稍候...[完成]\n");

    return 0;
ErrExit:
    printf("unnormal quit from init8.ec \n");

    EXEC SQL ROLLBACK WORK;
    if(sqlca.sqlcode)
    {
        printf("database erro!! %d\n",sqlca.sqlcode);
        return 1;
    }

    return 1;
}
