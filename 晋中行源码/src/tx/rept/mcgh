

# ident "@(#)apsvr:sa/si.mak"

# Thunder Bird

# inputs

APP		=	$(HOME)
FLG		=	-DDEBUG -DBAL_DEBUG
 
# commands
 
SHELL	=	sh

CC		=	cc $(Q64) 
EC		=	esql $(Q64)
BS		=	buildserver
BC		=	buildclient
LD		=	ld
AR		=	ar ruc

RM		=	@rm -f
MV		=	@mv
CP		=	@cp
ECHO	=	@echo

# TUXEDO specific

RSM		=	INFORMIX-OnLine
BSTUB	=	:_balmain

# paths and flags
 
BIN		= 	$(APP)/bin
LIB		=	$(APP)/lib
INC		=	$(APP)/src/incl_c -I$(APP)/src/incl_ec -I$(APP)/src/incl_pub

DEF		=	-DNOWHAT=1
 
CFLAG	=	$(FLG) $(DEF)
EFLAG	=	$(FLG) $(DEF)
LFLAG	=	$(FLG) -shared
 
CM_LIB	=	/usr/ucblib

AP_INC	=	$(APP)/src/pubf/bal/tcp/incl
AP_LIB	=	$(APP)/lib
 
TX_INC	=	$(TUXDIR)/include
TX_LIB	=	$(TUXDIR)/lib

DB_LIB	=	$(INFORMIXDIR)/lib
EC_INC	=	$(INFORMIXDIR)/incl/esql
EC_LIB	=	$(INFORMIXDIR)/lib/esql
 
C_INCP	=	-I$(EC_INC) -I$(TX_INC) -I$(AP_INC) -I$(INC) -I.
C_LIBP	=	-L$(EC_LIB) -L$(TX_LIB) -L$(CM_LIB) -L$(LIB) -L.
 
CFLAGS	=	$(CFLAG) $(C_INCP) $(C_LIBP) 
EFLAGS	=	$(CFLAG) $(C_INCP) $(C_LIBP)
LFLAGS	=	$(LFLAG)
 
# libraries and targets

#LIBUCB	=	/usr/ucblib/libucb.a
LIBUCB	=
LIBNET	=	$(DB_LIB)/netlib.a

LIBAPL  = -lacct -lln -lbase -lpubdb -lass -lcom -lde \
	-lpubdb_m -lcif -lagent -lc -lm -lcard -lod -lrpt

SQLLIBS	=	-lsql $(LIBNET) -los -lgen -lsocket -lnsl
#RBSLIBS	=	-ldes -lbhcomm
#DEPS    =   $(AP_LIB)/libbaltcp.a 

#BALLIBS	=	$(RBSLIBS) -ldbsvr
BALLIBS	=	$(LIBBAL) $(LIBAPL)

LIBS	=	$(LIBBAL) $(LIBUCB) $(BALLIBS)

OBJS	=	rob.o

TARGET	= \
		$(BIN)/rob

all: Mstart $(TARGET) Mcomplete cleanup
 
Mstart:
	$(ECHO)
	$(ECHO) "MAKE apsvr:$(TARGET) ..."
	$(ECHO)

Mcomplete:
	$(ECHO)
	$(ECHO) "MAKE apsvr:$(TARGET) completed."
	$(ECHO)
 
$(TARGET):	$(OBJS)
	esql -brtl $(Q64) $(CFLAGS) -o $@ $(OBJS) $(LIBS)

# implicit
 
.SUFFIXES: .o .c .ec
 
.ec.o:
	$(EC) $(EFLAGS) -c $*.ec
#	$(CC) -o $@ $(CFLAGS) -c $(*F).c
	$(RM) $(*F).c
 
.c.o:
	$(CC) -o $@ $(CFLAGS) -O -g -s -c $*.c
 
.c:
	$(CC) -o $@ $(CFLAGS) $*.c $(LIBS)
 
# default
 
#.DEFAULT:
#	$(CC) -o $@ $(CFLAGS) $(@F).c $(LIBS)
 
# clearing object codes
 
clean: cleanup
	$(RM) $(TARGET)
 
cleanup:
	$(RM) $(OBJS)
 
# dependencies
