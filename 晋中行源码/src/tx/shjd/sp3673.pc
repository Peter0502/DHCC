/***************************************************************************************
*交易名称: 操作员监督网点维护
*文件名称: sp3673.pc
*
*
*功能描述: 
*改造者  : lyz
*改造日期: 20070112
*
***************************************************************************************/

#define EXTERN
#include "public.h"
#include "shjd_tlrvsbrn_c.h"
#include "com_tel_c.h"
#include "com_branch_c.h"

struct shjd_tlrvsbrn_c gShjd;
struct com_tel_c wd_com_tel;
struct com_branch_c wd_com_branch;

int sp3673()
{
	int ret=0;
	char flag[2];
	char tlrno[5];/**注意这里以后还得需要改xyy***/
	char brno[6];
	char cTmp1[6];
	char cTmp2[5];
  	char cBrno[6];
  	char cTlrno[5];	

	memset(tlrno,0x00,sizeof(tlrno));
	memset(brno,0x00,sizeof(brno));
	memset(flag,0x00,sizeof(flag));
	memset(cBrno , 0 , sizeof(cBrno));
	memset(cTlrno, 0 , sizeof(cTlrno));
	memset(&wd_com_branch,0x00,sizeof(wd_com_branch));
	memset(&wd_com_tel,0x00,sizeof(wd_com_tel));
	memset(&gShjd,0x00,sizeof(struct shjd_tlrvsbrn_c));

	if(check_shjd_tel_poot(g_pub_tx.tel)){
		strcpy(g_pub_tx.reply,"SH05");
		set_zd_data(DC_GET_MSG,acErrMsg);
               	goto ErrExit;
	}
	pub_base_sysinit();

	get_fd_data("0670",flag);
	get_fd_data("0340",tlrno);
	get_fd_data("0020",brno);
	get_fd_data("0350",cTlrno);
	get_fd_data("0910",cBrno);
 	
	memset(cTmp1,'0',sizeof(cTmp1));
	memcpy(cTmp1+4-strlen(tlrno),tlrno,strlen(tlrno));
	memset(tlrno,0x00,sizeof(tlrno));
	memcpy(tlrno,cTmp1,sizeof(tlrno)-1);
	
	memset(cTmp1,'0',sizeof(cTmp1));
	memcpy(cTmp1+4-strlen(cTlrno),cTlrno,strlen(cTlrno));
	memset(cTlrno,0x00,sizeof(cTlrno));
	memcpy(cTlrno,cTmp1,sizeof(cTlrno)-1);
 
  vtcp_log("[%s][%d]flag==[%s]",__FILE__,__LINE__,flag);
  vtcp_log("[%s][%d]tlrno=[%s]",__FILE__,__LINE__,tlrno);
  vtcp_log("[%s][%d]brno==[%s]",__FILE__,__LINE__,brno);
  vtcp_log("[%s][%d]cBrno=[%s]",__FILE__,__LINE__,cBrno);
  vtcp_log("[%s][%d]cTlrno[%s]",__FILE__,__LINE__,cTlrno);
	switch(flag[0])
	{
		case '1':/*增加*/
			if(add_recd(tlrno,brno)) goto ErrExit;
			break;
		case '2':/*删除*/
			if(del_recd(tlrno,brno)) goto ErrExit;
			break;
		case '3':/*修改*/
			if(update_recd(tlrno,brno,cTlrno,cBrno)) goto ErrExit;
			break;
		case '4':/*刷新*/
			if(refresh_recd()) goto ErrExit;
			break;
		default:
			sprintf(acErrMsg,"不能识别的操作符.");
			WRITEMSG
			goto ErrExit;
	}	
OkExit:
	strcpy(g_pub_tx.reply,"0000");
	sprintf(acErrMsg,"Before OK return: reply [%s]",g_pub_tx.reply);
	WRITEMSG
	set_zd_data(DC_REPLY,g_pub_tx.reply);
	return 0;	
ErrExit:
	sprintf(acErrMsg,"Before ERROR return: reply [%s]",g_pub_tx.reply);
	WRITEMSG
	set_zd_data(DC_REPLY,g_pub_tx.reply);
	return 1;	
	
}
int add_recd(char *tlrno,char *brno)
{
	int ret=0;
	
	memset(&wd_com_tel,'\0',sizeof(wd_com_tel));
	memset(&gShjd,'\0',sizeof(gShjd));
  vtcp_log("[%s][%d]这里开始增加交易",__FILE__,__LINE__);
	ret=Com_tel_Sel(g_pub_tx.reply,&wd_com_tel,"tel='%s'",tlrno);
	if(ret)
	{
		sprintf(acErrMsg,"[%s][%d]无此操作员[%d]",__FILE__,__LINE__,ret);
		WRITEMSG
		goto ErrExit;
	}
	ret=Com_branch_Sel(g_pub_tx.reply,&wd_com_branch,"br_no='%s'",brno);
	if(ret)
	{
		sprintf(acErrMsg,"[%s][%d]无此机构[%d]",__FILE__,__LINE__,ret);
		WRITEMSG
		goto ErrExit;
	}
	memcpy(gShjd.tlrno,tlrno,sizeof(gShjd.tlrno));
	memcpy(gShjd.brno,brno,sizeof(gShjd.brno));
  vtcp_log("[%s][%d]tlrno==[%s]",__FILE__,__LINE__,tlrno);
  vtcp_log("[%s][%d]brno==[%s]",__FILE__,__LINE__,brno);
  vtcp_log("[%s][%d]gShjd.tlrno==[%s]",__FILE__,__LINE__,gShjd.tlrno);
  vtcp_log("[%s][%d]gShjd.brno==[%s]",__FILE__,__LINE__,gShjd.brno);
	ret=Shjd_tlrvsbrn_Ins(gShjd,g_pub_tx.reply);
	if(ret)
	{
		sprintf(acErrMsg,"[%s][%d]插入记录出错[%d]",__FILE__,__LINE__,ret);
		WRITEMSG
		goto ErrExit;
	}
		
OkExit:
	return 0;	
ErrExit:
	return 1;	
}
int del_recd(char *tlrno,char *brno) 
{
	int ret=0;
  vtcp_log("[%s][%d]这里开始删除交易",__FILE__,__LINE__);
	ret=sql_execute("delete from shjd_tlrvsbrn where tlrno='%s' and brno='%s'  ",tlrno,brno);
	if(ret)
	{
		sprintf(acErrMsg,"[%s][%d]删除记录出错[%d]",__FILE__,__LINE__,ret);
		WRITEMSG
		goto ErrExit;
	}
OkExit:
	return 0;	
ErrExit:
	return 1;	
}
int update_recd(char *tlrno,char *brno,char *cTlrno,char *cBrno)
{
	int ret=0;
	memset(&gShjd,0x00,sizeof(struct shjd_tlrvsbrn_c));
	memset(&wd_com_tel,0x00,sizeof(wd_com_tel));
	memset(&wd_com_branch,0x00,sizeof(wd_com_branch));
  vtcp_log("[%s][%d]这里开始修改交易",__FILE__,__LINE__);
	ret=Com_tel_Sel(g_pub_tx.reply,&wd_com_tel,"tel='%s'",tlrno);
	if(ret)
	{
		sprintf(acErrMsg,"[%s][%d]无此操作员[%d]",__FILE__,__LINE__,ret);
		WRITEMSG
		goto ErrExit;
	}
	ret=Com_branch_Sel(g_pub_tx.reply,&wd_com_branch,"br_no='%s'",brno);
	if(ret)
	{
		sprintf(acErrMsg,"[%s][%d]无此机构[%d]",__FILE__,__LINE__,ret);
		WRITEMSG
		goto ErrExit;
	}
  vtcp_log("[%s][%d]cTlrno==[%s]",__FILE__,__LINE__,cTlrno);
  vtcp_log("[%s][%d]cBrno ==[%s]",__FILE__,__LINE__,cBrno);
	ret=Shjd_tlrvsbrn_Dec_Upd(g_pub_tx.reply,"tlrno='%s' and brno='%s'  ",cTlrno,cBrno);
	if(ret)
	{
		sprintf(acErrMsg,"[%s][%d]声明出错[%d]",__FILE__,__LINE__,ret);
		WRITEMSG
		goto ErrExit;
	}
	ret=Shjd_tlrvsbrn_Fet_Upd(&gShjd,g_pub_tx.reply);
	if(ret)
	{
		sprintf(acErrMsg,"[%s][%d]声明出错[%d]",__FILE__,__LINE__,ret);
		WRITEMSG
		goto ErrExit;
	}
	memcpy(gShjd.tlrno,tlrno,sizeof(gShjd.tlrno));
	memcpy(gShjd.brno,brno,sizeof(gShjd.brno));
	ret=Shjd_tlrvsbrn_Upd_Upd(gShjd,g_pub_tx.reply);
	if(ret)
	{
		sprintf(acErrMsg,"[%s][%d]UPDATE出错[%d]",__FILE__,__LINE__,ret);
		WRITEMSG
		goto ErrExit;
	}
	Shjd_tlrvsbrn_Clo_Upd();
	
	
OkExit:
	return 0;	
ErrExit:
	return 1;	
}
int refresh_recd()
{
	int ret=0;
	int cnt=0;
	FILE *fp;
	char filename[100];
  vtcp_log("[%s][%d]这里开始刷新交易",__FILE__,__LINE__);
	memset(filename,0x00,sizeof(filename));
	memset(&gShjd,0x00,sizeof(struct shjd_tlrvsbrn_c));
	ret=Shjd_tlrvsbrn_Dec_Sel(g_pub_tx.reply," 1=1 ");
	if(ret)
	{
		sprintf(acErrMsg,"[%s][%d]声明游标出错shjdcode表[%d]",__FILE__,__LINE__,ret);
		WRITEMSG
		goto ErrExit;
	}
	while(1)
	{ /*1 while*/
		memset(&gShjd,0x00,sizeof(struct shjd_tlrvsbrn_c));

		ret=Shjd_tlrvsbrn_Fet_Sel(&gShjd,g_pub_tx.reply);
		if(ret == 100) break;
		else if(ret)
		{
			sprintf(acErrMsg,"[%s][%d]FETCH出错shjdcode表[%d]",__FILE__,__LINE__,ret);
			WRITEMSG
			goto ErrExit;
		}
		if(!cnt)
		{
			pub_base_AllDwnFilName(filename);
			fp=fopen(filename,"w");
			if(!fp)
			{
				sprintf(acErrMsg,"[%s][%d] open file [%s] error ",filename );
				WRITEMSG
				strcpy( g_pub_tx.reply,"S047" );
				goto ErrExit;
			}
		}
		vtcp_log("[%s][%d]tlrno==[%s]brno==[%s]",__FILE__,__LINE__,gShjd.tlrno,gShjd.brno);
		fprintf(fp,"%s|%s|\n",gShjd.tlrno,gShjd.brno);
		cnt++;
	} /*2 while*/	
	Shjd_tlrvsbrn_Clo_Sel();
	if(!cnt)
	{
		strcpy(g_pub_tx.reply,"S049");
		goto ErrExit;
	}
	else
	{
		fclose(fp);
		set_zd_data( DC_FILE_SND,"1");
	}
OkExit:
	return 0;	
ErrExit:
	return 1;	
}
