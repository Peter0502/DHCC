审计: wangpeng/Peng9932..
财务：
88888/2.83.9
00752/1.33.1

内外网：peng0..2


********************数据库相关*****************************

--查锁表以及释放session
--查询：
select object_name,machine,s.sid,s.serial# from gv$locked_object l,dba_objects o,gv$session s where l.OBJECT_ID=o.object_id and l.SESSION_ID=s.sid;
--释放：
alter system kill session 'sid,serial#';

**********************************************************

172.20.5.162  阳泉商行   后台yqht  前台yqqt  结账后台yqjzht 
172.20.5.116  阳泉村镇   开发前后台 czkfht  czkfqt 

***********************************************************
172.20.5.116 村镇银行数据库
   
盂县 yxczyx/yxczyx    柜员：0204(111111)
灵石 lscz/lscz        柜员：0227(123123)
万荣 wrcz/wrcz    柜员：8535
原平 ypcz/ypcz    柜员：8721/123123

阳曲 yqcz/yqcz ??


172.20.5.162 阳泉商行数据库 yqcx/yqcx   柜员 0220

0925 (lvl=2)
0932（授权柜员 t.lvl in('1','3','5','7') and t.csts=2）

**************************************************************
(1)查询或修改村镇银行前台服务的端口
如盂县前台，用yxqt用户登录116，查看或修改yxqt/winqt/tomcat/conf/server.xml中的( non-SSL HTTP/1.1 Connector on port 的值 ）

例如晋中配置如下：
<!-- Define a non-SSL HTTP/1.1 Connector on port 8070 -->
    <Connector port="8070" maxHttpHeaderSize="8192"
               maxThreads="150" minSpareThreads="25" maxSpareThreads="75"
               enableLookups="false" redirectPort="8443" acceptCount="100"
               connectionTimeout="20000" disableUploadTimeout="true" />


灵石8297 万荣8299  阳曲 8197   盂县8198  原平8298

(2)修改村镇前台客户端DHC.BankSys.exe.config中的端口与上面(1)中查到的端口保持一致（不同端口对应不同的村镇银行后台）

例如晋中配置如下：
<appSettings>
   <!--Webservice地址-->
   <add key="ForXmlServiceUrl" value="http://172.168.78.110:8070/netservice/services/ForXmlService" />
   <add key="TradServiceUrl" value="http://172.168.78.110:8070/netservice/services/TradService" />
   <add key="AuthServiceUrl" value="http://172.168.78.110:8070/netservice/services/AuthService" />

	 <add key="ListinningPort" value="12346"/>
	 <add key="AuthTimeOut" value="180000"/>
 </appSettings>


(3)查使用的数据库用户名. 用对应的村镇银行后台用户登录环境. 如yxht登录后用 echo $DB_USER 查询所使用的数据库用户名

(4)修改前台联网核查是否走人行 修改文件： /app/devqt/winqt/tomcat/bin/netserviceconfig/WEB.CONFIG
    <!--身份核查 是否调用人行接口 在网断时候配置 Y调 N不调 -->
    <add key="IdCheckBZ" value="Y"/>

**********************************************************************************************************
进程僵死处理方法：
检查进程数：applist|grep balmain|wc -l
(1)applist | grep balmain查看哪个服务号一直处于_balmain状态，即僵si状态  （1-30号服务号）
(2)ps -ef|grep u_servmain由服务号查出进程号xxxx
(3)kill -9 进程号
(4)appstart 

如果appstop 不行的话，用rmipc清一下缓存，再appstop
**********************************************************************************************************

机器断电重启，需要启动的几项:
(1)村镇银行系统，需启动winqt前台tomcat服务  ~/winqt/tomcat/bin/startup.sh
(2)后台用户启动服务 appstart, 启动后applist查看下服务列表，一般有19个服务项. 
  交易时报 ECOMM错误"ECOMM无法发送到主机"，一般是后台服务未启动或者数据库实例未启动。 重启后台服务即可。先appstop,再appstart

报"ES006主机系统状态异常"，是com_sys_parm参数表中的sys_sts状态为3-翻牌 导致的，改为0-正常即可登录。
*****************************************************************

借方科目： 借增贷减    借方产品：现金，贴现，贷款，应收利息,存放同业,垫款，利息支出，手续费支出，债券
贷方科目： 借减贷增    贷方产品：活期存款，定期存款，利息收入

三张交易定义表
select * from tx_def;
select * from tx_flow_def where tx_code='6346';
select * from tx_sub_def where sub_tx_code='6346'; 

select * from tx_sub_rel t; --子交易关系表(主要配置子交易间传值时所使用域的映射关系)

select * from com_eod_exec ; --日终批量配置表(配置日终批量程序的执行顺序，执行频率)

查看某个交易的配置：ttx 交易号    
如ttx 2101  可以显示tx_def,tx_flow_def,tx_sub_def这三张表中2101交易的配置

ttx 是app/devht/bin下的一个shell脚本

*********************************************************************

前台脚本中除了可以使用以@开头的临时变量外,还可以使用以#开头的交易变量或者以$开头的系统变量。

setsel()用指定格式的数据来初始化选择变量（即可以动态初始化控件内容。如动态初始化select控件的下拉选项）

setsel(#VOCTYPE,@tota,'o5t20o1v3o2');--用@tota的内容重新初始化#VOCTYPE    注：有时title内容超长时会出现解析不成功

ldchar(char *from, int num, char *to) 拷贝定长串到空值结尾的串

不同INPUT类型的<ITEM>支持不同的事件，SUBMIT按钮不响应事件，其他类型的<ITEM>都支持ONGOTFOCUS和ONLOSTFOCUS事件。只有BUTTON按钮响应ONCLICK事件，只有<SELECT>响应ONEXPAND事件


*******************************VI使用小记*********************************

(1)ls -lrt 使用长名模式，逆序，根据修改时间排序
(2)find . -name "*.c"|xargs grep "main"   查找当前目录下包括“main”字串的所有.c文件 (本例中xargs将find产生的长串文件列表拆散成多个子串，作为grep命令的参数，然后对每个子串调用grep"main")
(3)cp -p ./file1 ./a/file1  带权限copy
(4)wq! 强制保存后离开
(5):! [command] 暂时跳出vi到命令行模式下执行command的显示结果  （:! ls /home 即在vi中查看/home目录下的文件信息）
(6):set nu 显示行号   :set nonu取消行号
(7):1,$s/xxx/yyy/g 将从第1行到末一行的所有xxx替换成yyy
(8). .profile 使.profile里的修改的变量即时生效
(9)vi命令模式下，小数点"."表示重复执行前一次操作
(10)文件编码转换 iconv -f big5 -t utf8 big5.txt -o utf8.txt  (将big5.txt转码保留原来的文件，并生成一个新的文件utf8.txt)
(11)UNIX2dos [-kn] oldfile [newfile]
    dos2UNIX [-kn] oldfile [newfile] 将dos格式和UNIX格式的文件中断行字符进行转换(将dos中的^M$和 $转换)  
    即将DOS的换行符CR(^M)和LF($)转换成unix的换行符LF($)
    
(12)vi 里修改内容，在命令模式下光标选到要修改的地方，先按r，再输入修改后的内容即可。(或者 x删掉后，i后再插入)
(13)vi 里复制一行，在光标所在行yy，把光标移动到要复制的位置，输入p粘贴. 如需复制多行，在光标处输入【n】yy，再到相应行处输入p
    如要剪切多行，在光标所在行处输入【n】dd,光标移动到要粘贴的行，输入p
(14)SQL>里执行sql语句查询结果一行显示不下时，用set line 1000; 设置一行显示的字符数,然后用/ 重新执行显示sql查询结果
(15)less 查看文件，同时可以按光标上下来查看
(16)join file1 file2 
(17)awk()
(18)sed(Stream editor 流编辑器)
(19)hdc hda1 fd0是磁盘设备 tty1是字符设备
(20)主机名向IP地址转换的命令
(21)nslookup 实现域名解析和反解析功能    反解析 nslookup -qt=ptr x.x.x.x
(22)什么情况下需要编译内核？
(23)影响文件服务器性能的最主要因素，影响web服务器性能的最主要因素
(24)在/etc/resolv.conf中设置DNS服务器IP. host是一种简单的dns查询工具。dig命令是一个功能强大的DNS查询命令。nslookup命令是windows上的命令，查询域名

(25)命令模式下
   0 移动到当前行的最前面字符处
   $ 移动到当前行的最后面字符处(对于一行特别长的字串很有用)
   H 光标移动到当前屏幕最上方的一行
   M 光标移动到当前屏幕中间的一行
   L 光标移动到当前屏幕最下方的那一行
   
   gg 移动到当前文件的第一行,相当于1G(常用)
   nG 移动到当前文件的第n行
   G 光标移动到文件的最后一行(常用)
   
   nx 连续向后删除n个字符
   dd 删除光标所在的那一整行
   ndd 从光标位置开始，删除向下n行(包括当前行)
   d1G 删除光标所在行到第一行的所有数据(包括当前行)
   dG 删除光标所在行到最后一行的所有数据(包括当前行)
   d$ 删除光标所在位置到该行行尾的所有数据(包括光标处字符)
   d0 删除光标所在位置到该行行首的所有数据(不包括光标处字符)
   
   yy 复制光标所在的那一整行
   nyy 从光标位置开始，复制向下n行(包括当前行)
   y1G 复制光标所在行到第一行的所有数据(包括当前行)
   yG 复制光标所在行到最后一行的所有数据(包括当前行)
   y$ 复制光标所在位置到该行行尾的所有数据(包括光标处字符)
   y0 复制光标所在位置到该行行首的所有数据 (不包括光标处字符)
   
   . 重复前一个动作(如想重复删除，重复粘贴，按下小数点就可以了)

   1,$s/xxx/yyy/gc 将从第1行到末一行的所有xxx替换成yyy,替换前需要依次给用户确认(confirm)是否需要替换
   
   J 将光标所在行与下一行的数据结合成同一行
   u  复原前一个操作
   e! 将文件还原到最原始的状态
 
(26)crontab格式： 分 时 日 月 星期  command 
 
 
################################################################################
【DBS函数构建】
home/czkfht/src/tools/dbsvr/sql (生成头文件要读取的sql文件存放目录)
home/czkfht/src/tools/dbsvr/etc (table_name文件，配置要生成哪个表的.h和.pc)
home/czkfht/src/tools/dbsvr/bin(makech,makedb程序执行目录)
home/czkfht/src/tools/dbsvr/incl （makech后，表_c.h头文件生成的目录）
home/czkfht/src/tools/dbsvr/dbsrc (makedb后，表.pc生成的目录)
home/czkfht/src/tools/dbsvr/dbsrc (在Makefile里增加对 表名.o文件的编译链接,然后运行make)
home/czkfht/lib/libpubdb.so  (make成功后，生成新的libpubdb.so共享库)
libpubdb.so重新生成后，需重启后台服务生效(先appstop后appstart,然后查看applist)


注!!!!!：Makech生成的头文件所在目录：(晋中村镇开发后台)/home/czkfht/src/tools/dbsvr/incl>，因此需要拷贝到目录中：(晋中村镇开发后台)/home/czkfht/src/incl_c>，以备后台程序引用。
具体操作：>cp 表名_c.h  ~/src/incl_c
例如：cp element_code_rel_c.h ~/src/incl_c

重启后台后一般有19个服务，1个admin process,18个server process


【DBS函数使用】
查询一条或多条数据：
[table_name]_Sel(返回类型，表结构体地址,"where条件"，值)   单条查询
[table_name]_Dec_Sel(返回类型，"where条件"，值)            定义一个游标
[table_name]_Fet_Sel(表结构体地址，返回类型)               取出一条记录
[table_name]_Clo_Sel()                                     查询结束，关闭游标

更新一条数据：
[table_name]_Dec_Upd(返回类型，"where条件"，值)            定义一个游标
[table_name]_Fet_Upd(表结构体地址，返回类型)               取出一条记录
[table_name]_Upd_Upd(表结构体地址，返回类型)               取出一条记录，对数据进行修改后，更新回去
[table_name]_Clo_Upd()                                     更新完成，关闭游标

插入一条数据：
[table_name]_Ins(表结构体地址，返回类型)                   取出一条记录

删除一条数据：
[table_name]_Dec_Upd(返回类型，"where条件"，值)            定义一个游标
[table_name]_Fet_Upd(表结构体地址，返回类型)               取出一条记录
[table_name]_Del_Upd(表结构体地址，返回类型)               取出一条记录，对数据进行修改
[table_name]_Clo_Upd()                                     更新完成，关闭游标
###############################################################################################
txml 前台XML程序检查
/home/yqqt/log/otd.log 前台错误日志
/home/yqht/log/trad_机构号_柜员号.log 后台交易错误日志查看




前台手工启动流程-----执行cibas  调otd.x 调D12.XML(在log里可以看到) 启动柜员登录界面
二代补打凭证交易 EDBD.XML


winqt所在服务器对应的IP地址和端口 (~/winqt/tomcat/conf/server.xml)
Tuxedo所在服务器对应的IP地址和端口  哪里可以查？


下载并安装oracle服务，新建实例
下载并安装GIT服务器，客户端
libintl-8.dll
 libpcre-1.dll


116  /home/lsht/usr/lpj 下有存款保险报表生成的执行程序(dd.sh .sql等)

########################## 核心winqt前台常用函数 ##############################################

1.处理和中间件数据传输类

initfd() 初始化所有FD变量为空
geterror([string])  根据错误代码找到错误描述,如果没有参数，使用$FD12的值 ( 错误描述的配置文件为：ERR8583.XML )
callserver([string]) 把数据发到后台并接收应答   (返回string，后台返回的文件数据，8583数据已经解析到FD变量中)
callagn([number],[string],[string]) 发送中间业务数据包

2.字符串数字处理类函数

atoi(string) 转换字符串为数字
itoa(number,string) 转换数字为字符串    @a=itoa(120.50,’%8.2f’); 执行完后@a=’00120.50’
substr(string,number,number)  截取一个子串  @a=substr(‘Hello’,0,2);  执行完后@a=’He’;
len(string)  得到字符串的长度  @a=len(‘Hello’); 执行完后@a=5
chr(number)  把指定的ascii码值转换为字符串  @a=chr(48);执行完后@a=’0’     @a=chr(10);执行完后@a为回车符
mod(number1,number) 求两个整数的余  @a=mod(11,3);执行完后@a=2
comma(string,[number]) 把一个数字型字符串转换为','分割的形式   (string值为数值的字符串,可以含有小数点;number为转换后的长度，默认为16   例：@a=comma(‘1200.50’,12); 执行完后@ a=’     1,200.50’)
ltrim(string) 去掉左边空格
rtrim(string) 去掉尾部空格
val(string,[number]) 得到数字字符串对应的数值(返回 转换后的数值*权重)   string为数字字符串,number为权重默认1
delspace(string) 去掉所有空格，包括字符串中间的空格 
setenv(string,string)  设置环境变量的值  setenv(‘AGNADDR’,’//127.0.0.1:8004’);
getenv(string) 得到环境变量的值
strfldcnt(string1,string2)  得到分隔符分开的字段的个数--string1主字符串,string2分隔符(只能包含一个字符)   例：strfldcnt(‘aaa|bbb|ccc|','|'); 返回值为3
strfld (string,string,number) 得到分隔符分开的某个字段  number为索引   例：strfld (‘aaa|bbb|ccc|’,'|',1)  返回值为bbb
space(number,[string]) 返回一个用填充字符组成的指定长度的字符串  showmsg(‘【‘+space(5)+’】’);	显示【     】   showmsg(‘【’+space(5,’0’)+’】’);	显示【00000】
func(string,string) 计算两个日期之间的绝对差值（天数）  @cnt=func(‘20040201’,’20040301’);//@cnt=29
fund(string,string) 计算两个日期之间的计息天数差值  @cnt=fund(‘20040201’,’20040301’);//@cnt=30

3.列表框处理类

list_init(number,number,number,number) 初始化列表框  list_init(17,66,5,1); 初始化一个左上角在屏幕的第5行第1列，共有17行66列的一个列表框   【注意】每个交易只能有一个列表框,在使用列表框之前必须首先执行此函数
list_setcolcnt(number) 设置列表框标头个数  list_setcolcnt(2); 设置列表框含有2个标头,此函数应在list_init之后执行
list_setcol(number,string,number,number) 设置列表框的一个列标头   参数为：标头索引,标头数据,标头宽度,对齐方式(0-左对齐，1-右对齐(目前未实现)，默认为0)  此函数应在list_setcolcnt之后执行
例： list_setcol(0,’操作员号’,10);
		 list_setcol(1,’姓名’,8);
		 
		 上例设置第一个标头为操作员号，显示长度为10个字节，第二个标头为姓名，显示长度为8个字节
list_additem(string,string ...) 增加列表框的一行   参数为：关键字[用它来保存一个不显示的字符串，如果不用，可以置为''],要存放每个列的数据     此函数应在list_setcol之后执行
例： list_additem(‘’,’601001’,’zhangfei’); 
     上例在列表框中增加一行，此行没有关键字，操作员号对应’601001’，姓名对应’zhangfei’
     
list_rmitem(selid)  删除列表框的一行    selid为要删除的行号
list_getaction(number) 得到选定行的action值，即用list_additem的第一个参数(关键字)   number为列表框行号    返回值[如果没有action或者行号越界，都返回'']

list_work() 显示并激活列表框   返回值[number，如果小于0，表示用户按了ESC或其他退出键，否则返回选中的行号（从0开始）]
list_show() 显示但不激活列表框
list_gettext(number,number) 得到选定行的某个字段的值   返回值[如果行号越界，返回错误（即脚本异常）,如果列号(即子段号)越界，返回'']
例： @a=list_gettext(0,0); 执行完后@a为列表框第一行第一列（非屏幕列）的内容
list_settext(number,number,string) 设定选定行的某个字段的值  list_settext(0,0,’602001’); 修改列表框第一行第一列内容为’602001’
list_del() 删除列表框   【注】列表框被删除后，除了list_init之外所有列表框处理函数都不能再执行
list_clear() 删除列表框的所有行  此函数不会删除列表框或者修改它的结构，只是清除数据
list_load(string) 根据文件内容初始化列表框数据    此函数之前必须已经调用过list_init,list_setcolcnt和list_setcol
例： list_load(‘a.dat’);  用a.dat中的数据初始化列表框内容，a.dat必须符合约定格式：文件中各字段用|分割
list_save(string) 根据列表框数据写文件
例： list_save(‘a.dat’)  把列表框的内容存放到a.dat文件中，文件格式同list_load使用的文件格式
list_loadtext(string,string) 在列表中显示长串内容
list_edit() 编辑列表框当前ITEM 当执行上函数后，输入焦点会在列表框当前行的第一个可显示列上，用户修改完毕后按确定键或取消键可以提交或者回滚对列表框的修改，可以使用箭头键或者TAB键在同一行的不同列之间切换输入焦点
list_getselid() 得到列表框的选择行的id  返回值[number，列表框的选择行的id,小于0表示失败]
例； @a=list_getselid();
		 执行完后@a 为选择的列表框行号，此行号与list_work的到的不同的是	：即使用户按了取消键，本函数也返回被选中的行号
list_getrowcnt() 得到列表框的行数
list_sumcol(number,number,number) 设置列表框的合计字段以及字段格式，只对子窗口有效

setsel(item,string,string) 用指定格式的数据来初始化选择变量 (如需要动态初始化下拉框会经常用到此函数)
例：
			setsel(#VOCTYPE,@tota,'o5t20o1v3o2');
			上例用@tota的内容重新初始化#VOCTYPE，格式字符串的含义如下：
			o5－5个其他字符
			t20－20个字符的title
			o1－1个其他字符
			v3－3个字符的VALUE
			o2－2个其他字符
			则上例的数据中，每条记录31个字符，第5－24位为TITLE，第26-28位为VALUE

4.XML文件相关类
setitems(string,string) 对一组变量赋值
例：
	setitems(‘#BRNO4#TLRNO6’,’6010601001’);
	在上例中，假定#BRNO4长度为4，#TLRNO6长度为6，则执行完后#BRNO4=6010，#TLRNO6=601001
为了能兼容返回数据中含有'\0'的情况，此函数对数据串长度不做检查，保证它不会越界是调用者的责任

getitems(string) 把列出的变量组合成一个变量,返回组合后的变量
例： $FD101=getitems('#ACTNO24#ACTSEQ#TXAMT’);
		 上例把#ACTNO24、#ACTSEQ、#TXAMT拼成一个串赋给$FD101

setsel(item,string,number) 重新设置选择框的内容   参数：选择框item名，多个value和title拼接起来的字符串，每条记录(含一个value和title)的长度
例：
			setsel(#SEL,’0Hello1World’,6);
			上例中，假定#SEL长度为1，则执行完后此选择框有两个选项，第一个value＝0,Title=Hello，第二个value=1，Title=World
			
getseltitle(item,string) 得到选择框某项的title 
例： showmsg(getseltitle(#ZJLX,'01'));
上例显示选择框#ZJLX的value值为01的项的提示内容


5.打印输出类
autolist(string) 把数据内容转换为列表框，但不直接激活列表框
例：
			@tota=callserver();
			if(autolist(@tota){
				list_work();
			}
			上例把交易返回数据直接转化为list框内容并显示出来
			调用此函数时list框不用初始化，系统会自动初始化并使其占据整个可显示区
			数据内容的格式为：
				?第一个字符为”~”
				?0x0a字符把数据分割成行
				?第一行数据指定列表头，用|分割各个域，最后一个域后也应有一个|
				?列表头如果如果以@开头表示此列左对齐，否则为右对齐
				?从第二列开始为数据，也用|分割

6.新增函数
addmon(date,number) 对一个日期增加整数个月，如果是月末，自动调整尾数
例：
			dim @d1 as date;
			dim @d2 as date;
			@d1=’20040131’;
			@d2=addmon(@d1,1);
			showmsg(@d2);//@d2=20040228
			
7.光标跳转函数
goitem(#AC_NAME1); 使光标跳到#AC_NAME1


【小结】当脚本发生错误时可以查阅/app/devqt/log/otd.log，在其中查找Error确定错误类型


@@@@@@@@@@@@@@@@@@@@@@@@@@  业务测试  @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

个人客户号：10006250

个人储蓄活期开户  账户序号1
产品名称：储蓄存折户 凭证类型：储蓄活期存折  1000625000012 留密 凭证号5111 | 1000625000053 无密 凭证号5114
产品名称：个人结算户 凭证类型：储蓄活期存折  1000625000020 无密 凭证号5112 | 1000625000061 留密 凭证号5115

个人定期户  账户序号1 
储蓄定期整整存单1000625000038   凭证号13069  (只有 定期整整账户 可做储蓄部提业务,做完会重开一个凭证，定期户账号不变)   1000625000095 凭13071   
零(存)整(取)存折1000625000046   凭证号5113 （已作3204销户  可以转账销户，也可取现销户 ） 1000625000087   凭证号5116
PS:定期整整不允许做存款业务，零整存折可以存款

个人存取款业务:
个人活期储蓄存折，非结算户和结算户的"存款业务"控制只允许现金存款. 
"取款业务"非结算户不允许转账取款，只能现金取款.个人结算户可以现金、转账两种方式取款，转账取款要求是留密个人结算户。 
7701 交易撤销(存款后，输入上笔成功交易流水号，执行反交易 可查个人活期1000625000012账户明细,正反交易一共记了两笔：贷1.00 和 贷 -1.00 ) 需原交易柜员做，且要授权


测试取款业务场景：
a.个人结算户1000625000061转账取款: 可以转到活期个人结算户1000625000020(非结算户1000625000012，1000625000053不能转入)，个人定期户零整存折1000625000046(定期整整存单1000625000038不允许转入),对公活期户5000047200014(对公定期户5000047200022不允许作取款存入)



^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
对公客户号：50000472 户名：大鹏金融私募   营业执照1231

对公活期户： (活期开户 默认按季计息  现金方式开户 开户金额0.00)
介质种类：无单折 
吸收存款 商业存款 5000047200014(专用存款户)    工业存款 5000047200105(一般户，已销户)  
同业存放 同业存清算款项  5000047200055(一般户) 5000047200113(基本户) 5000047200121(临时户)
待结算财政款项 5000047200063
担保保证金 5000047200071 

(对公活期户开户后需要作一下对公开户确认才能使用(存，取款等)，确认后dd_mst表中相应记录中ac_sts由0-待确认变为1-正常。对公确认时核准号随便填)
对公现金存款(活期)：如存款金额>20W需要授权柜员（0203）进行授权，如金额>=50W 还需先由另一柜员作监督(查询->事后/事中监督)后才能存款成功，
对公现金取款(活期)：基本户，专用户，临时户可以取，一般户不能取。
对公活期记账和内部记账：转账记账业务 (5000047200014转150.00到5000047200113 借贷标志:借)


对公定期户：（对公定期开户方式为转账开户，即活期户转开定期户，村镇行系统单位定期开户起存金额限定为10000.00） 
a.个人留密结算户可转开 b.对公活期户可转开
介质种类：
<单位定期证实书>  
5000047200022 凭6015  
5000047200030 凭6016
5000047200089 凭6017 (用个人留密结算户1000625000061转开的) 
5000047200097 凭6018 (用对公活期户5000047200014转开的,转账支票凭证号3200142000008004)  
5000047200139 凭6020 (转开，余额12000,旧凭6019 新凭6020)
<单位定期存单> 
5000047200048 凭6115
5000047200147 凭6116

ps:证实书置换存单后，会在mo_rpl_note中登记一条置换记录(做存单置换证实书时会先查这张表)，并在td_mst中将金额冻结，再做部提业务，最后会提示已冻结
做证实书置换存单时，应先查mo_rpl_note中是否有记录，有则提示，不再新插一条记录。


对公现金存款(定期)：定期户不支持
对公现金取款(定期)：定期户不支持
对公部提：只有用证实书开户的对公定期户可以做部提，定期存单开户的不能做部提 (对公定期户保底金额10000，如部提后余额<10000,系统会建议按清户处理)
部提有次数上限，超过X次就不能再部提
5000047200139 部提1500到5000047200014  流水00121  部提后对公定期户5000047200139账号不变，重开一个新凭证号

对公销户：活期销/定期销   销户条件：账户下无现金支票凭证
活期（5000047200105 无单折 凭证号0000000000006217）   已销户 转5000047200014 凭现金支票3200141000073022
(问题：活期户使用凭证种类为"转账支票"并输入可用的最小凭证号3200142000008012后，在第二页“确定”后报"与凭证不符" 
查日志看是说转账支票号与无单折凭证号6217不符。。)

对公活期转账记账业务：5000047200113(对公活期基本户) 转100.00 到 5000047200121(对公活期临时户) 
5000047200121(对公活期临时户) 转7.00到 1000625000020(个人结算户)  ps: 转账记账只能转到个人活期结算户

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
内部户:
资产类         9100300000089  户名：in_acct_zcl_wp   科目号100303  种类：特种存款   (凭证区间：现金3200141000073066-70 转账3200142000012804-10)
负债类         9200400000045  户名：in_acct_fzl_wp   科目号200401  种类：借入央行款项
资产负债共同类 9300190000013  户名：in_acct_zcfz_wp  科目号30010401 

内部账存取款需到"转账记账交易"


委托存款基金户、收息户开户：
基金账号 1000625000079
结息户账号 9231400000156


柜员0204现金账号9100100204(910010+柜员号) 1414910.03

柜员交接：接收方的钱和凭证都为0才能进行柜员交接。 执行了0210柜员交接给0203柜员(交接了现金钱箱余额0.00和凭证：现金支票和转账支票)



^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
1.3103定期开户，介质种类选“定期零整存折”时，凭证号码读取的是note_min_no中note_type=010的记录。而在凭证参数表note_parm中，note_type=011表示的是"定期零整存折"，010是"存折"，记表存在不一致。
2.阳泉商行，yqht查连接的是115的yqcx用户，但通过前台交易发现实际连的是yqcs用户的表，为什么？
3.柜员凭证查询，查到结果后“ESC退出”到查询输入页面后，“凭证类型”这个item的选项只有“现金支票”了，显示不全。需手工重新加载
4.对公活期开户时，“介质种类”不选"0.无单折"或选空后下一页，跳到第二页会导致"业务种类""产品代码"下拉框初始化异常，报“EX007公共科目表查询错误”，应控制“介质种类”为必输，优化柜员使用体验
5.对公定期开户，“产品代码”下拉框长度不够，内容显示不全
6."7106柜员凭证作废与使用"，操作类型选“使用”时，授权时提示信息不准确,应为“凭证使用需要授权”而非"凭证作废需要授权"
7.综合柜员做"7111客户凭证注销" 输入客户没有或已注销或已使用或已作废的凭证号，系统无任何提示,需要优化
8.支行凭证管理员执行“凭证入库”,"下发收缴"，"凭证出库销毁"业务时，错误提示不明确，应为“此类交易只能由总行库管员完成”
9.对公定期开户(转开)，当输入的柜员凭证号不正确时，显示提示并回车后，没有直接跳到"凭证号"输入框，"对方账号"仍需要重新输入，易用性不好
10.9303 凭证历史查询 输入不同的柜员号，查询结果都是全量查回未作过滤.
11.支行柜员作废的凭证3200142000012802，如何上缴给总行库管？？目前系统控制只能上缴状态为"正常"的凭证，无法上缴作废凭证，总行库管也无法完成后续的出库销毁。另外，9302查状态为"6.作废/出售回收"的转账支票，查不到这条作废的凭证,查数据库note_mst.sts=6是对的，原因待查
12.4201对公现金存款，输入对公定期户后提示“E0165请输入对公账号”，应具体说明"请输入对公活期账户"
13.证实书置换存单后，执行部提业务，输入账号，前台仍展示“单位定期证实书”，是否应显示“定期存单”？



116环境：
总行库管员  0197（机构03001）  授权柜员 0113  0101
支行授权柜员 0203
 
总行凭证库管员0197(com_branch.机构类型br_type=3总行营业部&&com_tel.lvl=8总库管理员)  --可做凭证入库，下发收缴,出库销毁
支行凭证管理员0298  --可做领入上缴，调剂(付出/收入)，作废/使用  
支行综合柜员 0204 ，0210  --可做调剂(付出/收入),凭证出售（只能出售给个人或对公活期户,定期户不能），客户凭证注销，挂失解挂


注：凭证出售给客户后，即成为客户凭证，柜员无法再"柜员凭证作废与使用"


特殊业务(交易撤销7701，冲正/补记7702，远程授权7703，未复核交易抹账7704，高级预授权7705)：什么样的柜员可以做？？

7610打印柜员流水


0197
现金支票3200141000073201-3200141000080500   3200141000081001-3200141000085000
转账支票3200142000008161-3200142000012000   3200142000013001-3200142000015000

0204 
柜员转账支票3200142000008013-100   5000047200105  5000047200014
柜员现金支票3200141000073072-100

已作废的转账支票  3200142000012802 （0298柜员无法上缴给总库，无法出库销毁）  

活期户5000047200014(专用户)
客户转账支票 3200142000008007-10
客户现金支票  3200141000073002-8 11-20

5000047200113(基本户)
客户现金支票 3200141000073022-3200141000073040
客户转账支票 

5000047200121(临时户)
客户现金支票 3200141000073044-3200141000073065


****************************理财代码走读********************************************

get_prdt_dparm()这个函数在哪定义的

sFn_appbuy_reg.intst=sFn_appbuy_reg.app_amt * get_prdt_iparm(cPrdt_no,"term")
                         * (sFn_appbuy_reg.rate + sFn_appbuy_reg.flt_radio)/L100/(get_prdt_iparm(cPrdt_no,"intst_rate_mode")==0?365:360);


pub_acct_trance_de  调用存取款主控
pub_de_get_FnAcct_parm 获取理财交易机构的募集账号，生成理财账号ac_no


ct_ind  现转标志 1：现金；2：转账
acc_ind 是否记账 0-否 1-是
ac_id_type 账户(存期)类型 1活期 2定期  9-?
add_ind 增减标志 0：减少；1：增加
dc_ind 借贷标志  1-借 2-贷
prt_ind 是否打印存折 0-否 1-是
hst_ind 明细核算标志 0-否 1-是


理财预约转认购gD160.c：
每日日终跑批，先查询产品信息表Fn_base_inf中，募集开始日期coll_beg_date为当天，产品状态prdt_sts为6-预约的所有产品记录。循环处理每条产品记录：{
根据产品号prdt_no查询理财购买登记薄Fn_appbuy_reg中app_kind为1-预约，sts为0-登记的记录，按登记日期reg_date和登记流水reg_trace升序排列。将查到的结果记录做循环处理，每一条处理：《判断购买方式是现金还是转账，现金的直接更新状态为5-转认购；如是转账的，先对付款卡的状态、余额等做一系列检查，检查通过后调存取款主控程序记账(相当于上主机)将借方卡中金额扣掉，记借方账。然后生成理财账户ac_no,对该理财账户再调一次存取款主控程序记账，记贷方账。最后，记交易流水。》 循环处理完当前产品所有预约购买记录后，更新Fn_base_inf中当前处理产品的产品状态为0-募集。}
Fn_base_inf表中所有的产品都处理完成后，提交事务，预约转认购处理完成。

*****************************************************************************************
晋中商行


公函： 
/* pubf_acct_trance.c文件中 */
pub_ins_trace_log 登记流水
pub_acct_trance() 交易记账   执行前要先给通用记账结构g_pub_tx中的相关变量赋值

/* pubf_acct_entry.c文件中 */
pubf_acct_proc（g_pub_tx.sub_tx_code）会计记账   
如记借方，需要先设置取款结构102域的102J币种，102F金额，g_pub_tx.产品号. (g_pub_tx.sub_tx_code参数为D003取款子交易)
如记贷方，需要先设置存款结构101域的101A币种，1013金额，g_pub_tx.产品号  (g_pub_tx.sub_tx_code参数为D099存款子交易)

后台交易写文件一般步骤：
char    sFilename[1024];
memset(sFilename,0x00, sizeof(sFilename));
pub_base_AllDwnFilName(sFilename);    
fp = fopen(sFilename, "w");    if (fp == NULL)     {    	sprintf(acErrMsg, "open file error [%s]", sFilename);			WRITEMSG			strcpy(g_pub_tx.reply, "S047");			goto ErrExit;    }
fprintf(fp, "~@儿童卡账号|@父母卡账号|@签约日期|@解约日期|@签约金额|@关联状态|\n");
fprintf(fp, "%s|%s|%ld|%ld|%-.2f|%s|\n", ac_no, tmp_ac_no,sMo_qzgl.tx_date,sMo_qzgl.untx_date,sMo_qzgl.qy_amt,tmp_stat);
fclose(fp);


增加卡介质要插入数据的4张表：note_parm凭证参数表，mdm_attr介质属性表，dic_data字典项目表，mdm_prdt_rel介质产品关系表

----------------------------------------------------------------------------------------------------

随心存签约，解约功能：
(1)3701IC卡开金太阳卡可同时签随心存
前台刷卡输入卡号，并做相关的校验，然后调后台2101交易，2101交易中新增调D313随心存签约子交易，D313交易中判断只允许金太阳卡才能签随心存。
当前业务只允许在3701IC卡开金太阳卡时执行随心存签约，其他卡类型暂不支持随心存签约，前台将3313.xml交易屏蔽掉了，不允许其他卡种签随心存(spD313会做判断，开非金太阳卡时直接跳过随心存签约子交易，完成开户)
开户时按选择分为"普通签约"和"开户后签约",设置mo_sxc.qy_type为1-开户签约 2-普通签约.  状态sts为1-签约 *-解约 

(2)解约分 S-"销户自动解约"和"普通解约"

签约和解约前都要调pub_acct_trance()滚动积数.  解约时调pubf_base_intstHQ.c中的iSxc_intst(,,,'4')解约结息并更新随心存明细mo_sxc_hst，登记mo_sxc_hst_intst。
最后检测是否全部解约结息---查mo_sxc_hst表中，如还有（ac_id=%ld and ac_seqn=%d and sts='1'--已签约）的记录，说明未全部解约结息，报错返回



*****************************************************************************************************
计算遂心存利息函数： pubf_base_intstHQ.c中
int iSxc_intst(long ac_id, long ac_seqn, double tx_amt, double *intst, char flag)
参数说明：tx_amt 释放金额
          flag   标志   '0'-试算利息、不需要登记明细  '2'-释放算息、需要登记明细  '4'-解约结息、需要登记明细 

PS:其实就是逐条计算mo_sxc_hst的每条明细的利息，并更新状态(1-正常，*-结清)和明细余额hst_bal，最后返回所有明细利息dIntst_hst的总利息dIntst。

本函数功能详细如下：
根据账户id逐条取mo_sxc_hst中的记录
比较剩余释放金额dSy_tx_amt和每条记录中的明细余额hst_bal来确定每笔需释放金额dTx_amt。
调明细利息函数iSxc_hst_intst()计算本笔释放金额dTx_amt的利息dIntst_hst。即计算遂心存每一条明细的利息dIntst_hst，并登记结息明细Mo_sxc_hst_intst。
更新原登记明细mo_sxc_hst中的intst，hst_bal及sts（如hst_bal为0，则状态改为结清*）
更新释放总利息dIntst += dIntst_hst;
更新剩余释放金额dSy_tx_amt -= dTx_amt; 
如果dSy_tx_amt =0，退出循环，完成本次释放金额更新处理

举例：如要释放130元，查到mo_sxc_hst中有一条记录hst_bal为100，一条记录hst_bal为50。则第一条处理完后，hst_bal为0，sts=*.第二条处理完后，hst_bal为20，sts=1

-----------------------------------------------------------------------------

遂心存明细利息函数：pubf_base_intstHQ.c中
iSxc_hst_intst(struct mo_sxc_hst_c mo_sxc_hst, double tx_amt, double *intst_hst, char flag)
参数说明：tx_amt 释放金额
          flag   标志   '0'-试算利息、不需要登记明细  '2'-释放算息、需要登记明细 '3'-结息、需要登记明细  '4'-解约结息、需要登记明细 
函数功能：如flag=2,3,4,更新处理mo_sxc_hst表和mo_sxc_hst_intst两张表。
释放一条mo_sxc_hst表明细，登记一条mo_sxc_hst_intst结息明细(类型为 2-释放 or 3-结息 or 4-解约结息,状态都为*-结清)。
如果参数flag为3-正常结息，则sMo_sxc_hst_intst.hst_bal = mo_sxc_hst.hst_bal;
如果flag为2-释放结算或4-销户结息，则sMo_sxc_hst_intst.hst_bal = mo_sxc_hst.hst_bal - tx_amt;  与mo_sxc_hst中的hst_bal保持一致。

本函数靠档利率计算方法：
(1)调pub_base_CalTrueDays(mo_sxc_hst.rate_date, g_pub_tx.tx_date)计算取利率的天数iDays
(2)根据利息天数iDays的不同长度，设置利率日期lRate_date和靠档利率编号cRate_code，调函数pub_base_getllz(cRate_code, "01", lRate_date, &dRate_val)取利率值dRate_val   "01"为币种号码
(3)调 pub_base_CalTrueDays(mo_sxc_hst.ic_date, g_pub_tx.tx_date);计算计息天数iIntst_days
(4)调pub_base_PubDround_1(tx_amt * iIntst_days * dRate_val / L360 / L100);计算明细利息dIntst_hst



**************************************************************************************************

gD158.c：亲子关联自动划转程序
逐条取Mo_qzgl签约记录，如果签约状态为*-已解约，则取下一条处理。根据取到的父母id+儿童id+交易日期，查Mo_qzgl_hst中当月是否有转账明细，若查到已有转账则continue处理下一条。查不到，则进行父母卡向儿童卡转存。分别进行交易转账处理(pub_acct_trance)和会计记账处理(pubf_acct_proc：父母卡调D003取款，儿童卡调D099存款)，转账完成后向Mo_qzgl_hst中插入亲子转账明细。

gD156.c:随心存日终处理（小结：存入记mo_sxc_hst表，取款结息记mo_sxc_hst_intst表）
逐条取Mo_sxc中(sts='1'已签约 and flag='1'当日发生业务)的账户记录,根据取到的账户id查dd_mst表。
计算轧差(卡的活期余额-遂心存余额-留存金额 目前账户留存金额为0)。
(1)轧差金额为负，则释放随心存金额  ---释放金额dGc_up_amt由轧差金额dGc_amt和dBs_amt计算得到。
调iSxc_intst()释放算息dIntst（本函数处理完成后已完成遂心存明细mo_sxc_hst表中相应记录的状态更新和mo_sxc_hst_intst明细的登记），算出明细结息和dIntst
如果(结出利息dIntst + 未入账利息mo_sxc.un_intst>1)大于1元，则调iAcct_sxc_intst()入客户账（分别调pub_acct_trance交易记账和pubf_acct_proc("D099")会计记账--进行贷方记账，再调pub_acct_trance内部账存取和pubf_acct_proc("A016")内部账会计记账--进行借方记账）,入账后未入账利息mo_sxc.un_intst清空为0
如果(结出利息dIntst + 未入账利息mo_sxc.un_intst<1)小于1元, 暂不入客户账，将结息dIntst累加到未入账利息mo_sxc.un_intst中。
更新随心存余额sMo_sxc.bal -= dGc_up_amt;
更新总的结出利息sMo_sxc.intst += dIntst; 
计算出的利息dIntst倘若大于“随心存触发生效阀值”，也需要转入随心存，修改随心存登记簿余额sMo_sxc.bal += dIntst; 
最后将sMo_sxc的最新值更新回Mo_sxc登记薄。
(2)轧差金额为正，则登记Mo_sxc_hst明细表。---存入金额dGc_down_amt由轧差金额dGc_amt和dBs_amt计算得到。
首先判断活期账户余额，达到生效阀值才登记明细
已存在当天的明细，则更新这条明细中的"交易金额"tx_amt，"明细余额"hst_bal。（如果存在直接更新,保证同一个rate_date只存在一条记录）
不存在当天的明细，登记Mo_sxc_hst(其中tx_amt和hst_bal都为本次存入金额dGc_down_amt)。
更新或新插入新明细到Mo_sxc_hst后，修改登记簿余额sMo_sxc.bal += dGc_down_amt
最后将sMo_sxc的最新值更新回Mo_sxc登记薄，将mo_sxc.flag重置为0-未发生结息业务
(3)轧差金额为0，不需更新Mo_sxc_hst、也不需释放结息登记mo_sxc_hst_intst。
循环处理完Mo_sxc中所有记录后，批量结束。
手工跑批:/app/devht/bin  目录下 eodtst gD156.so gD156 0

gD157.c: 遂心存日终结息入账处理 达到配置天数后执行
(1)查com_parm表中"遂心存年度结息相隔天数"iDays,向前推算 iDays天前的日期lDate（调lDate = pub_base_daynumSUB(g_pub_tx.tx_date, iDays);）
(2)查mo_sxc_hst表中，满足"sts='1' and ic_date<=lDate order by ac_id"条件的记录，查不到退出函数；查到继续处理
(3)计算每笔mo_sxc_hst明细的结息，iSxc_hst_intst(sMo_sxc_hst, sMo_sxc_hst.hst_bal, &dIntst_hst, '3');
(4)更新mo_sxc_hst中的两个字段：结出利息intst,起息日期ic_date，即结息完后，Intst为累加新结出利息后的，ic_date更新为当前交易日期tx_date

当com_parm中配置天数很大时，这个函数基本都是空跑，因为查不到符合的记录

-------------------------------------------------------------------------------------------------------

8319金太阳卡签约查询(实际是：亲子关联签约查询)，根据划的金太阳卡或父母卡查 Mo_qzgl表，查出所对应的签约信息。
8314金太阳卡明细查询(实际查的是随心存明细和结息明细)，调sp8314,根据输入的卡账号，查到账户id,再去查Mo_sxc_hst表中的随心存转账明细
Mo_sxc_hst.type  1-登记
Mo_sxc_hst.sts  1-正常 *-结清
如果在前台勾选了显示结息明细，则在查到Mo_sxc_hst表中的一条转账明细后，再去查结息明细表Mo_sxc_hst_intst显示结息明细。
即显示一条Mo_sxc_hst明细，紧接着显示一条Mo_sxc_hst_intst结息明细。遁环显示完Mo_sxc_hst中的所有记录。
显示字段如下：
@状态|@类型|@起息日期|@交易日期|@交易金额|@明细余额|@已结利息|@计息天数|@计息利率

最后查Mo_sxc签约表，根据"未入账利息"un_intst是否>0，进行不同显示如下

签约日期:%ld|解约日期:%ld|遂心存余额:%.2f|已结利息:%.2f|未入账利息:%.2f||\n"
签约日期:%ld|解约日期:%ld|遂心存余额:%.2f|已结利息:%.2f|||\n

8315金太阳卡利息试算
根据前台传入的操作类型cFlag进行分类试算。
cFlag: 1-签约查询 2-短交易查询返回前台用 3-解约利息试算 4-签约利息试算

如为1-签约查询，查mo_sxc表
如查状态为*-已解约的记录，则查开始日期<=untx_date<=结束日期；
如查状态为1，则查开始日期<=tx_date<=结束日期；

-----------------------------------------------------------------------------------

15域：会计代码结构
19域：交易结构
96域：大额支付
100域：公用补充结构
101域：存款交易结构
102域：取款交易结构
103：开户交易结构
105：销介质交易结构
106：贷款放款结构
107：贷款还本结构
108：贷款还息结构
109：按揭还款结构
112:内部帐开户结构
114:支取方式校验结构
116:开介质结构
120:内部帐借方记帐
121:内部帐贷方记帐
122:费用结构
123:大额支付
124:收费返回结构


***********************************************************************

9901登记薄查询
3410 更换介质
3711 IC卡补换卡  后台2410(spD410中调pubf_acct_chg_mdm.pub_acct_chg_mdm）


查哪些函数调pub_base_InsMo_opn_cls
/app/devht/src>find  . -name "*c" |xargs grep "pub_base_InsMo_opn_cls"

./pubf/base/pubf_base_InsTab.c:*              pub_base_InsMo_opn_cls   登记开销户登记簿
./pubf/base/pubf_base_InsTab.c:* 函 数 名：  pub_base_InsMo_opn_cls
./pubf/base/pubf_base_InsTab.c:int pub_base_InsMo_opn_cls( char *name , char *acc_hrt , char *wrk_sts )


旧账号放在g_pub_tx.ac_no
新账号放在g_pub_tx.crd_no

pubf_acct_chg_mdm.c 中 pub_chg_mdm()正常换证函数逻辑：
(1)凭卡开户换证，根据g_pub_tx.crd_no查Mdm_ac_rel表检查卡号是否已经开过，查到报错退出；
查不到用g_pub_tx.ac_no去查Mdm_ac_rel,更新旧账号的凭证状态note_sts为3-正常换证，更新g_mdm_ac_rel中当天记录。
获取新卡号，新凭证号及密码后，登记新开帐户到介质帐户对照表。
登记新卡到开销户登记簿
(2)无卡换证，
用g_pub_tx.ac_no去查Mdm_ac_rel,更新旧账号的凭证状态note_sts为0-正常？？？，获取新凭证号及密码，然后更新回g_mdm_ac_rel中当天记录

pub_loss_chg_mdm()挂失换证函数逻辑：
首先检查原账号的状态是否为1-挂失，不是报错
根据前台选择的挂失模式mode(2-书挂，3-书挂兼密挂)，对这条账号记录分别调pub_un_loss( mode , 1 ) 进行解挂
将旧介质的相关信息(prdt_code，cif_no等)写入开销户登记簿，pub_base_InsMo_opn_cls(g_pub_tx.name,"","2");执行销户登记
读旧账号的介质属性
开新账户，如为凭卡开户，刷卡检查卡是否已开过并根据卡号取凭证号；如为无卡开户，调pub_base_CrtCifAc(g_pub_tx.cif_no,new_ac_no)凭客户号生成新的客户显示账号new_ac_no
如为部提换证，判断原账号是否为金额<10万的个人特种存单（note_type为014），如是则换新凭证为普通储蓄整整定期存单（note_type为013），调pub_com_NoteUse()使用新凭证.
换证完成后，修改原账号的凭证状态note_sts(2-挂失换证 4-部提换证)并更新表
新开户信息登记开销户登记簿


这个函数写的挺乱的，有必要多看看

*****************************************************************
 注意：后台set_zd_data()，set_zd_long(),set_zd_double()里用到的域变量要传到前台，需在交易的bit_map里的相应位设置为1,如
2101交易的.c文件里有用到set_zd_data("0460",#str); 要在2101交易的tx_def.bitmap的第46位置为1.

修改公函后，需重新编译。先appstop停掉服务，再在公函所在目录输入make，则会编译当前目录下的所有公函，并在/lib目录下生成lib+目录名.so文件，最后appstart启动服务。
如在pubf/base/目录下修改pubf_base_acm.c后，停服务后直接输入make进行编译，在/lib目录下生成新的libbase.so文件后重启服务

!!!!新增介质需要初始化的表：note_parm, mdm_attr,mdm_prdt_rel,dic_data

发短信通知公函 pub_mob_sendmail_bat();

u_servmain.c 执行错误时，会在当前目录下生成core,
查看错误产生的源码方法：输入dbx uservmain core 进去后where 可看到是在哪个c文件执行时down掉了

新旧账号对照表 Mo_merge_ac   pubf_base_ac.c里的pub_base_old_acno(char * ac_no)

**********************************************
最近修改点：

1.3701开卡交易，后台2101交易的bit_map第30，49，70位要置为1

2.6223.XML 新增返回亲子关联签约金额字段打印：
(1)sp8320.c 182行 新增39域返回签约金额  set_zd_double("0390", sMo_qzgl.qy_amt); /**6223中返回签约金额**/
(2)6223.XML 新增#PARCH_QY_AMT接收39域的值，赋给#QY_AMT_6进行打印显示
(3)修改2320交易tx_def中bitmap第39位为1 （后台返回值设置域时需要置为1）

3.3313 随心存签约,修改取卡号的7，8位进行判卡类型,控制非金太阳卡跳过签约
(1)修改spD313.c   
/**随心存只针对金太阳卡和复合测试卡2开放，其他卡不能签约随心存 20151128**/
     
if(strcmp(sMdm_ac_rel.mdm_code,"0027")!=0 && strcmp(sMdm_ac_rel.mdm_code,"0032")!=0)
   goto OkExit;

4.新增正常换卡后新卡登记开销户登记簿   20151110
修改pubf_acct_chg_mdm.c 944-989行

5.修改3313.XML里98，102行，读取方式判断0-IC卡，1-磁条卡

6.3701开户记账，科目由21101-"活期储蓄存款"改记到"21104-"其他活期储蓄存款"    利息支出由52103-"活期储蓄存款利息支出"改记到52110-"其他利息支出"
修改点：
(1)屏蔽ICOPNACCTDEFAULT.IMP 539行， 原先为 #PRODNO='101';(下拉框由上一页选介质种类后查回并初始化,无需再赋值)
(2)修改介质产品表中金太阳卡对应的产品编号prdt_no为104
insert into MDM_PRDT_REL (PRDT_NO, MDM_CODE1, MDM_CODE2, MDM_CODE3) values ('104', '0027', '----', '----');
(3)活期参数表新增
--新增产品
insert into dd_parm (PRDT_NO, TITLE, BEG_DATE, END_DATE, CIF_TYPE, CUR_NO, STTL_TYPE, AC_TYPE, BAL_TYPE, MIN_BAL, MAX_BAL, MIN_OPN_AMT, MAX_OPN_AMT, OPN_CHRG_IND, OPN_CHRG_CODE, THR_OPN_IND, THR_CLS_IND, LMT_CODE, FWD_INFRM_CODE, INTST_BAL_TYPE, INTST_TERM_TYPE, INTST_MAX_BAL, INTST_MIN_BAL, RATE_NO, RATE_TYPE, RATE_MODE, RATE_FUNC_CODE, MIN_FLT_RATIO, MAX_FLT_RATIO, INTST_TYPE, ACM_CALC_TYPE, INTST_MON, INTST_DAY, TAX_NO, CHRG_TERM_TYPE, CHRG_CODE, DRT_NO, MIN_DRT_AMT, LMT_DRT_AMT, KEEP_CHRG_CODE, OPN_DTR_TERM, OPN_DTR_TYPE, TX_DRT_IND, DTX_DRT_IND, SLP_COND, SLP_CHRG_IND, CLS_COND_NO, HST_KEEP_TERM, HST_KEEP_TYPE, PRT_IND, SLP_PRT_IND, PRT_TERM, PRT_TERM_TYPE, DPST_IND, DRAW_IND, THR_DPST_IND, THR_DRAW_IND, OPN_APLIC_IND, CASH_IND, SINGL_IND, OD_APLIC_IND, LKG_IND, OWNER_PRDT_NO, OPN_LMT, CLS_LMT, DC_CODE, PUT_IND)
values ('104', '金太阳卡活期', 19850101, 99999999, '1', '01', 'D', '5', 'C', 0.00, 0.00, 1.00, 0.00, 'N', '000', 'Y', 'Y', '000', '000', 'C', '0', 0.00, 0.00, '100', '0', 'F', '000', 0.00000, 0.00000, '4', '2', 3, 20, '001', 'N', '000', '000', 0.00, 0.00, '000', 1, 'Y', 'Y', 'Y', '000', 'N', '000', 5, 'Y', 'Y', 'Y', 1, 'Y', 'Y', 'Y', 'Y', 'Y', 'N', 'Y', 'Y', 'N', 'N', '000', 0, 0, '2114', 'N');
(4)会计代码对应科目表新增参数：
insert into dc_acc_rel (DC_CODE, MO, ACC_HRT, DATA_CODE)
values ('2114', '其他活期储蓄存款', '21104', '0152');
insert into dc_acc_rel (DC_CODE, MO, ACC_HRT, DATA_CODE)
values ('2114', '应付利息税', '26800', '0154');
insert into dc_acc_rel (DC_CODE, MO, ACC_HRT, DATA_CODE)
values ('2114', '其他利息支出', '52110', '0153');

7.金太阳卡存取款交易后，mo_sxc.flag未更新为1-当日发生业务： 
修改pubf_base_acm.c 166行，增加存取款判断条件
strcmp(g_pub_tx.tx_code,"2201")==0 || strcmp(g_pub_tx.tx_code,"2202")==0 || strcmp(g_pub_tx.sub_tx_code,"D099")==0 || strcmp(g_pub_tx.sub_tx_code,"D003")==0

20160811 增加两个新的判断(网银和pos消费,手续费)  strcmp(g_pub_tx.sub_tx_code,"HPDF")==0 || strcmp(g_pub_tx.sub_tx_code,"F000")==0

8.修改金太阳卡存取款时凭证类型显示为空：
(1)dic_data 表新增金太阳卡类型 insert into dic_data (PR_CODE, PR_SEQ, CONTENT) values ('per_dety', '027', '金太阳卡');
(2)DPACTINFO.IMP 387行  #VOCTYPE下拉框，增加<OPTION VALUE="027" TITLE="0.金太阳卡"/>
SVACTINFO.IMP 194行 #VOCTYPE 下拉框，增加<OPTION VALUE="027" TITLE="0.金太阳卡"/>


9.对公活期开户，去掉签约随心存选项   屏蔽OPN_ACCT_PAGE3.IMP 中对应<item></item>

10.sp9952.c 有用到71域返传前台数据，tx_def表中9952交易bitmap第71位要置为1


11.增加取款时手输账号时对621780卡bin类型卡的过期判断：
(1)sp8115.c 156行 增加 set_zd_long("0460",vmdm_ac_rel.end_date); /*返回给3202.XML交易查金太阳卡的过期日期 20151119*/
(2)8115交易bitmap第46位置1
(3)DPACTINFO.IMP  修改70-106行如下

12. 3701交易新增介质种类的开户（复合员工卡，复合薪资卡，复合测试卡）
修改ICOPNACCTDEFAULT.IMP 
(1)168行新增返回复合员工卡，复合薪资卡，复合测试卡1，复合测试卡2：
@sel_buf=substr(@tota,96,32)+substr(@tota,128,32)+substr(@tota,160,32)+substr(@tota,192,32)+substr(@tota,224,32)+substr(@tota,256,32);

(2)修改379行  if(#JZZL=='0020' or #JZZL=='0024' or #JZZL=='0027'or #JZZL=='0028' or #JZZL=='0029' or #JZZL=='0031' or #JZZL=='0032')

(3)343行 新增：
//卡种账号与类型校验
				
if(substr(#CARDNO,6,2) != '30' and #JZZL == '0024')  普卡
if(substr(#CARDNO,6,2) != '56' and #JZZL == '0028')  员工卡
if(substr(#CARDNO,6,2) != '18' and #JZZL == '0029')  薪资卡
if(substr(#CARDNO,6,2) != '44' and (#JZZL == '0031'or #JZZL == '0032')  测试卡

(4)247行
if(#JZZL!='0024' and #JZZL!='0027'and #JZZL!='0028'and #JZZL!='0029'and #JZZL!='0031'and #JZZL!='0032')


13. 9917交易bitmap 103位置1
14. 7101.xml，7102.xml，7103.xml，7104.xml，7106.xml，7110.xml 增加对凭证号码与所选卡种的校验
15. 3204.xml 储蓄销户交易增加D318亲子关联解约子交易。(好像只加了D316随心存解约子交易,需确认)
16.修改menu.xml里的金太阳卡名称
17.修改3317.xml里显示和打印，由"父母"修改为"家长"
18.修改2101.xml里,注掉 @rh=PrintBilldata(); 相关语句
19.修改6223.xml里，2320交易bitmap 39位置1
20.3317.XML 注掉身份证刷卡功能   275行增加判断是否已签约，提前提示
21.修改sp8319.c "未签约"修改为"已解约"

22.删除mo_qzgl表的唯一索引，允许客户多次进行亲子关联的签约，解约  drop index MO_QZGL_IDX1;

23. 0008.XML 金太阳卡不能签约(大为已改)

24.修改3204交易，ACINFO3204.XML 452行  #VOCTYPE 增加<OPTION VALUE="009" TITLE="0.金太阳成长存单"/>

25.修改3103.xml，102行增加判断   if(#JZZL=='0009'){
showmsg('请插入金太阳成长存单打印...');
}
   修改OPN_PRT_VOC.IMP,457行增加金太阳成长存单打印格式

26.3317加“划转日期”HZ_RQ，可选择每月8，18，28日扣款。
(1)修改3317.XML spD317   使用FD51域进行传值
(2)gD158.c

27.随心存余额在结息后没有正常减掉。 
(1)修改pubf_base_intstHQ.c 中公函471行，加上对mo_sxc.bal的更新 
/*更新随心存余额,这样已结利息会在日终转入随心存，产生复利 add by wp 20151126*/
            
iRet = sql_execute("update mo_sxc set bal=bal-%lf where ac_id=%ld and ac_seqn=%d and  sts='1'", \
                                       dTx_amt, ac_id, ac_seqn);
            
if(iRet)
            
{
 strcpy(g_pub_tx.reply, "D102");
 
sprintf( acErrMsg, "更新Mo_sxc.bal出错!!!" );
WRITEMSG
 
goto ErrExit;
}
(2)修改gD156.c  209行增加结息转存随心存

28.增加新功能8320交易，打印金太阳卡存取款明细 。修改menu.xml，新增2321交易，8321子交易，sp8321.c
(1)新增8320.XML,sp8321.c

29.修改3201，3202交易，打印凭证，对于金太阳卡不显示"利率"值（瑜平已改）

30. 修改了mo_sxc_hst_intst.rate 为number(16,3) 投产时需要重新编译libpubdb.so 覆盖

31.修改3101，3102，记表时dd_mst_hst.brf 摘要字段为"结息"

32.9102 “随心息”改为“结息”：修改pubf_base_prt.c 

33.3701金太阳卡开户，去掉最后一页中的"计息类型"  修改ICOPNACCTPAGE3.IMP 
(1)142行  增加NAME="TJXLX"   
(2)<FIRSTINIT>中增加介质类型判断，如是金太阳卡，屏蔽"计息类型"

34.3204储蓄销户时，修改ACINFO3204.IMP  10行m($MSR2,1,19) 修改为M($MSR2,1,19)

35.修改sp8315.c中 141行，“随心存余额”改为"计息中金额"

36.ICOPNACCTDEFAULT.IMP 增加代理人年龄限制，不满18岁的不能代理

37.8320.XML 增加对金太阳卡和家长卡的身份验证

37.IC卡换卡后，自动转移亲子关联签约(签约时以ac_id建立关系的，无需修改)

39.利息试算
pub_base_deadlineM(g_pub_tx.tx_date,iMouth,&lQx_Date)   计算g_pub_tx.tx_date在iMouth个月后的日期lQx_Date


40.修改spD313.c  51行  只针对金太阳卡和复合测试卡2开放随心存签约    
 if(strcmp(sMdm_ac_rel.mdm_code,'0027')!=0 && strcmp(sMdm_ac_rel.mdm_code,'0032')!=0)
     	
  goto OkExit;

41.mo_sxc_hst_intst 表字段(ac_id,ac_seqn,rate_date,sts)加索引

42.3317.XML 139行，放开对挂失卡的亲子关联解约限制，挂失状态的允许解约亲子关联

43.零整定期计息公式：
利息=月存金额*累计月积数*月利率
累计月积数= （存入次数+1）/2 * 存入次数
零存整取一年期年利率 1.43%
月存1000，存一年，利息=1000* [(12+1)/2*12]  * [1.43%/12]=1000*78*[1.43%/12]=92.95

零整一年期 1.43%
零整三年期 1.69%
零整五年期 3.30%

44.修改8315交易的“签约利息试算”结果列表中第一列名字为“存入日”.生产上替换sp8315.so即可

45.修改3317.XML 在选择签约类型lostfocus时，判断介质状态；同时放开239-248行对家长卡的账户状态和冻结状态的控制

46. [20160107]   
修改spD316.c 147行注掉登记trace_log，另外注掉sql_commit和sql_rollback,在最后由user_servmain统一进行数据库提交和回滚
修改spD202.c  524行增加set_zd_double("102P", dIntst_sxc); 将随心存销户结出的利息通过102P传值。因为分录定义表dc_entry中有定义entry_code=D20200的amt_no(发生额数据编码)为102P-102Q


select t.*,t.rowid from tx_dc_rel t;  --交易会计关系表
select t.*,t.rowid from dc_entry t; --分录定义表
******************************************************************************************************

转序号公函：pubf_base_ac.c 
如账户对应产品号为活期（产品号以1开头），使用币种转换ac_seqn
ret=pub_base_CurToSeqn(g_pub_tx.cur_no,&g_pub_tx.ac_seqn);   (活期)币种转换成账户序号

如g_mdm_ac_rel.ac_seqn=9999，即为多账户介质，使用pub_base_CrtAcSeqn( g_pub_tx.ac_id , &g_pub_tx.ac_seqn ); 查账户序号ID表中可用的最大账户序号，+1并更新ac_seqn_id.ac_seqn_id后，返回给g_pub_tx.ac_seqn

ac_seqn_id表：记录了每个ac_id可使用的最大账户子序号

******************************************************************************************************
高级->配置->应用程序布局->文件标签->操作

#############################################################
=0839; (000000)
<1928: (111111)


对公客户号：50168392

**************************客户经理揽存关联项目****************************

（1）新增2207交易：客户经理揽存关系维护
新增2207.XML 
修改tx/short/sp9759.c   增加67域返回账户类型, tx_def中9759交易的bitmap 67位置1   需要重新编译
新增tx/short/sp9029.c   根据账号或客户号查询揽存客户经理信息回显   81，88，93域
新增tx/short/sp9016.c  增加客户经理信息查询  86,91域
新增tx/cif/spC205.c    无返传域
ERR8583.XML   增加
<EC223 DESC="此账户或单位编码无揽存关联信息!"/>
<EC224 DESC="客户经理信息未录入!"/>
<EC225 DESC="登记客户经理揽存信息登记薄异常出错,请与中心机房联系!"/>
<EC226 DESC="此客户无揽存关联信息!"/>
<EC227 DESC="客户经理信息已存在，请维护!"/>

(2)新增2206客户经理信息维护  新增2607交易码
新增tx/cif/spC607.c
新增2206.XML

(3)新增表mang_inf.sql,mang_save_rel.sql 

(4)新增2208.XML 客户经理详细查询
新增交易码9017
新增tx/short/sp9017.c

(5)新增2209.XML 客户经理揽存关系详细查询
新增交易码9030
新增tx/qury/sp9030.c

(6)新增交易码：
insert into tx_def (TX_CODE, TX_NAME, BIT_MAP, LOG_IND, TX_TYPE, WRK_STS)
values ('9029', '客户经理揽存关系查询', '10000000000000000000000000000000000000000000000000000000000000000000000000000000100000010001100000000000000000000000000000000000', '1', '4', '2');
insert into tx_flow_def (TX_CODE, FLOW_CODE, SUB_TX_CODE, SUB_TX_RSLT)
values ('9029', 0, '9029', '#$');
insert into tx_sub_def (SUB_TX_CODE, SUB_TX_NAME, TX_FUNC, ACCT_IND, CHNL_IND)
values ('9029', '客户经理揽存关系查询', 'sp9029', '0', '0');


insert into tx_def (TX_CODE, TX_NAME, BIT_MAP, LOG_IND, TX_TYPE, WRK_STS)
values ('9016', '客户经理查询', '10000000000000000000000011000000000000000001110000000000011001000011100000000010100001000010000000000000000000000000000010000000', '1', '4', '2');
insert into tx_flow_def (TX_CODE, FLOW_CODE, SUB_TX_CODE, SUB_TX_RSLT)
values ('9016', 0, '9016', '#$');
insert into tx_sub_def (SUB_TX_CODE, SUB_TX_NAME, TX_FUNC, ACCT_IND, CHNL_IND)
values ('9016', '客户经理查询', 'sp9016', '0', '0');


insert into tx_def (TX_CODE, TX_NAME, BIT_MAP, LOG_IND, TX_TYPE, WRK_STS)
values ('1205', '客户经理揽存关系维护', '10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000', '1', '6', '2');
insert into tx_flow_def (TX_CODE, FLOW_CODE, SUB_TX_CODE, SUB_TX_RSLT)
values ('1205', 0, 'C205', '#$');
insert into tx_sub_def (SUB_TX_CODE, SUB_TX_NAME, TX_FUNC, ACCT_IND, CHNL_IND)
values ('C205', '客户经理揽存关系维护', 'spC205', '0', '0');
insert into auth_item (TX_CODE, SEQN, CODE_AC, CODE_SEQN, CODE_AMT, CODE_DC, CODE_CT, CODE_XX, CODE_YY, CODE_ZZ, IND, MO)
values ('1205', 1, '', '', '', '', '', '', '', '', '0000', '客户经理揽存维护');
insert into auth_cond (TYPE, NO, TX_CODE, SEQN, MO, COND)
values ('S', 0, '1205', 1, '客户经理揽存维护', 'sq(1237)');

insert into tx_def (TX_CODE, TX_NAME, BIT_MAP, LOG_IND, TX_TYPE, WRK_STS)
values ('2607', '客户经理信息维护', '10000000000000000000000011000000000000000001110000000000011001000011100000000010100001000010000000000000000000000000000010000000', '1', '6', '2');
insert into tx_flow_def (TX_CODE, FLOW_CODE, SUB_TX_CODE, SUB_TX_RSLT)
values ('2607', 0, 'C607', '#$');
insert into tx_sub_def (SUB_TX_CODE, SUB_TX_NAME, TX_FUNC, ACCT_IND, CHNL_IND)
values ('C607', '客户经理信息维护', 'spC607', '0', '0');
insert into auth_item (TX_CODE, SEQN, CODE_AC, CODE_SEQN, CODE_AMT, CODE_DC, CODE_CT, CODE_XX, CODE_YY, CODE_ZZ, IND, MO)
values ('2607', 1, '', '', '', '', '', '', '', '', '0000', '客户经理信息维护');
insert into auth_cond (TYPE, NO, TX_CODE, SEQN, MO, COND)
values ('S', 0, '2607', 1, '客户经理信息维护', 'if(#0720=1){sq(1237)}');

insert into tx_def (TX_CODE, TX_NAME, BIT_MAP, LOG_IND, TX_TYPE, WRK_STS)
values ('9017', '客户经理详细查询', '10000000000000000000000000000000000000000000000000000000000000000000000000000000100000000001100000000000000000000000000000000000', '1', '4', '2');
insert into tx_flow_def (TX_CODE, FLOW_CODE, SUB_TX_CODE, SUB_TX_RSLT)
values ('9017', 0, '9017', '#$');
insert into tx_sub_def (SUB_TX_CODE, SUB_TX_NAME, TX_FUNC, ACCT_IND, CHNL_IND)
values ('9017', '客户经理详细查询', 'sp9017', '0', '0');

insert into tx_def (TX_CODE, TX_NAME, BIT_MAP, LOG_IND, TX_TYPE, WRK_STS)
values ('9030', '客户经理详细详查', '10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000', '1', '4', '2');
insert into tx_flow_def (TX_CODE, FLOW_CODE, SUB_TX_CODE, SUB_TX_RSLT)
values ('9030', 0, '9030', '#$');
insert into tx_sub_def (SUB_TX_CODE, SUB_TX_NAME, TX_FUNC, ACCT_IND, CHNL_IND)
values ('9030', '客户经理详细详查', 'sp9030', '0', '0');

(7)mang_no需要修改使用的域变量 目前FD92域长度只有4，改成使用88域(长度为10) 所有交易已改成使用88域
(8)在建立客户ID同时关联揽存客户经理: 在交易的流程定义表tx_flow_def中增加调用C206子交易，2101.XML中使用83域给spC206.c传值。


***********************************
2016.03.25

投产前的为存量用户，只允许其名下账号与客户经理关联，不允许客户号与客户经理关联
投产后的为增长用户，只允许客户号与客户经理关联，不允许其名下的账号与客户经理再做关联，默认其名下账号已与客户经理关联

方案：
(1)修改2207.XML，
如果是关联客户，需要判断客户的创建日期cif_basic_inf.crt_date,如创建日期小于投产日期的，不允许进行客户经理关联。
如果是关联账号的，需要根据账号取到属于是哪个客户cif_no,再判断是存量客户还是投产后增长的客户。如果是投产后增长的客户,不允许进行其名下账号与客户经理的关联

(2)修改公函 src/pubf/base/pubf_base_ac.c  477行加一行  g_pub_tx.cif_no = g_prdt_ac_id.cif_no; 
  (sp9759.c中会返回公函中返回的g_pub_tx.cif_no给前台)
  需要appstop停服务后重新编译libbase.so
  
(3)修改src/tx/short/sp9759.c 增加用29域返回cif_no到前台  ,tx_def中9759交易码的bit_map中29位置1 

(4)9848交易tx_def.bitmap 的44位置1，修改src/tx/short/sp9848.c新增返回客户建立日期 ,55行增加 set_zd_long( "0440", sCifBasicInf.crt_date );

*******************************************
2016.05.12
关于2209客户经理关联查询交易，目前生产上出现以下缺陷，请给予解决。
一、理财产品认购撤销后，2209查询时系统仍显示关联内容。需要修改为：如理财产品认购撤销，系统自动解除关联，或状态标为认购撤销状态。
    
修改为：理财产品认购撤销，系统自动解除关联

(1)修改4708.XML ,<COMMSEND>标签中增加以下脚本：
   19行增加：
   //add by wp 20160512 
   //格式：是否关联(0否1是)|关联类型(1客户号2活期3定期4贷款5单位6理财协议编号)|关联值|关联客户经理号
   $FD83='0|6|'+#XYBH+'|'; 
   
   316行和426行增加  #XYBH = list_gettext(@id,3);
   452行增加：<ITEM LINE="17" COL="5"  TYPE="%-12s"  FUNCTIONS="T(协议编号:)"/>
   459行增加：<ITEM NAME="#XYBH"    INPUT="LABEL"  LINE="17" COL="15"  TYPE="%-12s"  FUNCTIONS=""/>

(2)修改src/tx/cif/spC206.c 增加解除关联模块


二、2209查询交易，明细查询不全，需要显示全部(生产已替换)
(1)修改sp9030.c  原因是代码中每写出一次数据都重新输出一次标题，导致前台处理错误。修改为在while前只显示一次标题
    


*****************************新增贷款科目***********************************************
增加贷款科目，涉及5张表  com_item, dc_acc_rel, ln_parm, gl_mst, gl_sub 

1.gl_mst和gl_sub中一级、二级、三级科目都需要加。 gl_mst中加一条总行(10000)的数据，gl_sub中加所有未关闭机构的数据(共24条). 执行插入脚本前需保证com_item表中有基础数据。
2.dc_acc_rel中新增一个会计代码dc_code(如12AA),对应5个科目acc_hrt(如：中型企业固定资产贷款17012，中型企业固定资产贷款应收利息133W2，中型企业固定资产贷款利息收入501P2，中型企业固定资产贷款表外应收息705p2，表外复利70502),即新增5条数据
3.ln_parm 中新增一条产品3GA(中型企业固定资产贷款)，对应2中新增的会计代码12AA

4.加完贷款科目后，涉及同步修改的后台程序有
/app/devht/src/tx/rpt/rpt555.c, 
/app/devht/src/tx/rpt/rpt55a.c, 
/app/devht/usr/src/tx/eodec/gD130.pc
/app/devht/src/tx/qury/sp8923.c


总结：加科目顺序
a.先加com_item,
b.再加gl_mst,gl_sub表
如新增科目的科目类型是2-多账户科目，还需加产品与会计科目关系（科目类型：0：汇总科目；1：单户帐户科目；2：多户帐户科目；3：无帐户科目）
c.加完看科目是否有对应产品；如有的话需要加产品dd_parm或td_parm或ln_parm，具体看加的是什么类型的科目,存款类加dd_parm或td_parm，贷款类加ln_parm，内部记账科目加in_parm
d.加完产品后，将新增的科目与新加产品的会计代码对应关系加到dc_acc_rel表中

**********************************************************************************

财务系统加科目 com_item表
总账系统加科目 gls_com_item表

两张表的字段顺序完全一样的，只是字段名称不太一样，表示的意思是一样的。

总结：
a.如新加科目记账系统是"核心",总账需要加gls_com_item和gls_com_item_rel两张表。
  财务只需要加com_item_rel对照关系表即可，后台晚上批量有程序会自动将财务com_item表与总账gls_com_item实行同步。

注意：只有底层科目要加对照关系. 其中gls_com_item_rel表中out_acc_no对应的是核心科目号，in_acc_no和in_acc_hrt对应的是总账科目号

b.如新加科目记账系统是"财务"。总账只需要加gls_com_item(财务的com_item表晚上批量自动与之同步).

注意：不用加与核心科目对照关系，因为科目记账本身就在财务

另外，如加好科目后当天财务要执行"追加产品"，那就手工将财务com_item表和gls_com_item表进行同步

**********************************************************************************
1.晚间跑批，借贷不平，看trad_19999.log里是跑哪个批量程序不对了,是否是金额不平导致的,不平的话要改数据库使借贷平衡后再做jd检查
2.改利率td_mst.rate，还需要改jzqt/tmp/4102084911450.fds   (前台交易号4102 +柜员号0849 +流水号11450.fds)

3.draw_loan_hst  贷款支付表
  draw_loan_limit 贷款限额表
  mo_prdt_prot 划款协议登记薄
  
4.
data_dic 数据字典表（记录了各个域变量所使用的数据类型，数据长度，小数位数等）
数据类型有:0-字符串 1-数字 long型  2-利率等  4-金额利息类  6-密码类    

dic_data 字典项表(记录了每个类型如note_type,billtype,ln_tx_type_hst,ln_auth_sts,billpaysts等的所有字典项的值和内容)

************************************************

交易查询痕迹记录：
新增src/tx/qury/sp0001.c
修改5191.XML,增加common_send01内容



*********************对账验印****************************
1.新建表mo_signature,上线需替换libpubdb.so
2.(1)前台新增0405.XML  0406.XML
  (2)ERR8583.XML 新增两行
  		<EH064 DESC="该账户本月已经做过对账确认"/>
      <EC229 DESC="登记对账验印确认登记薄异常"/>
  
3.后台src/tx/qury/ 下新增sp0405.c  sp0406.c 
4.tx_def表中0406交易的bitmap 26,02位确认已置1  

*********************************************************************

开关验印：/app/devqt/xml/WEB.XML 中找相应的柜员号，修改<FINGER>0</FINGER> 节点的值即可


2101 建立客户ID，建的是个人客户ID(1***),票上打的客户类型是 “公司客户”    
解决方案：把cif_basic_inf,cif_id_code_rel,cif_email_inf,cif_addr_inf这四张表的数据删掉，让业务重新做

***********************报表打包及值班打印*************************************
日终报表打包处理程序 rpt004 处理逻辑：
将/home/jzht/report/下当日如20160602所产生的24个机构的数据，移动到/home/jzht/rptpack/spool/20160602/目录下，并将目录20160602打包压缩成 RPT20160602.tar.Z,放在/home/jzht/rptpack/spool目录下。

每日值班时，用摆渡机登录生产:
(1)到目录/zhywapp/jzht/rptpack/spool下取报表打包数据RPT20160602.tar.Z
(2)到目录/zhywback/databackup/20160602e 下取以下5个数据包
数据泵导出的dmp包 expdat2_20160602.dmp.Z，expdat3_20160602.dmp.Z
平台数据包jzsw_20160602.dmp.Z
信贷数据包shjddata_20160602.dmp.Z
财税库银数据包tips20160602.dmp.gz


ATM日报表手工跑批：
eodtst rpt02b.so rpt02b 0
*****************************************************************************

新增支行涉及的初始化表：
com_branch 
gl_sub
com_tel
note_tel_auth
cash_mst
auth_tel_auth
com_tel_change
hv_brno_orno  行内系统机构号与支付系统行号对照表
HV_ORNO_BRNO  支付系统行号与行内系统机构号对照表
zjgl_mst      可用资金管理状况表
seqctl        序号控制表
com_tx_br_rel  交易机构关系表

修改模板时，要修改的几个点：
(1)机构号
(2)柜员号(第一主管，第二主管，证款柜员),柜员权限等
(3)跟业务确认柜员变更信息表com_tel_change内容
(4)日期xxxxxxxx需要改成投产的日期,其中gl_sub表中的日期改成与其他数据保持一致，一般比系统日期早一天。
(5)确认机构对照表中的支付系统行号OR_BR_NO的内容
(6)以上初始化数据加入后，须由业务开好4个账号(内部账户账号、对公活期账号、呆账准备金账号、一般准备金账号),最后再初始化com_parm表


新增柜员：需增加数据的表(柜员前两位表示机构号，如柜员0543表示为机构10501的)
com_tel
cash_mst


######################  二代平台日常维护   ###################################

卡系统返回代码-->一代平台-->核心前台
查返回码对应关系:用户jzsw
app/jzsw/xml/ERRCONVERT.xml

重启一代平台 用户：jzsw    >swman   DHC-Switch>先输入stop  再输入start， 然后输入l查看所有服务运行情况

重启二代平台 用户：ptyy   >swman   DHC-Switch>先输入stop  再输入start， 然后输入l查看所有服务运行情况


有僵持进程的重启步骤：(前台输入用户id转圈，平台日志查第三方返回正常，需要清下缓存，重启下服务)
/home/ptyy>swman
DHC-Switch>stop
DHC-Switch>clean
DHC-Switch>q

/home/ptyy>swclear 
/home/ptyy>rmipc

/home/ptyy>swman
DHC-Switch>start
DHC-Switch>l


平台日志查看目录：/home/ptyy/log/cibas_agents
查返回码对应关系: /app/ptyy/etc/svrcfg/common/ERRCONVERT.xml


***********************代收代付笔记********************************
二代平台

(平台用户ptyy/ptyy)
(数据库用户edsw/edsw)

(1)涉及平台接口：
6600 代收账户查询
6601 用户标识信息查询
6602 缴费记账
6603 退费记账
6604 账户与用户标识绑定/解绑
6605 批量代扣签约/解约
6606 用户交易明细查询
6607 单条流水详情查询
6608 绑定和签约状态查询[1]   (通过代收费类型加卡号agent_type+ac_no或用户唯一标识agent_type+userid查询返回绑定及签约代扣的当前信息)
6609 绑定和签约状态查询[2]   (通过卡号查询此卡当前绑定/签约的所有代理收费业务信息)
6610 柜员当日业务查询 
6613 缴费冲正
6614 账户验密
6621 第三方交易状态查询

(2)平台涉及4张表:
 agent_map基本配置表,配置了以下各种基础参数：
 
 代收类型agent_type，
 代收单位编号agent_unitno，
 批量代扣个人编号agent_itemno，
 代收渠道agent_channel，
 代收原子交易agent_tx,
 代收入账账号agent_acctno,
 批量代扣标志agent_bat
 
 agent_msg 代收详细信息表(记录查询流水和票据打印流水)
 
 agent_trace 代收交易流水表 (平台流水trace_no，核心流水acc_trace_no)
 
 agent_ac_user_rel 账号与用户标识关联信息表
 涉及接口 ：
 6604 账号与用户标识绑定解绑，绑定时插入一条记录并记交易流水表agent_trace；解绑时删除该条绑定数据并记交易流水表agent_trace
 6605 批量代扣签约解约，代扣签约解约应该是在账号与用户标识绑定后执行。更新表agent_ac_user_rel中ag_sts签约状态和agent_itemno代扣个人编号字段，第一次绑定时，这些字段默认为空
 
(3)核心涉及的表
批量代扣涉及的表ag_unitinfo,ag_peritemmap,pay_agent,ag_paytlcs,ag_ac_rel(过渡户与结算户关联表)



*************************相关平台配置说明*****************************************

以瑞阳供热为例：
/app/ptyy/etc/lsncfg/common 存放 接口报文配置文件rygr.xml
/app/ptyy/etc/lsncfg/rygr   存放 侦听节点rygr.lsn  节点路由rygr.pkg

/app/ptyy/etc/svrcfg/rygrs  存放 服务配置rygrs.svr  工作流配置rygr_cibas.def    


整合后架构：
/app/ptyy/etc/lsncfg/common     报文配置节点 com_agent.xml
/app/ptyy/etc/lsncfg/com_agent  存放监听com_agent.lsn  路由com_agent.pkg

/app/ptyy/etc/lsncfg/cibas      存放cibas.lsn   cibas.pkg

/app/ptyy/etc/svrcfg/self          存放 服务配置self.svr  工作流配置self_job.def   self_cibas.def
/app/ptyy/etc/svrcfg/cibas_agents  存放 服务配置cibas_agents.svr  工作流配置agent_cibas.def    
/app/ptyy/etc/svrcfg/com_agents    存放 服务配置com_agents.svr 工作流配置com_agent_svr.def   



接口报文节点格式说明：  
<CBM >
<ANALYZE>
  <FIRSTWORK >
	</FIRSTWORK>
	<PACKAGE>
   (请求报文节点字段)
  </PACKAGE>
   ....
</ANALYZE>
<INTEGRATE>
  <FIRSTWORK>
  </FIRSTWORK>
  <PACKAGE>
    (响应报文节点字段)
  </PACKAGE>
   ....
	<LASTWORK>
  </LASTWORK>
</INTEGRATE>

</CBM>


详细格式如下：  
<CBM >
<ANALYZE>
  <FIRSTWORK >
        <ITEM NAME="#com_tx_code"  TYPE="a4"  BEGIN="6" LENGTH="4"/>
  </FIRSTWORK>
  <PACKAGE CHECK="#com_tx_code=6600" RESPCD="$respcd">
       (请求报文节点字段)
    		<ITEM NAME="#len"                TYPE="n6"    FLAG="1" />
        <ITEM NAME="#com_tx_code"        TYPE="a4"    FLAG="1" />
        <ITEM NAME="#com_chnl_no"        TYPE="a2"    FLAG="1" />
        <ITEM NAME="#com_agent_type"     TYPE="a2"    FLAG="1" />
        <ITEM NAME="#com_br_no"          TYPE="a5"    FLAG="1" />
        <ITEM NAME="#com_tel"            TYPE="a4"    FLAG="1" />
        <ITEM NAME="#com_ac_no"          TYPE="a19"   FLAG="1" />
        <ITEM NAME="#com_check_acsts"    TYPE="a1" />
  </PACKAGE>
  <PACKAGE CHECK="#com_tx_code=6601" RESPCD="$respcd">
    ....(请求报文节点字段)
  </PACKAGE>
  ...
</ANALYZE>

<INTEGRATE>
  <FIRSTWORK>
        <ITEM NAME="#com_tx_code" TYPE="a4" />
  </FIRSTWORK>
  <PACKAGE CHECK="#com_tx_code=6600" RESPCD="$respcd">
  			(响应报文节点字段)
  			<ITEM NAME="#len"                TYPE="n6"    FLAG="1" />		
        <ITEM NAME="#com_tx_code"        TYPE="a4"    FLAG="1" />
        <ITEM NAME="#com_resp_code"      TYPE="a4"    FLAG="1" />
        <ITEM NAME="#com_resp_reason"    TYPE="a76"   FLAG="1" BLANK="1" />
        <ITEM NAME="#com_ac_no"          TYPE="a19"   FLAG="1" />
        <ITEM NAME="#com_opn_br_no"      TYPE="a5"    FLAG="1" />
        <ITEM NAME="#com_id_type"        TYPE="a1"    FLAG="1" />
        <ITEM NAME="#com_id_no"          TYPE="a20"   FLAG="1" />
        <ITEM NAME="#com_cif_no"         TYPE="a8"    FLAG="1" BLANK="1" />
        <ITEM NAME="#com_ac_name"        TYPE="a120"  FLAG="1" BLANK="1" />
        <ITEM NAME="#com_ac_bal"         TYPE="a16"   FLAG="1" BLANK="1" />
  </PACKAGE>
  <PACKAGE CHECK="#com_tx_code=6601" RESPCD="$respcd">
    ....(响应报文节点字段)
  </PACKAGE>
  ....
	<LASTWORK>
        <ITEM NAME="#len"  LENGTH="[0..5]" MYSELF="TRUE"/>
  </LASTWORK>
</INTEGRATE>

</CBM>
  
  




*******************************具体交易学习笔记**********************************

--------------  联机  ---------------


9950账号用户绑定解绑交易
01燃气，03供水，07供电   用户介质类型为：无卡普表，通过"用户号"到第三方查询缴费信息
02天燃气 用户介质类型为：行业IC卡，代码表号(没有普表用户)    通过"IC卡信息"或"代码表号"查询缴费信息
04供热   用户介质类型为：无卡普表，行业IC卡(没有代码表用户)  

callagnpt();调二代平台


---------------- 批量 ---------------
代收费批量代扣
核心涉及的表：ag_unitinfo, ag_peritemmap(在平台批扣签约时会先插核心这张表),pay_agent(批扣时要读的表),ag_paytlcs(批扣交易明细记录表)

gD407.c 自来水批量代扣文件数据导入(涉及的表：ag_unitinfo, ag_peritemmap,pay_agent)

(1)循环取CDKYYYYMMDD.txt文件中的一行处理
(2)依次取10位用户代码，30位银行账号，8位欠费金额，8位日期
   校验：如果日期不是当前批量日期，跳过读下一行；如果用户代码或欠费金额为0，跳过读下一行
   
   查ag_unitinfo 表中pay_type=43的记录，取到供水公司单位编号unit_no
   查ag_peritemmap表(根据查到的unit_no和从代扣文件读取到的用户代码remark)，校验该用户编号是否存在，存在则表示用户签约过批量代扣功能;
   如存在，检查查到记录中的代扣账号ag_peritemmap.ac_no介质状态note_sts是否正常，活期账号的账户状态ac_sts是否有销户*，完全冻结1，只进不出2以及非结算户S等情况
   比较账户最后的可用余额(bal-ctl_amt-hold_amt)与欠费金额,如果余额为0或不够扣费，则发短信提醒。
   如以上有未通过的，则跳到TrLog处，将导入失败的记录信息写入 批量导入失败记录文件(1cUnit_no+tx_date+tel.txt)
   如以上检查都通过，在 未处理记录表pay_agent 中插入一条数据（批处理标志sata置1-日终，result状态置1-未处理）,并记批量导入成功记录文件(0cUnit_no+tx_date+tel.txt)   
(3)当循环取完CDKYYYYMMDD.txt中的所有行后，成功导入的记录已插入ag_payment表完毕(但还未commit)，等待日终批量统一处理代扣。
   导入成功记录文件txt中记录了每笔导入的明细，以及成功总笔数总金额。导入失败记录文件txt中也记录了导入失败的所有记录，及失败笔数金额,失败原因等。
(4)循环导入步骤处理完成后，更新ag_unitinfo表中的批量处理日期beg_date,end_date为当前tx_date
   如果更新报错，则跳到ErrExit处全部sql_rollback所有数据(即已插入pay_agent表中的记录也要rollback)
   如果更新成功，则在OkExit处sql_commit所有已插表数据
   
 注意：在循环处理时，如果CDKYYYYMMDD.txt中有重复行导致插表pa_agent失败，程序会记入失败记录文件txt后继续处理下一行，直到所有行都处理完。


gD014.c 晚间批扣扣费 (涉及的表：ag_unitinfo, ag_peritemmap,pay_agent,ag_paytlcs)
(1)取ag_unitinfo表中当日符合代扣的单位信息
(2)检查单位账号ag_unitinfo.bank_acct_no 的状态。如果该单位账号的业务性质opr_attri是1-代付，检查账户余额是否足够扣减。
(3)如果该单位账号的业务性质opr_attri是0-代收, 循环取pay_agent中记录
	 根据unit_no和item_no查ag_peritemmap表，如查到记录,
   检查pay_agent.name是否和ag_peritemmap.name一致.
   检查pay_agent.ac_no的介质状态，账户状态，可用余额
   
  上面的校验通过后，根据业务性质是代发1还是代收0，进行对pay_agent.ac_no的D099存款还是D003取款。
  交易成功后，写收付费明细表ag_paytlcs.然后更新pay_agent表中对应记录的sata为0，result为0
  
  上面一次循环做完后，pay_agent中的记录已经被过了一遍，状态正常的已经收到代发或已经扣款，状态异常的也已经写到相关日志记录文件中。
  


***************************票据贴现学习小记***************************************
6802贴现审核：由贴现协议编号pact_no调后台9860(sp9860.c)查表mo_discnt回显详细信息。 点确定 后，调4912(spB912.c)修改mo_discnt.sts状态为2--已审核; 如为协议号以"E"开头，表示是电票审核，置状态为"X"
6803贴现记账：


com_tel  11601机构，1690柜  郭志红 改成了 石虎   密码 >39088   改成了<1928:
